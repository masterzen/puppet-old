#
# DO NOT MODIFY!!!!
# This file is automatically generated by racc 1.4.5
# from racc grammer file "grammar.ra".
#

require 'racc/parser'


require 'puppet'
require 'puppet/util/loadedfile'
require 'puppet/parser/lexer'
require 'puppet/parser/ast'
#require 'puppet/parser/interpreter'

module Puppet
    class ParseError < Puppet::Error; end
    class ImportError < Racc::ParseError; end
    class AlreadyImportedError < ImportError; end
end

Puppet[:typecheck] = true
Puppet[:paramcheck] = true


module Puppet

  module Parser

    class Parser < Racc::Parser

module_eval <<'..end grammar.ra modeval..idd1fbd1e2dc', 'grammar.ra', 642

# It got too annoying having code in a file that needs to be compiled.
require 'puppet/parser/parser_support'

# Make emacs happy
# Local Variables:
# mode: ruby
# End:

# $Id$

..end grammar.ra modeval..idd1fbd1e2dc

##### racc 1.4.5 generates ###

racc_reduce_table = [
 0, 0, :racc_error,
 1, 52, :_reduce_1,
 1, 52, :_reduce_none,
 1, 53, :_reduce_none,
 2, 53, :_reduce_4,
 1, 55, :_reduce_none,
 1, 55, :_reduce_none,
 1, 55, :_reduce_none,
 1, 55, :_reduce_none,
 1, 55, :_reduce_none,
 1, 55, :_reduce_none,
 1, 55, :_reduce_none,
 1, 55, :_reduce_none,
 1, 55, :_reduce_none,
 1, 55, :_reduce_none,
 1, 55, :_reduce_none,
 1, 55, :_reduce_none,
 4, 63, :_reduce_17,
 3, 63, :_reduce_18,
 2, 63, :_reduce_19,
 1, 68, :_reduce_none,
 1, 68, :_reduce_none,
 1, 69, :_reduce_none,
 3, 69, :_reduce_23,
 1, 71, :_reduce_none,
 1, 71, :_reduce_none,
 1, 71, :_reduce_none,
 1, 71, :_reduce_none,
 1, 71, :_reduce_none,
 1, 71, :_reduce_none,
 1, 71, :_reduce_none,
 1, 71, :_reduce_31,
 1, 70, :_reduce_none,
 3, 70, :_reduce_33,
 5, 56, :_reduce_34,
 5, 56, :_reduce_35,
 5, 56, :_reduce_36,
 5, 67, :_reduce_37,
 2, 57, :_reduce_38,
 1, 87, :_reduce_39,
 2, 87, :_reduce_40,
 2, 58, :_reduce_41,
 3, 88, :_reduce_42,
 3, 88, :_reduce_43,
 1, 89, :_reduce_none,
 1, 89, :_reduce_none,
 3, 89, :_reduce_46,
 1, 90, :_reduce_none,
 3, 90, :_reduce_48,
 1, 91, :_reduce_none,
 1, 91, :_reduce_none,
 3, 92, :_reduce_51,
 3, 92, :_reduce_52,
 1, 93, :_reduce_none,
 1, 93, :_reduce_none,
 4, 95, :_reduce_55,
 1, 81, :_reduce_none,
 3, 81, :_reduce_57,
 0, 82, :_reduce_none,
 1, 82, :_reduce_none,
 1, 97, :_reduce_60,
 1, 72, :_reduce_61,
 1, 74, :_reduce_62,
 1, 96, :_reduce_none,
 1, 96, :_reduce_none,
 1, 96, :_reduce_none,
 1, 96, :_reduce_none,
 1, 96, :_reduce_none,
 1, 96, :_reduce_none,
 3, 59, :_reduce_69,
 0, 83, :_reduce_70,
 1, 83, :_reduce_71,
 3, 83, :_reduce_72,
 3, 100, :_reduce_73,
 3, 101, :_reduce_74,
 1, 102, :_reduce_none,
 1, 102, :_reduce_none,
 0, 86, :_reduce_77,
 1, 86, :_reduce_78,
 3, 86, :_reduce_79,
 1, 103, :_reduce_none,
 3, 103, :_reduce_81,
 1, 94, :_reduce_none,
 1, 94, :_reduce_none,
 1, 94, :_reduce_none,
 1, 94, :_reduce_none,
 1, 94, :_reduce_none,
 1, 94, :_reduce_none,
 1, 99, :_reduce_none,
 1, 99, :_reduce_none,
 1, 99, :_reduce_none,
 1, 99, :_reduce_none,
 1, 99, :_reduce_none,
 1, 99, :_reduce_none,
 1, 99, :_reduce_none,
 1, 99, :_reduce_none,
 1, 99, :_reduce_none,
 1, 99, :_reduce_none,
 4, 76, :_reduce_98,
 3, 76, :_reduce_99,
 1, 78, :_reduce_100,
 1, 78, :_reduce_101,
 1, 75, :_reduce_102,
 4, 79, :_reduce_103,
 4, 79, :_reduce_104,
 6, 61, :_reduce_105,
 0, 106, :_reduce_none,
 4, 106, :_reduce_107,
 1, 105, :_reduce_none,
 1, 105, :_reduce_none,
 2, 107, :_reduce_110,
 5, 60, :_reduce_111,
 1, 108, :_reduce_none,
 2, 108, :_reduce_113,
 5, 109, :_reduce_114,
 4, 109, :_reduce_115,
 1, 110, :_reduce_none,
 3, 110, :_reduce_117,
 3, 77, :_reduce_118,
 1, 112, :_reduce_none,
 4, 112, :_reduce_120,
 1, 114, :_reduce_none,
 3, 114, :_reduce_122,
 3, 113, :_reduce_123,
 1, 111, :_reduce_none,
 1, 111, :_reduce_none,
 1, 111, :_reduce_none,
 1, 111, :_reduce_none,
 1, 111, :_reduce_none,
 1, 111, :_reduce_none,
 1, 111, :_reduce_none,
 1, 111, :_reduce_131,
 1, 115, :_reduce_132,
 3, 115, :_reduce_133,
 2, 62, :_reduce_134,
 6, 64, :_reduce_135,
 5, 64, :_reduce_136,
 6, 65, :_reduce_137,
 5, 65, :_reduce_138,
 6, 66, :_reduce_139,
 5, 66, :_reduce_140,
 1, 85, :_reduce_none,
 1, 80, :_reduce_none,
 1, 80, :_reduce_none,
 1, 118, :_reduce_none,
 3, 118, :_reduce_145,
 1, 120, :_reduce_none,
 1, 120, :_reduce_none,
 1, 120, :_reduce_none,
 1, 120, :_reduce_none,
 0, 54, :_reduce_150,
 0, 121, :_reduce_151,
 1, 116, :_reduce_none,
 3, 116, :_reduce_153,
 3, 116, :_reduce_154,
 1, 122, :_reduce_none,
 3, 122, :_reduce_156,
 3, 123, :_reduce_157,
 1, 123, :_reduce_158,
 3, 123, :_reduce_159,
 1, 123, :_reduce_160,
 1, 119, :_reduce_none,
 2, 119, :_reduce_162,
 1, 117, :_reduce_none,
 2, 117, :_reduce_164,
 1, 124, :_reduce_none,
 1, 124, :_reduce_none,
 1, 73, :_reduce_167,
 3, 98, :_reduce_168,
 2, 98, :_reduce_169,
 1, 104, :_reduce_none,
 1, 104, :_reduce_none,
 0, 84, :_reduce_none,
 1, 84, :_reduce_173 ]

racc_reduce_n = 174

racc_shift_n = 279

racc_action_table = [
    71,    51,    53,   210,   165,   104,    71,    51,    53,    47,
    51,    53,   187,  -129,   165,   242,    71,    51,    53,   134,
     5,    89,    71,    51,    53,    90,   128,   241,   128,   101,
    65,   207,   209,  -129,    50,    54,    65,    91,    59,  -125,
    50,    54,  -128,    45,    59,   164,    65,    56,   188,    45,
    50,    54,    65,    56,    59,   255,    50,    54,   172,    45,
    59,    92,   212,    56,  -124,    45,    71,    51,    53,    56,
   211,    33,    47,    51,    53,   191,   262,    89,     1,     5,
   207,   209,    71,    51,    53,    51,    53,    34,    35,  -125,
    33,    67,   152,    71,    51,    53,    65,     1,   235,   199,
    50,    54,    65,    65,    59,   234,    50,    54,   147,    45,
    59,    33,    65,    56,    42,    45,    50,    54,     1,    56,
    59,    36,  -127,    65,    37,    45,    72,    50,    54,    56,
   152,    59,    71,    51,    53,   205,    45,    34,    35,   165,
    56,    65,    71,    51,    53,   152,   147,   171,    71,    51,
    53,   140,   152,    34,    35,   171,    65,  -124,    71,    51,
    53,   147,    65,    65,   204,   168,    50,    54,   147,   203,
    59,    36,    65,  -127,    37,    45,    50,    54,    65,    56,
    59,  -124,    50,    54,   129,    45,    59,    36,    65,    56,
    37,    45,    50,   177,   138,    56,    59,    71,    51,    53,
   221,   113,   108,    33,   127,    56,   159,    71,    51,    53,
     1,   224,   214,    71,    51,    53,   207,   209,   225,   143,
   143,   204,   228,    71,    51,    53,   203,    65,   128,   189,
  -126,    50,    54,   191,   192,    59,   231,    65,    51,    53,
    45,    50,    54,    65,    56,    59,    47,    50,    54,  -141,
    45,    59,   125,    65,    56,  -126,    45,    50,   114,   108,
    56,    59,    51,    53,    51,    53,   113,    65,   236,   137,
    56,    50,   177,   240,   167,    59,   243,   244,    51,    53,
   113,   130,   245,  -126,    56,    51,    53,    98,   179,   143,
  -128,    65,    95,    65,   182,    50,    54,    50,   177,    59,
   171,    59,    93,    42,    45,   162,   113,    65,    56,   263,
    56,    50,   177,   265,    65,    59,    51,    53,    50,   177,
   113,    87,    59,   160,    56,    90,   136,   113,    41,  -126,
  -124,    56,    51,    53,  -127,  -125,  -129,    40,    51,    53,
   272,  -173,   273,  -130,  -125,    65,   155,  -127,   nil,    50,
   177,   nil,   nil,    59,    51,    53,   nil,   184,   113,   nil,
   nil,    65,    56,   nil,   nil,    50,   177,    65,   nil,    59,
   nil,    50,    54,   nil,   113,    59,    51,    53,    56,    42,
    45,   nil,   nil,    65,    56,   nil,   nil,    50,   177,   nil,
   nil,    59,    51,    53,   nil,   nil,   113,   nil,   nil,   nil,
    56,   nil,   nil,   nil,   nil,    65,   nil,   nil,   nil,    50,
   177,   nil,   nil,    59,   nil,   nil,   nil,   233,   113,   nil,
   nil,    65,    56,   nil,   nil,    50,   177,   nil,   nil,    59,
   nil,   nil,   nil,    42,   113,   nil,   257,    15,    56,    19,
    21,   nil,    28,     2,   nil,     8,   nil,    13,   nil,    17,
   nil,    22,   nil,   nil,     1,     5,    15,   256,    19,    21,
   nil,    28,     2,   nil,     8,   nil,    13,   nil,    17,   nil,
    22,   nil,   nil,     1,     5,   nil,   267,    15,   nil,    19,
    21,   nil,    28,     2,   nil,     8,   nil,    13,   nil,    17,
   nil,    22,   nil,   nil,     1,     5,    15,   238,    19,    21,
   nil,    28,     2,   nil,     8,   nil,    13,   nil,    17,   nil,
    22,   nil,   nil,     1,     5,   nil,   215,    15,   nil,    19,
    21,   nil,    28,     2,   nil,     8,   nil,    13,   nil,    17,
   nil,    22,   nil,   nil,     1,     5,    15,   274,    19,    21,
   nil,    28,     2,   nil,     8,   nil,    13,   nil,    17,   nil,
    22,   nil,   nil,     1,     5,   nil,   277,    15,   nil,    19,
    21,   nil,    28,     2,   nil,     8,   nil,    13,   nil,    17,
   nil,    22,   nil,   nil,     1,     5,    15,   217,    19,    21,
   nil,    28,     2,   nil,     8,   nil,    13,   nil,    17,   nil,
    22,   nil,   nil,     1,     5,   nil,   278,    15,   nil,    19,
    21,   nil,    28,     2,   nil,     8,   nil,    13,   nil,    17,
   nil,    22,   nil,   nil,     1,     5,    15,   nil,    19,    21,
   nil,    28,     2,   nil,     8,   nil,    13,   nil,    17,   nil,
    22,   nil,   nil,     1,     5,    15,   nil,    19,    21,   nil,
    28,     2,   nil,     8,   nil,    13,   nil,    17,   nil,    22,
   nil,   nil,     1,     5,    15,   nil,    19,    21,   nil,    28,
     2,   nil,     8,   nil,    13,   nil,    17,   nil,    22,   nil,
   nil,     1,     5,    15,   nil,    19,    21,   nil,    28,     2,
   nil,     8,   nil,    13,   nil,    17,   nil,    22,   nil,   nil,
     1,     5,    15,   nil,    19,    21,   nil,    28,     2,   nil,
     8,   nil,    13,   nil,    17,   nil,    22,   nil,   nil,     1,
     5 ]

racc_action_check = [
    95,    95,    95,   145,   108,    38,    72,    72,    72,    54,
   138,   138,   129,    80,   114,   201,    71,    71,    71,    71,
   129,    23,    89,    89,    89,    23,   114,   201,    54,    38,
    95,   145,   145,    64,    95,    95,    72,    23,    95,    62,
    72,    72,    66,    95,    72,   108,    71,    95,   131,    72,
    71,    71,    89,    72,    71,   213,    89,    89,   121,    71,
    89,    23,   149,    71,    75,    89,   244,   244,   244,    89,
   149,    29,    13,    13,    13,   230,   230,    61,    29,    29,
   213,   213,    15,    15,    15,    19,    19,   104,   104,   120,
     2,    13,    92,    17,    17,    17,   244,     2,   194,   139,
   244,   244,    13,    92,   244,   194,    13,    13,    92,   244,
    13,    21,    15,   244,    13,    13,    15,    15,    21,    13,
    15,   104,   118,    17,   104,    15,    15,    17,    17,    15,
   152,    17,   243,   243,   243,   142,    17,   101,   101,   143,
    17,   152,   164,   164,   164,    91,   152,   144,   165,   165,
   165,    86,   208,     8,     8,   117,    91,   116,   168,   168,
   168,    91,   243,   208,   242,   115,   243,   243,   208,   242,
   243,   101,   164,    60,   101,   243,   164,   164,   165,   243,
   164,    58,   165,   165,    55,   164,   165,     8,   168,   164,
     8,   165,   168,   168,    85,   165,   168,   228,   228,   228,
   166,   168,   167,    98,    52,   168,    98,    47,    47,    47,
    98,   169,   154,   190,   190,   190,   154,   154,   170,   171,
   172,   140,   174,    41,    41,    41,   140,   228,   177,   133,
    46,   228,   228,   133,   133,   228,   185,    47,   211,   211,
   228,    47,    47,   190,   228,    47,   187,   190,   190,    45,
    47,   190,    44,    41,    47,   112,   190,    41,    41,    40,
   190,    41,    67,    67,   196,   196,    41,   211,   196,    83,
    41,   211,   211,   200,   109,   211,   203,   204,   212,   212,
   211,    67,   206,    70,   211,   125,   125,    32,   125,    90,
    81,    67,    28,   196,   126,    67,    67,   196,   196,    67,
   227,   196,    25,    67,    67,   102,   196,   212,    67,   233,
   196,   212,   212,   234,   125,   212,   260,   260,   125,   125,
   212,    22,   125,    99,   212,    97,    74,   125,    11,   248,
   249,   125,   179,   179,   251,   252,   253,     9,   128,   128,
   261,   262,   263,    79,    78,   260,    93,    76,   nil,   260,
   260,   nil,   nil,   260,   137,   137,   nil,   128,   260,   nil,
   nil,   179,   260,   nil,   nil,   179,   179,   128,   nil,   179,
   nil,   128,   128,   nil,   179,   128,   235,   235,   179,   128,
   128,   nil,   nil,   137,   128,   nil,   nil,   137,   137,   nil,
   nil,   137,   127,   127,   nil,   nil,   137,   nil,   nil,   nil,
   137,   nil,   nil,   nil,   nil,   235,   nil,   nil,   nil,   235,
   235,   nil,   nil,   235,   nil,   nil,   nil,   193,   235,   nil,
   nil,   127,   235,   nil,   nil,   127,   127,   nil,   nil,   127,
   nil,   nil,   nil,   127,   127,   nil,   218,   193,   127,   193,
   193,   nil,   193,   193,   nil,   193,   nil,   193,   nil,   193,
   nil,   193,   nil,   nil,   193,   193,   218,   216,   218,   218,
   nil,   218,   218,   nil,   218,   nil,   218,   nil,   218,   nil,
   218,   nil,   nil,   218,   218,   nil,   239,   216,   nil,   216,
   216,   nil,   216,   216,   nil,   216,   nil,   216,   nil,   216,
   nil,   216,   nil,   nil,   216,   216,   239,   199,   239,   239,
   nil,   239,   239,   nil,   239,   nil,   239,   nil,   239,   nil,
   239,   nil,   nil,   239,   239,   nil,   160,   199,   nil,   199,
   199,   nil,   199,   199,   nil,   199,   nil,   199,   nil,   199,
   nil,   199,   nil,   nil,   199,   199,   160,   265,   160,   160,
   nil,   160,   160,   nil,   160,   nil,   160,   nil,   160,   nil,
   160,   nil,   nil,   160,   160,   nil,   275,   265,   nil,   265,
   265,   nil,   265,   265,   nil,   265,   nil,   265,   nil,   265,
   nil,   265,   nil,   nil,   265,   265,   275,   162,   275,   275,
   nil,   275,   275,   nil,   275,   nil,   275,   nil,   275,   nil,
   275,   nil,   nil,   275,   275,   nil,   276,   162,   nil,   162,
   162,   nil,   162,   162,   nil,   162,   nil,   162,   nil,   162,
   nil,   162,   nil,   nil,   162,   162,   276,   nil,   276,   276,
   nil,   276,   276,   nil,   276,   nil,   276,   nil,   276,   nil,
   276,   nil,   nil,   276,   276,   136,   nil,   136,   136,   nil,
   136,   136,   nil,   136,   nil,   136,   nil,   136,   nil,   136,
   nil,   nil,   136,   136,   273,   nil,   273,   273,   nil,   273,
   273,   nil,   273,   nil,   273,   nil,   273,   nil,   273,   nil,
   nil,   273,   273,    27,   nil,    27,    27,   nil,    27,    27,
   nil,    27,   nil,    27,   nil,    27,   nil,    27,   nil,   nil,
    27,    27,     0,   nil,     0,     0,   nil,     0,     0,   nil,
     0,   nil,     0,   nil,     0,   nil,     0,   nil,   nil,     0,
     0 ]

racc_action_pointer = [
   665,   nil,    53,   nil,   nil,   nil,   nil,   nil,   150,   331,
   nil,   322,   nil,    70,   nil,    80,   nil,    91,   nil,    82,
   nil,    74,   280,    19,   nil,   302,   nil,   646,   279,    34,
   nil,   nil,   253,   nil,   nil,   nil,   nil,   nil,    -5,   nil,
   222,   221,   nil,   nil,   232,   247,   210,   205,   nil,   nil,
   nil,   nil,   194,   nil,     7,   174,   nil,   nil,   161,   nil,
   153,    75,    19,   nil,    13,   nil,    22,   259,   nil,   nil,
   263,    14,     4,   nil,   320,    44,   327,   nil,   324,   323,
    -7,   270,   nil,   263,   nil,   184,   130,   nil,   nil,    20,
   252,   124,    71,   346,   nil,    -2,   nil,   319,   166,   317,
   nil,   134,   299,   nil,    84,   nil,   nil,   nil,    -5,   264,
   nil,   nil,   235,   nil,     5,   127,   137,   145,   102,   nil,
    69,    41,   nil,   nil,   nil,   282,   289,   389,   335,   -25,
   nil,    26,   nil,   224,   nil,   nil,   608,   351,     7,    93,
   189,   nil,   130,   130,   137,   -16,   nil,   nil,   nil,    47,
   nil,   nil,   109,   nil,   169,   nil,   nil,   nil,   nil,   nil,
   509,   nil,   570,   nil,   140,   146,   193,   165,   156,   204,
   211,   182,   183,   nil,   213,   nil,   nil,   207,   nil,   329,
   nil,   nil,   nil,   nil,   nil,   214,   nil,   244,   nil,   nil,
   211,   nil,   nil,   410,    88,   nil,   261,   nil,   nil,   490,
   251,     5,   nil,   263,   264,   nil,   275,   nil,   131,   nil,
   nil,   235,   275,    33,   nil,   nil,   450,   nil,   429,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   290,   195,   nil,
    66,   nil,   nil,   281,   307,   373,   nil,   nil,   nil,   469,
   nil,   nil,   132,   130,    64,   nil,   nil,   nil,   309,   310,
   nil,   314,   315,   316,   nil,   nil,   nil,   nil,   nil,   nil,
   313,   333,   334,   336,   nil,   530,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   627,   nil,   549,   589,   nil,   nil ]

racc_action_default = [
  -150,  -143,  -174,   -15,    -3,  -141,   -16,    -5,  -174,  -174,
    -6,  -174,    -7,  -142,    -8,  -174,    -9,  -174,   -10,  -174,
   -11,  -174,   -39,  -174,   -12,  -174,   -13,    -1,  -174,  -174,
   -14,    -2,  -150,  -142,  -148,  -147,  -146,  -149,  -150,  -144,
   -77,   -70,   -31,   -29,  -174,   -62,   -30,  -174,   -32,   -19,
  -102,  -100,   -20,  -101,   -61,   -21,   -60,   -22,   -24,  -131,
   -25,  -174,   -26,  -130,   -27,  -167,   -28,  -174,  -108,   -92,
   -88,  -174,  -174,   -95,  -174,   -89,   -93,  -109,   -90,   -97,
   -91,   -96,   -94,  -174,  -132,  -134,  -150,   -40,   -41,  -174,
   -70,  -150,  -150,  -174,    -4,  -174,   -38,  -174,  -174,  -174,
  -163,  -174,  -174,  -161,  -174,   -75,   -76,   -78,  -174,  -172,
   -66,   -71,   -63,   -62,   -61,   -58,   -64,  -172,   -67,   -56,
   -65,  -174,  -129,  -128,   -68,  -174,  -174,  -174,  -174,  -174,
   -18,  -174,   -80,  -174,  -169,  -110,  -174,  -174,  -174,  -174,
  -151,  -152,  -174,  -174,  -172,  -174,   -45,   -61,   -47,  -174,
   -54,   -53,  -150,   -44,  -174,   279,   -69,  -165,  -164,  -166,
  -174,  -162,  -174,  -145,  -174,  -174,  -174,  -173,   -59,  -174,
  -174,  -173,   -70,  -126,  -174,  -118,  -119,   -61,  -124,  -174,
  -127,  -125,  -103,   -23,   -99,  -174,   -33,  -174,   -17,  -168,
  -174,  -170,  -171,  -174,  -174,  -116,  -174,  -112,  -133,  -174,
  -174,  -174,  -155,  -158,  -160,  -104,  -174,   -50,  -174,   -49,
   -43,  -174,  -174,  -174,   -42,  -138,  -174,  -140,  -174,   -74,
   -73,   -37,   -79,   -57,   -34,   -35,   -72,  -172,  -174,  -121,
  -172,   -98,   -81,  -106,  -174,  -174,  -111,  -113,  -136,  -174,
  -153,  -154,  -174,  -174,  -174,   -36,   -46,   -86,   -82,   -83,
   -51,   -87,   -84,   -85,   -52,   -48,  -137,  -139,   -55,  -123,
  -174,  -174,  -171,  -174,  -105,  -174,  -117,  -135,  -156,  -157,
  -159,  -122,  -120,  -174,  -115,  -174,  -174,  -114,  -107 ]

racc_goto_table = [
    23,    27,   117,    94,    43,   124,   176,   174,   107,    49,
   166,   119,   202,   190,    31,    46,   105,    32,   170,   195,
   197,    84,   145,   154,   250,   254,    25,    23,   246,    97,
    39,   133,   110,    88,    74,   264,    86,    77,   196,   109,
   169,   175,    64,   112,   115,   206,   100,   230,    85,   139,
    99,   144,   103,    38,   102,   183,   200,   201,    43,    96,
   229,   174,    62,   131,   158,   nil,   nil,   nil,   nil,    46,
   122,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   195,   237,
   nil,   nil,   nil,   213,   nil,   nil,   nil,   nil,   nil,   nil,
   120,   nil,   nil,   nil,   nil,   nil,    64,   nil,   nil,   nil,
   141,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   260,   nil,   nil,   157,   268,   nil,    62,   266,    43,    43,
   nil,   nil,   nil,   161,   185,   nil,   163,   173,   258,    46,
    46,   261,   124,   227,   nil,   222,    23,   193,   223,   173,
   198,   271,   174,   105,   nil,   nil,   nil,   226,   nil,   nil,
   nil,   nil,   nil,   nil,   122,    66,    64,    64,   nil,   110,
    23,   216,    23,   218,   nil,   nil,   122,   nil,    60,    94,
   112,   nil,   nil,   nil,   181,   nil,    62,    62,   nil,   nil,
   nil,   173,   nil,   123,   nil,   nil,   181,   nil,   nil,   nil,
   nil,   nil,    94,    23,    94,   nil,   118,   122,   173,    23,
   239,   nil,   247,   247,   nil,   nil,   nil,   nil,   122,    66,
   nil,   nil,   nil,   248,   248,    94,    23,   120,    23,   nil,
   nil,   nil,    60,   nil,   nil,   122,   nil,   nil,   181,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   173,   nil,    23,
   253,   253,   nil,   nil,   nil,   181,   151,   151,   nil,   nil,
    58,    94,    94,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   252,   252,   173,   nil,   122,    23,   275,   123,   nil,    66,
    66,   nil,   nil,    23,   276,    23,    23,   nil,   116,   123,
   180,   nil,    60,    60,   181,   nil,   nil,   nil,   nil,   122,
   nil,   nil,   180,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,    58,   nil,   nil,   151,   nil,   181,
   123,   nil,    68,   nil,    83,   nil,   nil,   nil,   nil,   nil,
   nil,   123,    48,   118,    73,   nil,    73,   nil,   150,   150,
   nil,   nil,   nil,   nil,   180,   nil,   nil,   nil,   123,   nil,
   nil,   nil,   nil,    79,   126,    79,   nil,   nil,   nil,   nil,
   nil,   180,   nil,   123,   123,   nil,    73,   nil,   nil,   nil,
   nil,   nil,   178,   151,    58,    58,   251,   251,   132,   135,
   nil,   nil,   nil,   nil,   178,    79,    48,   123,   nil,   nil,
    73,    73,   nil,   nil,   nil,   nil,   142,   nil,   nil,   150,
   180,   nil,   156,   nil,   nil,   nil,   nil,   nil,    73,    79,
    79,   nil,   123,   nil,    73,   116,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   180,   178,    79,   nil,   nil,
   nil,   nil,   nil,    79,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   178,   nil,   nil,   nil,    48,   186,   nil,
   nil,   nil,   nil,   nil,   nil,   150,   nil,   nil,   249,   249,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   219,   220,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   178,    73,    73,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   232,   nil,   nil,
   nil,   nil,    79,    79,   nil,   nil,   nil,   178,   nil,    73,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    79,   nil,
   nil,   nil,   nil,   nil,   nil,   259,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,    73,   nil,   nil,
   269,   270,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,    73,    73,   nil,   nil,    79,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,    79,    79 ]

racc_goto_check = [
    34,     2,    32,     4,    26,    47,    62,    60,    51,    17,
    33,    44,    72,    53,     3,    27,    49,    29,    33,    60,
    58,    27,    38,    38,    43,    43,     1,    34,    39,    34,
    69,    52,    26,    37,    54,    55,    29,    56,    57,    35,
    31,    61,    24,    27,    30,    33,     3,    63,    64,    65,
    66,    32,     3,    67,    68,    20,    70,    71,    26,     5,
    62,    60,    23,    17,    73,   nil,   nil,   nil,   nil,    27,
    24,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    60,    58,
   nil,   nil,   nil,    38,   nil,   nil,   nil,   nil,   nil,   nil,
    23,   nil,   nil,   nil,   nil,   nil,    24,   nil,   nil,   nil,
     3,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
    53,   nil,   nil,    29,    72,   nil,    23,    60,    26,    26,
   nil,   nil,   nil,    69,    17,   nil,    69,    27,    33,    27,
    27,    33,    47,    32,   nil,    51,    34,     2,    44,    27,
    27,    62,    60,    49,   nil,   nil,   nil,    49,   nil,   nil,
   nil,   nil,   nil,   nil,    24,    25,    24,    24,   nil,    26,
    34,     2,    34,     2,   nil,   nil,    24,   nil,    22,     4,
    27,   nil,   nil,   nil,    23,   nil,    23,    23,   nil,   nil,
   nil,    27,   nil,    25,   nil,   nil,    23,   nil,   nil,   nil,
   nil,   nil,     4,    34,     4,   nil,    22,    24,    27,    34,
     2,   nil,    26,    26,   nil,   nil,   nil,   nil,    24,    25,
   nil,   nil,   nil,    27,    27,     4,    34,    23,    34,   nil,
   nil,   nil,    22,   nil,   nil,    24,   nil,   nil,    23,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,    27,   nil,    34,
    24,    24,   nil,   nil,   nil,    23,    22,    22,   nil,   nil,
    21,     4,     4,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
    23,    23,    27,   nil,    24,    34,     2,    25,   nil,    25,
    25,   nil,   nil,    34,     2,    34,    34,   nil,    21,    25,
    22,   nil,    22,    22,    23,   nil,   nil,   nil,   nil,    24,
   nil,   nil,    22,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,    21,   nil,   nil,    22,   nil,    23,
    25,   nil,    48,   nil,    48,   nil,   nil,   nil,   nil,   nil,
   nil,    25,    28,    22,    28,   nil,    28,   nil,    21,    21,
   nil,   nil,   nil,   nil,    22,   nil,   nil,   nil,    25,   nil,
   nil,   nil,   nil,    46,    48,    46,   nil,   nil,   nil,   nil,
   nil,    22,   nil,    25,    25,   nil,    28,   nil,   nil,   nil,
   nil,   nil,    21,    22,    21,    21,    22,    22,    48,    48,
   nil,   nil,   nil,   nil,    21,    46,    28,    25,   nil,   nil,
    28,    28,   nil,   nil,   nil,   nil,    48,   nil,   nil,    21,
    22,   nil,    48,   nil,   nil,   nil,   nil,   nil,    28,    46,
    46,   nil,    25,   nil,    28,    21,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,    22,    21,    46,   nil,   nil,
   nil,   nil,   nil,    46,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,    21,   nil,   nil,   nil,    28,    28,   nil,
   nil,   nil,   nil,   nil,   nil,    21,   nil,   nil,    21,    21,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,    48,    48,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,    21,    28,    28,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,    48,   nil,   nil,
   nil,   nil,    46,    46,   nil,   nil,   nil,    21,   nil,    28,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    46,   nil,
   nil,   nil,   nil,   nil,   nil,    48,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,    28,   nil,   nil,
    48,    48,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,    28,    28,   nil,   nil,    46,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,    46,    46 ]

racc_goto_pointer = [
   nil,    26,     1,    14,   -24,    30,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,    -4,   nil,   nil,
   -72,   237,   155,    49,    29,   142,    -9,     2,   309,    15,
     3,   -75,   -39,   -99,     0,    -1,   nil,    10,   -69,  -180,
   nil,   nil,   nil,  -187,   -30,   nil,   328,   -36,   297,   -24,
   nil,   -32,   -40,  -120,    19,  -198,    22,   -99,  -117,   nil,
  -118,   -84,  -119,  -132,    29,   -37,    18,    45,    16,    22,
   -84,   -83,  -128,   -34 ]

racc_goto_default = [
   nil,   nil,   nil,   153,     4,     7,    10,    12,    14,    16,
    18,    20,    24,    26,    30,     3,     6,   nil,    52,    55,
    57,    75,    76,    78,    80,    81,    69,    70,     9,    11,
   nil,   nil,   nil,   nil,    61,   nil,    29,   nil,   nil,   146,
   208,   148,   149,   nil,   nil,   121,    63,    82,   nil,   111,
   106,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   194,
    44,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil ]

racc_token_table = {
 false => 0,
 Object.new => 1,
 :LBRACK => 2,
 :DQTEXT => 3,
 :SQTEXT => 4,
 :RBRACK => 5,
 :LBRACE => 6,
 :RBRACE => 7,
 :SYMBOL => 8,
 :FARROW => 9,
 :COMMA => 10,
 :TRUE => 11,
 :FALSE => 12,
 :EQUALS => 13,
 :LESSEQUAL => 14,
 :NOTEQUAL => 15,
 :DOT => 16,
 :COLON => 17,
 :LLCOLLECT => 18,
 :RRCOLLECT => 19,
 :QMARK => 20,
 :LPAREN => 21,
 :RPAREN => 22,
 :ISEQUAL => 23,
 :GREATEREQUAL => 24,
 :GREATERTHAN => 25,
 :LESSTHAN => 26,
 :IF => 27,
 :ELSE => 28,
 :IMPORT => 29,
 :DEFINE => 30,
 :ELSIF => 31,
 :VARIABLE => 32,
 :CLASS => 33,
 :INHERITS => 34,
 :NODE => 35,
 :BOOLEAN => 36,
 :NAME => 37,
 :SEMIC => 38,
 :CASE => 39,
 :DEFAULT => 40,
 :AT => 41,
 :LCOLLECT => 42,
 :RCOLLECT => 43,
 :CLASSNAME => 44,
 :CLASSREF => 45,
 :NOT => 46,
 :OR => 47,
 :AND => 48,
 :UNDEF => 49,
 :PARROW => 50 }

racc_use_result_var = true

racc_nt_base = 51

Racc_arg = [
 racc_action_table,
 racc_action_check,
 racc_action_default,
 racc_action_pointer,
 racc_goto_table,
 racc_goto_check,
 racc_goto_default,
 racc_goto_pointer,
 racc_nt_base,
 racc_reduce_table,
 racc_token_table,
 racc_shift_n,
 racc_reduce_n,
 racc_use_result_var ]

Racc_token_to_s_table = [
'$end',
'error',
'LBRACK',
'DQTEXT',
'SQTEXT',
'RBRACK',
'LBRACE',
'RBRACE',
'SYMBOL',
'FARROW',
'COMMA',
'TRUE',
'FALSE',
'EQUALS',
'LESSEQUAL',
'NOTEQUAL',
'DOT',
'COLON',
'LLCOLLECT',
'RRCOLLECT',
'QMARK',
'LPAREN',
'RPAREN',
'ISEQUAL',
'GREATEREQUAL',
'GREATERTHAN',
'LESSTHAN',
'IF',
'ELSE',
'IMPORT',
'DEFINE',
'ELSIF',
'VARIABLE',
'CLASS',
'INHERITS',
'NODE',
'BOOLEAN',
'NAME',
'SEMIC',
'CASE',
'DEFAULT',
'AT',
'LCOLLECT',
'RCOLLECT',
'CLASSNAME',
'CLASSREF',
'NOT',
'OR',
'AND',
'UNDEF',
'PARROW',
'$start',
'program',
'statements',
'nil',
'statement',
'resource',
'virtualresource',
'collection',
'assignment',
'casestatement',
'ifstatement',
'import',
'fstatement',
'definition',
'hostclass',
'nodedef',
'resourceoverride',
'funcvalues',
'namestrings',
'resourcerefs',
'namestring',
'name',
'variable',
'type',
'boolean',
'funcrvalue',
'selector',
'quotedtext',
'resourceref',
'classname',
'resourceinstances',
'endsemi',
'params',
'endcomma',
'classref',
'anyparams',
'at',
'collectrhand',
'collstatements',
'collstatement',
'colljoin',
'collexpr',
'colllval',
'simplervalue',
'resourceinst',
'resourcename',
'undef',
'array',
'rvalue',
'param',
'addparam',
'anyparam',
'rvalues',
'comma',
'iftest',
'else',
'ifntest',
'caseopts',
'caseopt',
'casevalues',
'selectlhand',
'svalues',
'selectval',
'sintvalues',
'qtexts',
'argumentlist',
'classparent',
'hostnames',
'nodeparent',
'hostname',
'nothing',
'arguments',
'argument',
'classnameordefault']

Racc_debug_parser = false

##### racc system variables end #####

 # reduce 0 omitted

module_eval <<'.,.,', 'grammar.ra', 30
  def _reduce_1( val, _values, result )
    if val[0]
        # Make sure we always return an array.
        if val[0].is_a?(AST::ASTArray)
            if val[0].children.empty?
                result = nil
            else
                result = val[0]
            end
        else
            result = aryfy(val[0])
        end
    else
        result = nil
    end
   result
  end
.,.,

 # reduce 2 omitted

 # reduce 3 omitted

module_eval <<'.,.,', 'grammar.ra', 46
  def _reduce_4( val, _values, result )
    if val[0] and val[1]
        if val[0].instance_of?(AST::ASTArray)
            val[0].push(val[1])
            result = val[0]
        else
            result = ast AST::ASTArray, :children => [val[0],val[1]]
        end
    elsif obj = (val[0] || val[1])
        result = obj
    else result = nil
    end
   result
  end
.,.,

 # reduce 5 omitted

 # reduce 6 omitted

 # reduce 7 omitted

 # reduce 8 omitted

 # reduce 9 omitted

 # reduce 10 omitted

 # reduce 11 omitted

 # reduce 12 omitted

 # reduce 13 omitted

 # reduce 14 omitted

 # reduce 15 omitted

 # reduce 16 omitted

module_eval <<'.,.,', 'grammar.ra', 68
  def _reduce_17( val, _values, result )
    args = aryfy(val[2])
    result = ast AST::Function,
        :name => val[0],
        :arguments => args,
        :ftype => :statement
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 74
  def _reduce_18( val, _values, result )
    result = ast AST::Function,
        :name => val[0],
        :arguments => AST::ASTArray.new({}),
        :ftype => :statement
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 81
  def _reduce_19( val, _values, result )
    args = aryfy(val[1])
    result = ast AST::Function,
        :name => val[0],
        :arguments => args,
        :ftype => :statement
   result
  end
.,.,

 # reduce 20 omitted

 # reduce 21 omitted

 # reduce 22 omitted

module_eval <<'.,.,', 'grammar.ra', 91
  def _reduce_23( val, _values, result )
    result = aryfy(val[0], val[2])
    result.line = @lexer.line
    result.file = @lexer.file
   result
  end
.,.,

 # reduce 24 omitted

 # reduce 25 omitted

 # reduce 26 omitted

 # reduce 27 omitted

 # reduce 28 omitted

 # reduce 29 omitted

 # reduce 30 omitted

module_eval <<'.,.,', 'grammar.ra', 104
  def _reduce_31( val, _values, result )
                    result = ast AST::Name, :value => val[0]
   result
  end
.,.,

 # reduce 32 omitted

module_eval <<'.,.,', 'grammar.ra', 115
  def _reduce_33( val, _values, result )
    unless val[0].is_a?(AST::ASTArray)
        val[0] = aryfy(val[0])
    end

    val[0].push(val[2])

    result = val[0]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 136
  def _reduce_34( val, _values, result )
    array = val[2]
    if array.instance_of?(AST::ResourceInstance)
        array = [array]
    end
    result = ast AST::ASTArray

    # this iterates across each specified resourceinstance
    array.each { |instance|
        unless instance.instance_of?(AST::ResourceInstance)
            raise Puppet::Dev, "Got something that isn't an instance"
        end
        # now, i need to somehow differentiate between those things with
        # arrays in their names, and normal things
        result.push ast(AST::Resource,
            :type => val[0],
            :title => instance[0],
            :params => instance[1])
    }
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 139
  def _reduce_35( val, _values, result )
    # This is a deprecated syntax.
    error "All resource specifications require names"
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 142
  def _reduce_36( val, _values, result )
    # a defaults setting for a type
    result = ast(AST::ResourceDefaults, :type => val[0], :params => val[2])
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 147
  def _reduce_37( val, _values, result )
    result = ast AST::ResourceOverride, :object => val[0], :params => val[2]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 174
  def _reduce_38( val, _values, result )
    type = val[0]

    if (type == :exported and ! Puppet[:storeconfigs]) and ! Puppet[:parseonly]
        Puppet.warning addcontext("You cannot collect without storeconfigs being set")
    end

    if val[1].is_a? AST::ResourceDefaults
        error "Defaults are not virtualizable"
    end

    method = type.to_s + "="

    # Just mark our resources as exported and pass them through.
    if val[1].instance_of?(AST::ASTArray)
        val[1].each do |obj|
            obj.send(method, true)
        end
    else
        val[1].send(method, true)
    end

    result = val[1]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 175
  def _reduce_39( val, _values, result )
 result = :virtual
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 176
  def _reduce_40( val, _values, result )
 result = :exported
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 199
  def _reduce_41( val, _values, result )
    if val[0] =~ /^[a-z]/
        Puppet.warning addcontext("Collection names must now be capitalized")
    end
    type = val[0].downcase
    args = {:type => type}

    if val[1].is_a?(AST::CollExpr)
        args[:query] = val[1]
        args[:query].type = type
        args[:form] = args[:query].form
    else
        args[:form] = val[1]
    end
    if args[:form] == :exported and ! Puppet[:storeconfigs] and ! Puppet[:parseonly]
        Puppet.warning addcontext("You cannot collect exported resources without storeconfigs being set; the collection will be ignored")
    end
    result = ast AST::Collection, args
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 209
  def _reduce_42( val, _values, result )
    if val[1]
        result = val[1]
        result.form = :virtual
    else
        result = :virtual
    end
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 217
  def _reduce_43( val, _values, result )
    if val[1]
        result = val[1]
        result.form = :exported
    else
        result = :exported
    end
   result
  end
.,.,

 # reduce 44 omitted

 # reduce 45 omitted

module_eval <<'.,.,', 'grammar.ra', 225
  def _reduce_46( val, _values, result )
    result = ast AST::CollExpr, :test1 => val[0], :oper => val[1], :test2 => val[2]
   result
  end
.,.,

 # reduce 47 omitted

module_eval <<'.,.,', 'grammar.ra', 231
  def _reduce_48( val, _values, result )
    result = val[1]
    result.parens = true
   result
  end
.,.,

 # reduce 49 omitted

 # reduce 50 omitted

module_eval <<'.,.,', 'grammar.ra', 239
  def _reduce_51( val, _values, result )
    result = ast AST::CollExpr, :test1 => val[0], :oper => val[1], :test2 => val[2]
    #result = ast AST::CollExpr
    #result.push *val
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 244
  def _reduce_52( val, _values, result )
    result = ast AST::CollExpr, :test1 => val[0], :oper => val[1], :test2 => val[2]
    #result = ast AST::CollExpr
    #result.push *val
   result
  end
.,.,

 # reduce 53 omitted

 # reduce 54 omitted

module_eval <<'.,.,', 'grammar.ra', 251
  def _reduce_55( val, _values, result )
    result = ast AST::ResourceInstance, :children => [val[0],val[2]]
   result
  end
.,.,

 # reduce 56 omitted

module_eval <<'.,.,', 'grammar.ra', 261
  def _reduce_57( val, _values, result )
    if val[0].instance_of?(AST::ResourceInstance)
        result = ast AST::ASTArray, :children => [val[0],val[2]]
    else
        val[0].push val[2]
        result = val[0]
    end
   result
  end
.,.,

 # reduce 58 omitted

 # reduce 59 omitted

module_eval <<'.,.,', 'grammar.ra', 268
  def _reduce_60( val, _values, result )
    result = ast AST::Undef, :value => :undef
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 272
  def _reduce_61( val, _values, result )
    result = ast AST::Name, :value => val[0]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 276
  def _reduce_62( val, _values, result )
    result = ast AST::Type, :value => val[0]
   result
  end
.,.,

 # reduce 63 omitted

 # reduce 64 omitted

 # reduce 65 omitted

 # reduce 66 omitted

 # reduce 67 omitted

 # reduce 68 omitted

module_eval <<'.,.,', 'grammar.ra', 292
  def _reduce_69( val, _values, result )
    if val[0] =~ /::/
        raise Puppet::ParseError, "Cannot assign to variables in other namespaces"
    end
    # this is distinct from referencing a variable
    variable = ast AST::Name, :value => val[0]
    result = ast AST::VarDef, :name => variable, :value => val[2]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 297
  def _reduce_70( val, _values, result )
    result = ast AST::ASTArray
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 297
  def _reduce_71( val, _values, result )
 result = val[0]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 306
  def _reduce_72( val, _values, result )
    if val[0].instance_of?(AST::ASTArray)
        val[0].push(val[2])
        result = val[0]
    else
        result = ast AST::ASTArray, :children => [val[0],val[2]]
    end
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 310
  def _reduce_73( val, _values, result )
    result = ast AST::ResourceParam, :param => val[0], :value => val[2]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 315
  def _reduce_74( val, _values, result )
    result = ast AST::ResourceParam, :param => val[0], :value => val[2],
                                     :add => true
   result
  end
.,.,

 # reduce 75 omitted

 # reduce 76 omitted

module_eval <<'.,.,', 'grammar.ra', 323
  def _reduce_77( val, _values, result )
    result = ast AST::ASTArray
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 323
  def _reduce_78( val, _values, result )
 result = val[0]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 332
  def _reduce_79( val, _values, result )
    if val[0].instance_of?(AST::ASTArray)
        val[0].push(val[2])
        result = val[0]
    else
        result = ast AST::ASTArray, :children => [val[0],val[2]]
    end
   result
  end
.,.,

 # reduce 80 omitted

module_eval <<'.,.,', 'grammar.ra', 341
  def _reduce_81( val, _values, result )
    if val[0].instance_of?(AST::ASTArray)
        result = val[0].push(val[2])
    else
        result = ast AST::ASTArray, :children => [val[0],val[2]]
    end
   result
  end
.,.,

 # reduce 82 omitted

 # reduce 83 omitted

 # reduce 84 omitted

 # reduce 85 omitted

 # reduce 86 omitted

 # reduce 87 omitted

 # reduce 88 omitted

 # reduce 89 omitted

 # reduce 90 omitted

 # reduce 91 omitted

 # reduce 92 omitted

 # reduce 93 omitted

 # reduce 94 omitted

 # reduce 95 omitted

 # reduce 96 omitted

 # reduce 97 omitted

module_eval <<'.,.,', 'grammar.ra', 368
  def _reduce_98( val, _values, result )
    args = aryfy(val[2])
    result = ast AST::Function,
        :name => val[0],
        :arguments => args,
        :ftype => :rvalue
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 373
  def _reduce_99( val, _values, result )
    result = ast AST::Function,
        :name => val[0],
        :arguments => AST::ASTArray.new({}),
        :ftype => :rvalue
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 377
  def _reduce_100( val, _values, result )
    result = ast AST::String, :value => val[0]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 379
  def _reduce_101( val, _values, result )
    result = ast AST::FlatString, :value => val[0]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 383
  def _reduce_102( val, _values, result )
    result = ast AST::Boolean, :value => val[0]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 388
  def _reduce_103( val, _values, result )
    Puppet.warning addcontext("Deprecation notice:  Resource references should now be capitalized")
    result = ast AST::ResourceReference, :type => val[0], :title => val[2]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 390
  def _reduce_104( val, _values, result )
    result = ast AST::ResourceReference, :type => val[0], :title => val[2]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 403
  def _reduce_105( val, _values, result )
    args = {
        :test => val[1],
        :statements => val[3]
    }

    if val[5]
        args[:else] = val[5]
    end

    result = ast AST::IfStatement, args
   result
  end
.,.,

 # reduce 106 omitted

module_eval <<'.,.,', 'grammar.ra', 408
  def _reduce_107( val, _values, result )
    result = ast AST::Else, :statements => val[2]
   result
  end
.,.,

 # reduce 108 omitted

 # reduce 109 omitted

module_eval <<'.,.,', 'grammar.ra', 416
  def _reduce_110( val, _values, result )
 result = ast AST::Not, :test => val[1]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 424
  def _reduce_111( val, _values, result )
    options = val[3]
    unless options.instance_of?(AST::ASTArray)
        options = ast AST::ASTArray, :children => [val[3]]
    end
    result = ast AST::CaseStatement, :test => val[1], :options => options
   result
  end
.,.,

 # reduce 112 omitted

module_eval <<'.,.,', 'grammar.ra', 434
  def _reduce_113( val, _values, result )
    if val[0].instance_of?(AST::ASTArray)
        val[0].push val[1]
        result = val[0]
    else
        result = ast AST::ASTArray, :children => [val[0], val[1]]
    end
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 438
  def _reduce_114( val, _values, result )
    result = ast AST::CaseOpt, :value => val[0], :statements => val[3]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 443
  def _reduce_115( val, _values, result )
    result = ast(AST::CaseOpt,
        :value => val[0],
        :statements => ast(AST::ASTArray)
    )
   result
  end
.,.,

 # reduce 116 omitted

module_eval <<'.,.,', 'grammar.ra', 453
  def _reduce_117( val, _values, result )
    if val[0].instance_of?(AST::ASTArray)
        val[0].push(val[2])
        result = val[0]
    else
        result = ast AST::ASTArray, :children => [val[0],val[2]]
    end
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 457
  def _reduce_118( val, _values, result )
    result = ast AST::Selector, :param => val[0], :values => val[2]
   result
  end
.,.,

 # reduce 119 omitted

module_eval <<'.,.,', 'grammar.ra', 459
  def _reduce_120( val, _values, result )
 result = val[1]
   result
  end
.,.,

 # reduce 121 omitted

module_eval <<'.,.,', 'grammar.ra', 470
  def _reduce_122( val, _values, result )
    if val[0].instance_of?(AST::ASTArray)
        val[0].push(val[2])
        result = val[0]
    else
        result = ast AST::ASTArray, :children => [val[0],val[2]]
    end
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 474
  def _reduce_123( val, _values, result )
    result = ast AST::ResourceParam, :param => val[0], :value => val[2]
   result
  end
.,.,

 # reduce 124 omitted

 # reduce 125 omitted

 # reduce 126 omitted

 # reduce 127 omitted

 # reduce 128 omitted

 # reduce 129 omitted

 # reduce 130 omitted

module_eval <<'.,.,', 'grammar.ra', 485
  def _reduce_131( val, _values, result )
    result = ast AST::Default, :value => val[0]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 487
  def _reduce_132( val, _values, result )
 result = [val[0].value]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 491
  def _reduce_133( val, _values, result )
    results = val[0] << val[2].value
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 499
  def _reduce_134( val, _values, result )
    val[1].each do |file|
        import(file)
    end

    result = AST::ASTArray.new(:children => [])
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 509
  def _reduce_135( val, _values, result )
    newdefine classname(val[1]), :arguments => val[2], :code => val[4]
    @lexer.indefine = false
    result = nil

#}           | DEFINE NAME argumentlist parent LBRACE RBRACE {
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 513
  def _reduce_136( val, _values, result )
    newdefine classname(val[1]), :arguments => val[2]
    @lexer.indefine = false
    result = nil
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 521
  def _reduce_137( val, _values, result )
    # Our class gets defined in the parent namespace, not our own.
    @lexer.namepop
    newclass classname(val[1]), :code => val[4], :parent => val[2]
    result = nil
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 526
  def _reduce_138( val, _values, result )
    # Our class gets defined in the parent namespace, not our own.
    @lexer.namepop
    newclass classname(val[1]), :parent => val[2]
    result = nil
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 531
  def _reduce_139( val, _values, result )
    newnode val[1], :parent => val[2], :code => val[4]
    result = nil
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 534
  def _reduce_140( val, _values, result )
    newnode val[1], :parent => val[2]
    result = nil
   result
  end
.,.,

 # reduce 141 omitted

 # reduce 142 omitted

 # reduce 143 omitted

 # reduce 144 omitted

module_eval <<'.,.,', 'grammar.ra', 548
  def _reduce_145( val, _values, result )
    result = val[0]
    result = [result] unless result.is_a?(Array)
    result << val[2]
   result
  end
.,.,

 # reduce 146 omitted

 # reduce 147 omitted

 # reduce 148 omitted

 # reduce 149 omitted

module_eval <<'.,.,', 'grammar.ra', 557
  def _reduce_150( val, _values, result )
    result = nil
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 561
  def _reduce_151( val, _values, result )
    result = ast AST::ASTArray, :children => []
   result
  end
.,.,

 # reduce 152 omitted

module_eval <<'.,.,', 'grammar.ra', 566
  def _reduce_153( val, _values, result )
    result = nil
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 570
  def _reduce_154( val, _values, result )
    result = val[1]
    result = [result] unless result[0].is_a?(Array)
   result
  end
.,.,

 # reduce 155 omitted

module_eval <<'.,.,', 'grammar.ra', 577
  def _reduce_156( val, _values, result )
    result = val[0]
    result = [result] unless result[0].is_a?(Array)
    result << val[2]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 582
  def _reduce_157( val, _values, result )
    Puppet.warning addcontext("Deprecation notice: must now include '$' in prototype")
    result = [val[0], val[2]]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 586
  def _reduce_158( val, _values, result )
    Puppet.warning addcontext("Deprecation notice: must now include '$' in prototype")
    result = [val[0]]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 588
  def _reduce_159( val, _values, result )
    result = [val[0], val[2]]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 590
  def _reduce_160( val, _values, result )
    result = [val[0]]
   result
  end
.,.,

 # reduce 161 omitted

module_eval <<'.,.,', 'grammar.ra', 595
  def _reduce_162( val, _values, result )
    result = val[1]
   result
  end
.,.,

 # reduce 163 omitted

module_eval <<'.,.,', 'grammar.ra', 600
  def _reduce_164( val, _values, result )
    result = val[1]
   result
  end
.,.,

 # reduce 165 omitted

 # reduce 166 omitted

module_eval <<'.,.,', 'grammar.ra', 606
  def _reduce_167( val, _values, result )
    result = ast AST::Variable, :value => val[0]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 614
  def _reduce_168( val, _values, result )
    if val[1].instance_of?(AST::ASTArray)
        result = val[1]
    else
        result = ast AST::ASTArray, :children => [val[1]]
    end
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 616
  def _reduce_169( val, _values, result )
    result = ast AST::ASTArray
   result
  end
.,.,

 # reduce 170 omitted

 # reduce 171 omitted

 # reduce 172 omitted

module_eval <<'.,.,', 'grammar.ra', 621
  def _reduce_173( val, _values, result )
 result = nil
   result
  end
.,.,

 def _reduce_none( val, _values, result )
  result
 end

    end   # class Parser

  end   # module Parser

end   # module Puppet
