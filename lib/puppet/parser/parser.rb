#
# DO NOT MODIFY!!!!
# This file is automatically generated by racc 1.4.5
# from racc grammer file "grammar.ra".
#

require 'racc/parser'


require 'puppet'
require 'puppet/util/loadedfile'
require 'puppet/parser/lexer'
require 'puppet/parser/ast'
#require 'puppet/parser/interpreter'

module Puppet
    class ParseError < Puppet::Error; end
    class ImportError < Racc::ParseError; end
    class AlreadyImportedError < ImportError; end
end

Puppet[:typecheck] = true
Puppet[:paramcheck] = true


module Puppet

  module Parser

    class Parser < Racc::Parser

module_eval <<'..end grammar.ra modeval..id6e3ca7aacc', 'grammar.ra', 786

# It got too annoying having code in a file that needs to be compiled.
require 'puppet/parser/parser_support'

# Make emacs happy
# Local Variables:
# mode: ruby
# End:

# $Id$

..end grammar.ra modeval..id6e3ca7aacc

##### racc 1.4.5 generates ###

racc_reduce_table = [
 0, 0, :racc_error,
 1, 63, :_reduce_1,
 1, 63, :_reduce_none,
 1, 64, :_reduce_none,
 2, 64, :_reduce_4,
 1, 66, :_reduce_none,
 1, 66, :_reduce_none,
 1, 66, :_reduce_none,
 1, 66, :_reduce_none,
 1, 66, :_reduce_none,
 1, 66, :_reduce_none,
 1, 66, :_reduce_none,
 1, 66, :_reduce_none,
 1, 66, :_reduce_none,
 1, 66, :_reduce_none,
 1, 66, :_reduce_none,
 1, 66, :_reduce_none,
 1, 66, :_reduce_none,
 4, 74, :_reduce_18,
 5, 74, :_reduce_19,
 3, 74, :_reduce_20,
 2, 74, :_reduce_21,
 1, 80, :_reduce_none,
 1, 80, :_reduce_none,
 3, 80, :_reduce_24,
 3, 80, :_reduce_25,
 1, 81, :_reduce_none,
 1, 81, :_reduce_none,
 1, 81, :_reduce_none,
 1, 81, :_reduce_none,
 1, 81, :_reduce_none,
 1, 81, :_reduce_none,
 1, 81, :_reduce_none,
 1, 81, :_reduce_33,
 5, 67, :_reduce_34,
 5, 67, :_reduce_35,
 5, 67, :_reduce_36,
 5, 78, :_reduce_37,
 2, 68, :_reduce_38,
 1, 97, :_reduce_39,
 2, 97, :_reduce_40,
 6, 69, :_reduce_41,
 2, 69, :_reduce_42,
 3, 98, :_reduce_43,
 3, 98, :_reduce_44,
 1, 99, :_reduce_none,
 1, 99, :_reduce_none,
 3, 99, :_reduce_47,
 1, 100, :_reduce_none,
 3, 100, :_reduce_49,
 1, 101, :_reduce_50,
 1, 101, :_reduce_51,
 3, 102, :_reduce_52,
 3, 102, :_reduce_53,
 1, 103, :_reduce_none,
 1, 103, :_reduce_none,
 4, 105, :_reduce_56,
 1, 91, :_reduce_none,
 3, 91, :_reduce_58,
 0, 92, :_reduce_none,
 1, 92, :_reduce_none,
 1, 107, :_reduce_61,
 1, 83, :_reduce_62,
 1, 85, :_reduce_63,
 1, 106, :_reduce_none,
 1, 106, :_reduce_none,
 1, 106, :_reduce_none,
 1, 106, :_reduce_none,
 1, 106, :_reduce_none,
 1, 106, :_reduce_none,
 3, 70, :_reduce_70,
 3, 79, :_reduce_71,
 0, 93, :_reduce_72,
 1, 93, :_reduce_73,
 3, 93, :_reduce_74,
 3, 110, :_reduce_75,
 3, 112, :_reduce_76,
 1, 113, :_reduce_none,
 1, 113, :_reduce_none,
 0, 96, :_reduce_79,
 1, 96, :_reduce_80,
 3, 96, :_reduce_81,
 1, 114, :_reduce_none,
 3, 114, :_reduce_83,
 1, 104, :_reduce_none,
 1, 104, :_reduce_none,
 1, 104, :_reduce_none,
 1, 104, :_reduce_none,
 1, 104, :_reduce_none,
 1, 104, :_reduce_none,
 1, 111, :_reduce_none,
 1, 111, :_reduce_none,
 1, 111, :_reduce_none,
 1, 111, :_reduce_none,
 1, 111, :_reduce_none,
 1, 111, :_reduce_none,
 1, 111, :_reduce_none,
 1, 111, :_reduce_none,
 1, 111, :_reduce_none,
 1, 111, :_reduce_none,
 4, 87, :_reduce_100,
 3, 87, :_reduce_101,
 1, 89, :_reduce_102,
 1, 89, :_reduce_103,
 1, 86, :_reduce_104,
 4, 82, :_reduce_105,
 4, 82, :_reduce_106,
 6, 72, :_reduce_107,
 5, 72, :_reduce_108,
 0, 116, :_reduce_none,
 4, 116, :_reduce_110,
 3, 116, :_reduce_111,
 1, 109, :_reduce_none,
 3, 109, :_reduce_113,
 3, 109, :_reduce_114,
 3, 109, :_reduce_115,
 3, 109, :_reduce_116,
 3, 109, :_reduce_117,
 3, 109, :_reduce_118,
 2, 109, :_reduce_119,
 3, 109, :_reduce_120,
 3, 109, :_reduce_121,
 3, 109, :_reduce_122,
 3, 109, :_reduce_123,
 3, 109, :_reduce_124,
 3, 109, :_reduce_125,
 2, 109, :_reduce_126,
 3, 109, :_reduce_127,
 3, 109, :_reduce_128,
 3, 109, :_reduce_129,
 5, 71, :_reduce_130,
 1, 117, :_reduce_none,
 2, 117, :_reduce_132,
 5, 118, :_reduce_133,
 4, 118, :_reduce_134,
 1, 119, :_reduce_none,
 3, 119, :_reduce_136,
 3, 88, :_reduce_137,
 1, 121, :_reduce_none,
 4, 121, :_reduce_139,
 1, 123, :_reduce_none,
 3, 123, :_reduce_141,
 3, 122, :_reduce_142,
 1, 120, :_reduce_none,
 1, 120, :_reduce_none,
 1, 120, :_reduce_none,
 1, 120, :_reduce_none,
 1, 120, :_reduce_none,
 1, 120, :_reduce_none,
 1, 120, :_reduce_none,
 1, 120, :_reduce_150,
 1, 124, :_reduce_151,
 3, 124, :_reduce_152,
 2, 73, :_reduce_153,
 6, 75, :_reduce_154,
 5, 75, :_reduce_155,
 6, 76, :_reduce_156,
 5, 76, :_reduce_157,
 6, 77, :_reduce_158,
 5, 77, :_reduce_159,
 1, 95, :_reduce_160,
 1, 90, :_reduce_161,
 1, 90, :_reduce_162,
 1, 127, :_reduce_none,
 3, 127, :_reduce_164,
 1, 129, :_reduce_165,
 1, 129, :_reduce_166,
 1, 129, :_reduce_167,
 1, 129, :_reduce_168,
 0, 65, :_reduce_169,
 0, 130, :_reduce_170,
 1, 125, :_reduce_none,
 3, 125, :_reduce_172,
 3, 125, :_reduce_173,
 1, 131, :_reduce_none,
 3, 131, :_reduce_175,
 3, 132, :_reduce_176,
 1, 132, :_reduce_177,
 3, 132, :_reduce_178,
 1, 132, :_reduce_179,
 1, 128, :_reduce_none,
 2, 128, :_reduce_181,
 1, 126, :_reduce_none,
 2, 126, :_reduce_183,
 1, 133, :_reduce_none,
 1, 133, :_reduce_none,
 1, 84, :_reduce_186,
 3, 108, :_reduce_187,
 4, 108, :_reduce_188,
 2, 108, :_reduce_189,
 1, 115, :_reduce_none,
 1, 115, :_reduce_none,
 0, 94, :_reduce_none,
 1, 94, :_reduce_193 ]

racc_reduce_n = 194

racc_shift_n = 321

racc_action_table = [
    73,    52,    55,   279,   181,    38,    39,   277,    86,   239,
    50,   181,    87,   245,   245,   276,   154,   140,   247,   247,
    69,    73,    52,    55,   133,    88,    38,    39,   237,   238,
   133,    45,    38,    39,   122,    54,    57,   237,   238,    63,
    40,    69,   150,    42,    51,    74,   188,   159,    59,    89,
   142,    80,    45,    73,    52,    55,    54,    57,    45,   119,
    63,    40,  -143,   164,    42,    51,    74,    40,   253,    59,
    42,  -149,    80,    69,    73,    52,    55,   294,   152,   153,
   154,   140,   141,   143,    45,   241,   132,  -146,    54,    57,
   293,   256,    63,   240,    69,   150,   157,    51,    74,   266,
   159,    59,   192,   142,    80,    45,    73,    52,    55,    54,
    57,    45,   157,    63,    36,   191,   164,   177,    51,    74,
  -143,     4,    59,    36,  -145,    80,    69,    73,    52,    55,
     4,   152,   153,   154,   140,   141,   143,    45,   262,    36,
   126,    54,    57,    52,    55,    63,     4,    69,   150,  -147,
    51,    74,   134,   159,    59,   250,   142,    80,    45,    73,
    52,    55,    54,    57,    45,   133,    63,   154,   140,   164,
  -148,    51,    74,    52,    55,    59,   195,   302,    80,    69,
    73,    52,    55,   184,   152,   153,   154,   140,   141,   143,
    45,   270,   211,   126,    54,    57,   195,   212,    63,  -146,
    69,   150,  -144,    51,    74,  -144,   159,    59,  -146,   142,
    80,    45,    73,    52,    55,    54,    57,    45,    86,    63,
    33,    34,   164,  -143,    51,    74,   183,   132,    59,   181,
   272,    80,    69,    73,    52,    55,  -160,   152,   153,   154,
   140,   141,   143,    45,  -148,   242,  -147,    54,    57,   237,
   238,    63,  -145,    69,    36,   155,    51,    74,   278,   157,
    59,     4,     8,    80,    45,    73,    52,    55,    54,    57,
   193,   169,    63,   126,   195,   196,   190,    51,    74,   190,
   290,    59,   291,   292,    80,    69,    73,    52,    55,   152,
   153,   154,   140,   141,   143,   170,    45,   101,   233,  -144,
    54,    57,   195,   196,    63,   183,    69,   171,   172,    51,
    74,    95,   304,    59,   272,   306,    80,    45,    73,    52,
    55,    54,    57,    87,  -145,    63,   152,   153,   154,   140,
    51,    74,  -143,  -146,    59,  -144,  -148,    80,    69,    73,
    52,    55,   152,   153,   154,   140,   141,   143,   308,    45,
    93,   178,  -145,    54,    57,    44,   186,    63,   314,    69,
  -193,    37,    51,    74,   180,   183,    59,   269,   nil,    80,
    45,    73,    52,    55,    54,    57,   nil,   nil,    63,   152,
   153,   154,   140,    51,    74,   nil,   nil,    59,   nil,   nil,
    80,    69,    73,    52,    55,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,    45,   nil,   nil,   nil,    54,    57,   nil,   nil,
    63,   nil,    69,   nil,   nil,    51,    74,   nil,   nil,    59,
   nil,   nil,    80,    45,    73,    52,    55,    54,    57,   nil,
   nil,    63,   nil,   nil,   nil,   nil,    51,    74,   nil,   nil,
    59,   nil,   nil,    80,    69,    73,    52,    55,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,    45,   nil,   nil,   nil,    54,
    57,   nil,   nil,    63,   nil,    69,   nil,   nil,    51,    74,
   nil,   nil,    59,   nil,   nil,    80,    45,    73,    52,    55,
    54,    57,   nil,   nil,    63,   nil,   nil,   nil,   nil,    51,
    74,   nil,   nil,    59,   nil,   nil,    80,    69,    73,    52,
    55,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    45,   nil,
   nil,   nil,    54,    57,   nil,   nil,    63,   nil,    69,   nil,
   nil,    51,    74,   nil,   nil,    59,   nil,   nil,    80,    45,
   nil,   nil,   nil,    54,    57,   151,   nil,    63,   nil,   nil,
   nil,   nil,    51,    74,   146,   150,    59,   nil,   nil,    80,
   nil,   nil,   nil,   142,   144,   147,   149,    73,    52,    55,
   nil,   nil,   nil,    73,    52,    55,   137,   nil,   nil,   nil,
   nil,   nil,   nil,    73,    52,    55,   nil,   145,   148,   nil,
   nil,   152,   153,   154,   140,   141,   143,   nil,    45,    73,
    52,    55,    54,   109,    45,   nil,    63,   nil,    54,    57,
   nil,   107,    63,   nil,    45,    59,   nil,    51,    54,    57,
   nil,    59,    63,    73,    52,    55,   nil,    51,   nil,   nil,
    45,    59,   nil,   nil,    54,    57,   nil,   nil,    63,    73,
    52,    55,   nil,    51,   nil,   nil,   nil,    59,   nil,    73,
    52,    55,   nil,   nil,    45,    73,    52,    55,    54,    57,
   nil,   nil,    63,   nil,   nil,   nil,   nil,    51,   nil,   nil,
    45,    59,   nil,   nil,    54,    57,   nil,   nil,    63,   nil,
    45,   nil,   nil,    51,    54,    57,    45,    59,    63,   nil,
    54,    57,   nil,    51,    63,   nil,   nil,    59,   nil,    51,
    73,    52,    55,    59,   nil,   nil,    50,    52,    55,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,    73,    52,    55,   nil,
   nil,   nil,    73,    52,    55,   nil,    47,   nil,   nil,   nil,
   nil,    45,    73,    52,    55,    54,    57,    45,   nil,    63,
   nil,    54,    57,   nil,    51,    63,   nil,    45,    59,    48,
    51,    54,    57,    45,    59,    63,   nil,    54,   204,   nil,
    51,    63,   nil,    45,    59,   nil,   107,    54,    57,   nil,
    59,    63,    52,    55,    52,    55,    51,   nil,   nil,   nil,
    59,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
    52,    55,   128,   nil,   274,   nil,    52,    55,   nil,   nil,
   nil,   nil,    45,   nil,    45,   nil,    54,    57,    54,   204,
    63,   nil,    63,   nil,    48,    51,   264,   107,   nil,    59,
    45,    59,    52,    55,    54,   204,    45,   nil,    63,   nil,
    54,    57,   nil,   107,    63,   nil,   nil,    59,    48,    51,
    52,    55,   nil,    59,   nil,   nil,    52,    55,   nil,   nil,
   nil,   nil,    45,   nil,   nil,   nil,    54,   204,   nil,   nil,
    63,    52,    55,   nil,   nil,   107,   nil,   nil,   nil,    59,
    45,   nil,   nil,   nil,    54,   204,    45,   nil,    63,   nil,
    54,   204,   nil,   107,    63,    52,    55,    59,   206,   107,
   nil,    45,   nil,    59,   nil,    54,   204,   nil,   nil,    63,
   nil,    52,    55,   nil,   107,   nil,   nil,   nil,    59,   nil,
   nil,    52,    55,   nil,   nil,    45,   nil,    52,    55,    54,
   204,   199,   nil,    63,   nil,   nil,   nil,   nil,   107,   nil,
   nil,    45,    59,   nil,   nil,    54,    57,   nil,   nil,    63,
   nil,    45,   nil,    48,    51,    54,   204,    45,    59,    63,
   nil,    54,    57,   nil,   107,    63,   146,   150,    59,    48,
    51,   nil,   nil,   nil,    59,   142,   144,   147,   149,   146,
   150,   nil,   nil,   nil,   nil,   nil,   nil,   210,   142,   144,
   147,   149,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   152,   153,   154,   140,   141,   143,   nil,
   nil,   nil,   145,   148,   146,   150,   152,   153,   154,   140,
   141,   143,   nil,   142,   144,   147,   149,   146,   150,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   142,   144,   147,   149,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   145,   148,   nil,
   nil,   152,   153,   154,   140,   141,   143,   nil,   nil,   299,
   nil,   148,   146,   150,   152,   153,   154,   140,   141,   143,
   nil,   142,   144,   147,   149,   nil,   nil,   nil,   nil,   nil,
    18,   nil,    23,    26,   295,     1,     5,   nil,    12,   nil,
    16,   nil,    20,   nil,    27,   145,   148,     4,     8,   152,
   153,   154,   140,   141,   143,    18,   297,    23,    26,   nil,
     1,     5,   nil,    12,   nil,    16,   nil,    20,   nil,    27,
   nil,   nil,     4,     8,   nil,   224,   nil,    18,   nil,    23,
    26,   nil,     1,     5,   nil,    12,   nil,    16,   nil,    20,
   nil,    27,   nil,   nil,     4,     8,    18,   273,    23,    26,
   nil,     1,     5,   nil,    12,   nil,    16,   nil,    20,   nil,
    27,   nil,   nil,     4,     8,   nil,   312,   nil,    18,   nil,
    23,    26,   nil,     1,     5,   nil,    12,   nil,    16,   nil,
    20,   nil,    27,   nil,   nil,     4,     8,    18,   315,    23,
    26,   nil,     1,     5,   nil,    12,   nil,    16,   nil,    20,
   nil,    27,   nil,   nil,     4,     8,   nil,   259,   nil,    18,
   nil,    23,    26,   nil,     1,     5,   nil,    12,   nil,    16,
   nil,    20,   nil,    27,   nil,   nil,     4,     8,    18,   317,
    23,    26,   nil,     1,     5,   nil,    12,   nil,    16,   nil,
    20,   nil,    27,   nil,   nil,     4,     8,   nil,   319,   nil,
    18,   nil,    23,    26,   nil,     1,     5,   nil,    12,   nil,
    16,   nil,    20,   nil,    27,   nil,   nil,     4,     8,    18,
   251,    23,    26,   nil,     1,     5,   nil,    12,   nil,    16,
   nil,    20,   nil,    27,   nil,   nil,     4,     8,   nil,   320,
   nil,    18,   nil,    23,    26,   nil,     1,     5,   nil,    12,
   nil,    16,   nil,    20,   nil,    27,   nil,   nil,     4,     8,
    18,   nil,    23,    26,   nil,     1,     5,   nil,    12,   nil,
    16,   nil,    20,   nil,    27,   nil,   nil,     4,     8,    18,
   nil,    23,    26,   nil,     1,     5,   nil,    12,   nil,    16,
   nil,    20,   nil,    27,   nil,   nil,     4,     8,    18,   nil,
    23,    26,   nil,     1,     5,   nil,    12,   nil,    16,   nil,
    20,   nil,    27,   nil,   nil,     4,     8 ]

racc_action_check = [
    34,    34,    34,   235,   126,   119,   119,   231,    21,   160,
    57,   109,    21,   294,   172,   231,   227,   227,   294,   172,
    34,    80,    80,    80,   109,    21,    12,    12,   235,   235,
    57,    34,   122,   122,    41,    34,    34,   160,   160,    34,
   119,    80,   220,   119,    34,    34,   126,   236,    34,    21,
   220,    34,    80,   154,   154,   154,    80,    80,   236,    41,
    80,    12,   111,   236,    12,    80,    80,   122,   179,    80,
   122,    78,    80,   154,   140,   140,   140,   249,   220,   220,
   220,   220,   220,   220,   154,   163,   200,    77,   154,   154,
   249,   182,   154,   163,   140,   219,   183,   154,   154,   200,
   159,   154,   129,   219,   154,   140,    69,    69,    69,   140,
   140,   159,   184,   140,   101,   129,   159,   101,   140,   140,
    76,   101,   140,    26,    72,   140,    69,   141,   141,   141,
    26,   219,   219,   219,   219,   219,   219,    69,   189,     5,
   190,    69,    69,    23,    23,    69,     5,   141,   222,    68,
    69,    69,    67,    89,    69,   173,   222,    69,   141,   152,
   152,   152,   141,   141,    89,   204,   141,   226,   226,    89,
    66,   141,   141,   170,   170,   141,   268,   268,   141,   152,
    18,    18,    18,   114,   222,   222,   222,   222,   222,   222,
   152,   212,   136,   169,   152,   152,   136,   136,   152,   113,
    18,   217,    79,   152,   152,    65,    88,   152,    62,   217,
   152,    18,   150,   150,   150,    18,    18,    88,    61,    18,
     1,     1,    88,    60,    18,    18,   158,    53,    18,   157,
   224,    18,   150,   142,   142,   142,    51,   217,   217,   217,
   217,   217,   217,   150,    82,   168,    84,   150,   150,   168,
   168,   150,    49,   142,    28,    85,   150,   150,   234,    87,
   150,    28,    28,   150,   142,   149,   149,   149,   142,   142,
   131,    90,   142,    44,   131,   131,   127,   142,   142,   243,
   245,   142,   247,   248,   142,   149,   148,   148,   148,   215,
   215,   215,   215,   215,   215,    92,   149,    35,   156,   115,
   149,   149,   156,   156,   149,   258,   148,    93,    94,   149,
   149,    27,   272,   149,   273,   276,   149,   148,   147,   147,
   147,   148,   148,    97,   282,   148,   216,   216,   216,   216,
   148,   148,   284,   285,   148,   286,   287,   148,   147,   146,
   146,   146,   223,   223,   223,   223,   223,   223,   289,   147,
    25,   102,   106,   147,   147,    15,   120,   147,   301,   146,
   302,     9,   147,   147,   108,   110,   147,   209,   nil,   147,
   146,   143,   143,   143,   146,   146,   nil,   nil,   146,   214,
   214,   214,   214,   146,   146,   nil,   nil,   146,   nil,   nil,
   146,   143,   144,   144,   144,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   143,   nil,   nil,   nil,   143,   143,   nil,   nil,
   143,   nil,   144,   nil,   nil,   143,   143,   nil,   nil,   143,
   nil,   nil,   143,   144,    33,    33,    33,   144,   144,   nil,
   nil,   144,   nil,   nil,   nil,   nil,   144,   144,   nil,   nil,
   144,   nil,   nil,   144,    33,   153,   153,   153,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,    33,   nil,   nil,   nil,    33,
    33,   nil,   nil,    33,   nil,   153,   nil,   nil,    33,    33,
   nil,   nil,    33,   nil,   nil,    33,   153,   145,   145,   145,
   153,   153,   nil,   nil,   153,   nil,   nil,   nil,   nil,   153,
   153,   nil,   nil,   153,   nil,   nil,   153,   145,    74,    74,
    74,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   145,   nil,
   nil,   nil,   145,   145,   nil,   nil,   145,   nil,    74,   nil,
   nil,   145,   145,   nil,   nil,   145,   nil,   nil,   145,    74,
   nil,   nil,   nil,    74,    74,    83,   nil,    74,   nil,   nil,
   nil,   nil,    74,    74,    83,    83,    74,   nil,   nil,    74,
   nil,   nil,   nil,    83,    83,    83,    83,    37,    37,    37,
   nil,   nil,   nil,    73,    73,    73,    73,   nil,   nil,   nil,
   nil,   nil,   nil,   188,   188,   188,   nil,    83,    83,   nil,
   nil,    83,    83,    83,    83,    83,    83,   nil,    37,    50,
    50,    50,    37,    37,    73,   nil,    37,   nil,    73,    73,
   nil,    37,    73,   nil,   188,    37,   nil,    73,   188,   188,
   nil,    73,   188,   269,   269,   269,   nil,   188,   nil,   nil,
    50,   188,   nil,   nil,    50,    50,   nil,   nil,    50,   181,
   181,   181,   nil,    50,   nil,   nil,   nil,    50,   nil,   290,
   290,   290,   nil,   nil,   269,   291,   291,   291,   269,   269,
   nil,   nil,   269,   nil,   nil,   nil,   nil,   269,   nil,   nil,
   181,   269,   nil,   nil,   181,   181,   nil,   nil,   181,   nil,
   290,   nil,   nil,   181,   290,   290,   291,   181,   290,   nil,
   291,   291,   nil,   290,   291,   nil,   nil,   290,   nil,   291,
    20,    20,    20,   291,   nil,   nil,    16,    16,    16,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,    86,    86,    86,   nil,
   nil,   nil,   180,   180,   180,   nil,    16,   nil,   nil,   nil,
   nil,    20,   194,   194,   194,    20,    20,    16,   nil,    20,
   nil,    16,    16,   nil,    20,    16,   nil,    86,    20,    16,
    16,    86,    86,   180,    16,    86,   nil,   180,   180,   nil,
    86,   180,   nil,   194,    86,   nil,   180,   194,   194,   nil,
   180,   194,    47,    47,   206,   206,   194,   nil,   nil,   nil,
   194,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   229,   229,    47,   nil,   229,   nil,   192,   192,   nil,   nil,
   nil,   nil,    47,   nil,   206,   nil,    47,    47,   206,   206,
    47,   nil,   206,   nil,    47,    47,   192,   206,   nil,    47,
   229,   206,   240,   240,   229,   229,   192,   nil,   229,   nil,
   192,   192,   nil,   229,   192,   nil,   nil,   229,   192,   192,
   241,   241,   nil,   192,   nil,   nil,   277,   277,   nil,   nil,
   nil,   nil,   240,   nil,   nil,   nil,   240,   240,   nil,   nil,
   240,   300,   300,   nil,   nil,   240,   nil,   nil,   nil,   240,
   241,   nil,   nil,   nil,   241,   241,   277,   nil,   241,   nil,
   277,   277,   nil,   241,   277,   134,   134,   241,   134,   277,
   nil,   300,   nil,   277,   nil,   300,   300,   nil,   nil,   300,
   nil,   133,   133,   nil,   300,   nil,   nil,   nil,   300,   nil,
   nil,   155,   155,   nil,   nil,   134,   nil,   132,   132,   134,
   134,   133,   nil,   134,   nil,   nil,   nil,   nil,   134,   nil,
   nil,   133,   134,   nil,   nil,   133,   133,   nil,   nil,   133,
   nil,   155,   nil,   133,   133,   155,   155,   132,   133,   155,
   nil,   132,   132,   nil,   155,   132,   221,   221,   155,   132,
   132,   nil,   nil,   nil,   132,   221,   221,   221,   221,   135,
   135,   nil,   nil,   nil,   nil,   nil,   nil,   135,   135,   135,
   135,   135,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   221,   221,   221,   221,   221,   221,   nil,
   nil,   nil,   135,   135,   100,   100,   135,   135,   135,   135,
   135,   135,   nil,   100,   100,   100,   100,   218,   218,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   218,   218,   218,   218,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   100,   100,   nil,
   nil,   100,   100,   100,   100,   100,   100,   nil,   nil,   260,
   nil,   218,    99,    99,   218,   218,   218,   218,   218,   218,
   nil,    99,    99,    99,    99,   nil,   nil,   nil,   nil,   nil,
   260,   nil,   260,   260,   250,   260,   260,   nil,   260,   nil,
   260,   nil,   260,   nil,   260,    99,    99,   260,   260,    99,
    99,    99,    99,    99,    99,   250,   252,   250,   250,   nil,
   250,   250,   nil,   250,   nil,   250,   nil,   250,   nil,   250,
   nil,   nil,   250,   250,   nil,   151,   nil,   252,   nil,   252,
   252,   nil,   252,   252,   nil,   252,   nil,   252,   nil,   252,
   nil,   252,   nil,   nil,   252,   252,   151,   225,   151,   151,
   nil,   151,   151,   nil,   151,   nil,   151,   nil,   151,   nil,
   151,   nil,   nil,   151,   151,   nil,   296,   nil,   225,   nil,
   225,   225,   nil,   225,   225,   nil,   225,   nil,   225,   nil,
   225,   nil,   225,   nil,   nil,   225,   225,   296,   304,   296,
   296,   nil,   296,   296,   nil,   296,   nil,   296,   nil,   296,
   nil,   296,   nil,   nil,   296,   296,   nil,   186,   nil,   304,
   nil,   304,   304,   nil,   304,   304,   nil,   304,   nil,   304,
   nil,   304,   nil,   304,   nil,   nil,   304,   304,   186,   306,
   186,   186,   nil,   186,   186,   nil,   186,   nil,   186,   nil,
   186,   nil,   186,   nil,   nil,   186,   186,   nil,   316,   nil,
   306,   nil,   306,   306,   nil,   306,   306,   nil,   306,   nil,
   306,   nil,   306,   nil,   306,   nil,   nil,   306,   306,   316,
   178,   316,   316,   nil,   316,   316,   nil,   316,   nil,   316,
   nil,   316,   nil,   316,   nil,   nil,   316,   316,   nil,   318,
   nil,   178,   nil,   178,   178,   nil,   178,   178,   nil,   178,
   nil,   178,   nil,   178,   nil,   178,   nil,   nil,   178,   178,
   318,   nil,   318,   318,   nil,   318,   318,   nil,   318,   nil,
   318,   nil,   318,   nil,   318,   nil,   nil,   318,   318,    30,
   nil,    30,    30,   nil,    30,    30,   nil,    30,   nil,    30,
   nil,    30,   nil,    30,   nil,   nil,    30,    30,     0,   nil,
     0,     0,   nil,     0,     0,   nil,     0,   nil,     0,   nil,
     0,   nil,     0,   nil,   nil,     0,     0 ]

racc_action_pointer = [
  1300,   207,   nil,   nil,   nil,   101,   nil,   nil,   nil,   355,
   nil,   nil,    23,   nil,   nil,   349,   694,   nil,   178,   nil,
   688,     6,   nil,   140,   nil,   350,    85,   269,   216,   nil,
  1281,   nil,   nil,   422,    -2,   262,   nil,   555,   nil,   nil,
   nil,    24,   nil,   nil,   235,   nil,   nil,   759,   nil,   231,
   587,   234,   nil,   217,   nil,   nil,   nil,     8,   nil,   nil,
   202,   216,   187,   nil,   nil,   184,   149,   131,   128,   104,
   nil,   nil,   103,   561,   496,   nil,    99,    66,    50,   181,
    19,   nil,   223,   529,   225,   249,   704,   221,   184,   131,
   265,   nil,   285,   307,   286,   nil,   nil,   317,   nil,  1027,
   979,    76,   345,   nil,   nil,   nil,   331,   nil,   325,     2,
   355,    41,   nil,   178,   165,   278,   nil,   nil,   nil,     2,
   350,   nil,    29,   nil,   nil,   nil,    -5,   266,   nil,    92,
   nil,   265,   904,   888,   872,   944,   187,   nil,   nil,   nil,
    72,   125,   231,   369,   390,   475,   337,   316,   284,   263,
   210,  1098,   157,   443,    51,   898,   293,   220,   216,    78,
   -11,   nil,   nil,    69,   nil,   nil,   nil,   nil,   201,   155,
   170,   nil,   -19,   149,   nil,   nil,   nil,   nil,  1243,    61,
   710,   627,    84,    58,    74,   nil,  1180,   nil,   571,   131,
   102,   nil,   783,   nil,   720,   nil,   nil,   nil,   nil,   nil,
    76,   nil,   nil,   nil,   143,   nil,   761,   nil,   nil,   358,
   nil,   nil,   186,   nil,   327,   237,   274,   185,   992,    79,
    26,   931,   132,   290,   201,  1120,   113,   -38,   nil,   777,
   nil,    -3,   nil,   nil,   251,   -20,    25,   nil,   nil,   nil,
   809,   827,   nil,   269,   nil,   267,   nil,   269,   260,    67,
  1057,   nil,  1079,   nil,   nil,   nil,   nil,   nil,   295,   nil,
  1032,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   167,   611,
   nil,   nil,   306,   285,   nil,   nil,   309,   833,   nil,   nil,
   nil,   nil,   303,   nil,   311,   312,   314,   315,   nil,   341,
   637,   643,   nil,   nil,   -20,   nil,  1139,   nil,   nil,   nil,
   848,   351,   353,   nil,  1161,   nil,  1202,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,  1221,   nil,  1262,   nil,
   nil ]

racc_action_default = [
  -169,  -194,   -15,    -3,  -162,  -194,   -16,    -5,  -160,  -194,
   -17,    -6,  -194,    -7,    -8,  -194,  -161,    -9,  -194,   -10,
  -194,  -194,   -11,  -194,   -12,  -194,  -194,   -39,  -194,   -13,
    -1,   -14,    -2,  -194,  -194,  -169,  -161,   -72,  -167,  -166,
  -165,  -169,  -168,  -163,   -79,  -186,   -31,  -194,   -33,   -32,
  -194,   -63,  -102,   -21,  -104,  -103,   -22,   -62,   -23,   -61,
   -26,  -194,   -27,  -150,  -149,   -28,   -29,  -194,   -30,  -194,
   -94,  -112,   -90,  -194,  -194,   -97,   -91,   -95,   -99,   -92,
  -194,   -96,   -93,  -194,   -98,  -194,  -194,   -72,  -169,  -169,
   -42,  -151,  -153,  -194,  -169,   -40,   -38,  -194,    -4,   -70,
   -71,  -194,  -194,  -182,   -73,   -67,   -64,   -63,   -59,   -62,
  -192,   -65,   -57,   -68,  -194,   -66,  -148,   -69,  -147,  -194,
  -194,  -180,  -194,   -77,   -78,   -80,  -194,  -192,   -20,  -194,
   -82,  -194,  -194,  -194,  -194,  -194,  -194,  -189,  -126,  -119,
  -194,  -194,  -194,  -194,  -194,  -194,  -194,  -194,  -194,  -194,
  -194,  -194,  -194,  -194,  -194,  -194,  -194,  -194,  -192,  -169,
  -194,   -46,   -48,  -194,   -62,   -55,   -54,   -45,  -194,   -79,
  -194,   321,  -170,  -194,  -171,  -183,  -184,  -185,  -194,  -194,
   -60,  -194,  -194,  -193,   -72,  -181,  -194,  -164,  -194,  -194,
  -193,   -18,  -194,  -105,  -194,  -190,  -191,   -24,   -25,  -101,
  -194,  -137,  -145,  -138,   -62,  -143,  -194,  -146,  -144,  -194,
  -129,  -187,  -191,  -115,  -117,  -121,  -118,  -123,  -128,  -125,
  -122,  -127,  -124,  -120,  -109,  -194,  -113,  -114,  -116,  -194,
  -131,  -194,  -135,  -106,  -194,  -194,  -194,   -51,   -50,   -44,
  -194,  -194,   -43,  -192,  -152,  -179,  -174,  -177,  -194,  -194,
  -194,  -157,  -194,   -34,   -58,   -75,   -35,   -74,  -192,  -159,
  -194,   -76,   -37,   -81,   -19,   -83,  -100,  -140,  -192,  -194,
  -188,  -108,  -194,  -109,  -130,  -132,  -194,  -194,   -36,   -49,
   -47,   -88,   -84,   -52,   -85,   -89,   -86,   -87,   -53,  -194,
  -194,  -194,  -172,  -173,  -194,  -155,  -194,  -156,   -56,  -158,
  -194,  -194,  -191,  -142,  -194,  -107,  -194,  -136,   -41,  -178,
  -176,  -175,  -154,  -141,  -139,  -111,  -194,  -134,  -194,  -110,
  -133 ]

racc_goto_table = [
    21,    15,    98,   110,    30,    68,   203,   123,   182,   246,
   127,   112,    53,   230,   209,   117,    35,    58,    43,   197,
    32,   160,   168,   271,   131,   189,   118,    25,    97,   300,
    21,    15,   283,   288,   263,   232,    68,    94,   229,   280,
    90,   201,   179,   129,   268,    92,   173,   136,    58,   102,
    41,   120,   108,   158,    85,   103,   234,   248,   249,    49,
   156,   121,    96,   175,   nil,   nil,    91,    66,   nil,   nil,
   nil,   nil,   305,   nil,   nil,   nil,   nil,   nil,   267,   197,
   106,   nil,   nil,   nil,   130,   nil,   209,   275,   116,   nil,
    49,   nil,   235,   nil,   nil,   nil,   nil,   nil,    66,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   130,   nil,   232,
   nil,   nil,   176,   nil,   174,   nil,   nil,   nil,   nil,   nil,
   130,    68,    68,   118,   nil,   185,   nil,   nil,   187,   200,
   nil,   311,   123,   198,    58,   243,   nil,   nil,   nil,   nil,
   nil,   289,   nil,   nil,   118,   nil,   257,   nil,   nil,   nil,
   258,    21,    15,   123,   254,   225,   298,   307,   117,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   301,   nil,   nil,   118,
   nil,   nil,   313,   nil,   nil,    49,    49,   202,    21,    15,
   209,    68,   252,    66,    66,   116,    21,    15,   nil,   nil,
   260,   nil,   nil,   198,   nil,   118,    64,    98,   202,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   116,   nil,   nil,   nil,
   nil,   nil,   nil,   244,   nil,   255,   nil,    64,   118,   nil,
   nil,   nil,   261,   106,    98,    21,    15,    64,   265,   118,
   118,   116,    98,   nil,   nil,    49,   nil,   nil,    46,   nil,
   nil,   nil,   nil,    66,   nil,   nil,    65,   nil,   nil,   202,
    21,    15,    21,    15,   296,   nil,   nil,   116,   nil,   105,
    21,    15,   nil,   nil,    60,   nil,   118,   115,    98,    46,
   nil,   nil,   202,   nil,   nil,   nil,   nil,    65,   nil,   nil,
   116,   nil,   nil,   282,   282,   111,   nil,   nil,    98,   118,
    98,   287,   287,   nil,   nil,    60,    21,    15,   nil,   nil,
   nil,   nil,   nil,   303,    21,    15,    21,    15,   316,   nil,
   318,   nil,    64,    64,    64,   nil,    21,    15,    21,    15,
   202,    62,   nil,   nil,   309,   310,   nil,   nil,   116,   nil,
   nil,   nil,   nil,   nil,   nil,    64,   165,   165,   nil,   nil,
   nil,   nil,   113,   202,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   116,    62,   nil,    46,    46,   nil,   nil,   nil,   nil,
    64,   nil,    65,    65,   208,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,    64,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
    60,    60,   205,   nil,   nil,   208,    64,   nil,   nil,   nil,
   nil,   nil,   nil,   166,   166,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   105,   205,   nil,   nil,   nil,   165,   nil,    64,
   115,   nil,   nil,   nil,    46,   nil,   nil,   nil,   nil,   nil,
    64,    64,    65,   nil,   nil,   nil,   nil,   nil,   111,   nil,
    83,   nil,   nil,   nil,   nil,   nil,   208,    62,    62,   207,
    60,   nil,   nil,   nil,   nil,    99,   100,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   205,   nil,   nil,    64,   nil,   208,
   207,   nil,   281,   281,   166,   nil,   nil,   nil,   nil,   nil,
   286,   286,   nil,   nil,   nil,   nil,   nil,   205,   nil,   nil,
    64,   135,   nil,   nil,   165,   113,   138,   nil,   284,   284,
   nil,   nil,   139,   nil,   nil,   nil,   nil,    62,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   208,   nil,   nil,
   nil,   207,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   205,   nil,   nil,   nil,   nil,
   208,   nil,   nil,   nil,   207,   nil,   nil,   nil,   nil,   nil,
   nil,   166,   nil,   nil,   nil,   285,   285,   nil,   205,   nil,
   nil,   nil,   213,   214,   215,   216,   217,   218,   219,   220,
   221,   222,   223,   nil,   226,   227,   228,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   207,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   207 ]

racc_goto_check = [
    33,    20,     4,    31,     2,    25,    60,    48,    32,    70,
    34,    43,    18,    56,    58,    46,    28,    20,    67,    19,
     3,    37,    37,    54,    52,    32,    25,     1,    33,    53,
    33,    20,    42,    42,    51,    58,    25,    28,    55,    38,
    36,    59,    30,    18,    61,    62,    63,    52,    20,    64,
    65,    66,    29,    31,    49,     3,    32,    68,    69,    27,
    52,     3,     5,    71,   nil,   nil,    27,    24,   nil,   nil,
   nil,   nil,    54,   nil,   nil,   nil,   nil,   nil,    60,    19,
    27,   nil,   nil,   nil,    49,   nil,    58,    56,    24,   nil,
    27,   nil,    37,   nil,   nil,   nil,   nil,   nil,    24,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,    49,   nil,    58,
   nil,   nil,    28,   nil,     3,   nil,   nil,   nil,   nil,   nil,
    49,    25,    25,    25,   nil,    67,   nil,   nil,    67,    18,
   nil,    70,    48,    20,    20,    34,   nil,   nil,   nil,   nil,
   nil,    32,   nil,   nil,    25,   nil,    48,   nil,   nil,   nil,
    31,    33,    20,    48,    43,     2,    32,    58,    46,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,    32,   nil,   nil,    25,
   nil,   nil,    60,   nil,   nil,    27,    27,    27,    33,    20,
    58,    25,     2,    24,    24,    24,    33,    20,   nil,   nil,
     2,   nil,   nil,    20,   nil,    25,    45,     4,    27,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,    24,   nil,   nil,   nil,
   nil,   nil,   nil,    27,   nil,    49,   nil,    45,    25,   nil,
   nil,   nil,    49,    27,     4,    33,    20,    45,    49,    25,
    25,    24,     4,   nil,   nil,    27,   nil,   nil,    26,   nil,
   nil,   nil,   nil,    24,   nil,   nil,    23,   nil,   nil,    27,
    33,    20,    33,    20,     2,   nil,   nil,    24,   nil,    26,
    33,    20,   nil,   nil,    21,   nil,    25,    23,     4,    26,
   nil,   nil,    27,   nil,   nil,   nil,   nil,    23,   nil,   nil,
    24,   nil,   nil,    27,    27,    21,   nil,   nil,     4,    25,
     4,    24,    24,   nil,   nil,    21,    33,    20,   nil,   nil,
   nil,   nil,   nil,    49,    33,    20,    33,    20,     2,   nil,
     2,   nil,    45,    45,    45,   nil,    33,    20,    33,    20,
    27,    22,   nil,   nil,    49,    49,   nil,   nil,    24,   nil,
   nil,   nil,   nil,   nil,   nil,    45,    21,    21,   nil,   nil,
   nil,   nil,    22,    27,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,    24,    22,   nil,    26,    26,   nil,   nil,   nil,   nil,
    45,   nil,    23,    23,    23,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,    45,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
    21,    21,    21,   nil,   nil,    23,    45,   nil,   nil,   nil,
   nil,   nil,   nil,    22,    22,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,    26,    21,   nil,   nil,   nil,    21,   nil,    45,
    23,   nil,   nil,   nil,    26,   nil,   nil,   nil,   nil,   nil,
    45,    45,    23,   nil,   nil,   nil,   nil,   nil,    21,   nil,
    47,   nil,   nil,   nil,   nil,   nil,    23,    22,    22,    22,
    21,   nil,   nil,   nil,   nil,    47,    47,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,    21,   nil,   nil,    45,   nil,    23,
    22,   nil,    26,    26,    22,   nil,   nil,   nil,   nil,   nil,
    23,    23,   nil,   nil,   nil,   nil,   nil,    21,   nil,   nil,
    45,    47,   nil,   nil,    21,    22,    47,   nil,    21,    21,
   nil,   nil,    47,   nil,   nil,   nil,   nil,    22,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,    23,   nil,   nil,
   nil,    22,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,    21,   nil,   nil,   nil,   nil,
    23,   nil,   nil,   nil,    22,   nil,   nil,   nil,   nil,   nil,
   nil,    22,   nil,   nil,   nil,    22,    22,   nil,    21,   nil,
   nil,   nil,    47,    47,    47,    47,    47,    47,    47,    47,
    47,    47,    47,   nil,    47,    47,    47,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,    22,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,    22 ]

racc_goto_pointer = [
   nil,    27,     4,    20,   -28,    34,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    -4,  -113,
     1,   248,   305,   230,    51,   -11,   222,    43,    11,    15,
   -66,   -34,  -102,     0,   -34,   nil,    19,   -67,  -197,   nil,
   nil,   nil,  -208,   -26,   nil,   180,   -22,   412,   -37,    34,
   nil,  -156,   -26,  -239,  -201,  -117,  -142,   nil,  -120,   -93,
  -128,  -162,    22,   -48,    14,    38,    10,     6,  -115,  -114,
  -163,   -38 ]

racc_goto_default = [
   nil,   nil,   nil,   167,     3,     7,    11,    13,    14,    17,
    19,    22,    24,    29,    31,     2,     6,    10,   nil,    56,
    75,    76,    77,    79,    82,    84,    70,    72,     9,   nil,
   nil,   nil,   nil,    61,   nil,    28,   nil,   nil,   161,   236,
   162,   163,   nil,   nil,   114,    78,    81,   nil,   104,    71,
   124,   125,   nil,   194,   nil,   nil,   nil,   231,    67,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil ]

racc_token_table = {
 false => 0,
 Object.new => 1,
 :LBRACK => 2,
 :DQTEXT => 3,
 :SQTEXT => 4,
 :RBRACK => 5,
 :LBRACE => 6,
 :RBRACE => 7,
 :SYMBOL => 8,
 :FARROW => 9,
 :COMMA => 10,
 :TRUE => 11,
 :FALSE => 12,
 :EQUALS => 13,
 :APPENDS => 14,
 :LESSEQUAL => 15,
 :NOTEQUAL => 16,
 :DOT => 17,
 :COLON => 18,
 :LLCOLLECT => 19,
 :RRCOLLECT => 20,
 :QMARK => 21,
 :LPAREN => 22,
 :RPAREN => 23,
 :ISEQUAL => 24,
 :GREATEREQUAL => 25,
 :GREATERTHAN => 26,
 :LESSTHAN => 27,
 :IF => 28,
 :ELSE => 29,
 :IMPORT => 30,
 :DEFINE => 31,
 :ELSIF => 32,
 :VARIABLE => 33,
 :CLASS => 34,
 :INHERITS => 35,
 :NODE => 36,
 :BOOLEAN => 37,
 :NAME => 38,
 :SEMIC => 39,
 :CASE => 40,
 :DEFAULT => 41,
 :AT => 42,
 :LCOLLECT => 43,
 :RCOLLECT => 44,
 :CLASSNAME => 45,
 :CLASSREF => 46,
 :NOT => 47,
 :OR => 48,
 :AND => 49,
 :UNDEF => 50,
 :PARROW => 51,
 :PLUS => 52,
 :MINUS => 53,
 :TIMES => 54,
 :DIV => 55,
 :LSHIFT => 56,
 :RSHIFT => 57,
 :UMINUS => 58,
 :MATCH => 59,
 :NOMATCH => 60,
 :REGEX => 61 }

racc_use_result_var = true

racc_nt_base = 62

Racc_arg = [
 racc_action_table,
 racc_action_check,
 racc_action_default,
 racc_action_pointer,
 racc_goto_table,
 racc_goto_check,
 racc_goto_default,
 racc_goto_pointer,
 racc_nt_base,
 racc_reduce_table,
 racc_token_table,
 racc_shift_n,
 racc_reduce_n,
 racc_use_result_var ]

Racc_token_to_s_table = [
'$end',
'error',
'LBRACK',
'DQTEXT',
'SQTEXT',
'RBRACK',
'LBRACE',
'RBRACE',
'SYMBOL',
'FARROW',
'COMMA',
'TRUE',
'FALSE',
'EQUALS',
'APPENDS',
'LESSEQUAL',
'NOTEQUAL',
'DOT',
'COLON',
'LLCOLLECT',
'RRCOLLECT',
'QMARK',
'LPAREN',
'RPAREN',
'ISEQUAL',
'GREATEREQUAL',
'GREATERTHAN',
'LESSTHAN',
'IF',
'ELSE',
'IMPORT',
'DEFINE',
'ELSIF',
'VARIABLE',
'CLASS',
'INHERITS',
'NODE',
'BOOLEAN',
'NAME',
'SEMIC',
'CASE',
'DEFAULT',
'AT',
'LCOLLECT',
'RCOLLECT',
'CLASSNAME',
'CLASSREF',
'NOT',
'OR',
'AND',
'UNDEF',
'PARROW',
'PLUS',
'MINUS',
'TIMES',
'DIV',
'LSHIFT',
'RSHIFT',
'UMINUS',
'MATCH',
'NOMATCH',
'REGEX',
'$start',
'program',
'statements',
'nil',
'statement',
'resource',
'virtualresource',
'collection',
'assignment',
'casestatement',
'ifstatement',
'import',
'fstatement',
'definition',
'hostclass',
'nodedef',
'resourceoverride',
'append',
'funcvalues',
'namestring',
'resourceref',
'name',
'variable',
'type',
'boolean',
'funcrvalue',
'selector',
'quotedtext',
'classname',
'resourceinstances',
'endsemi',
'params',
'endcomma',
'classref',
'anyparams',
'at',
'collectrhand',
'collstatements',
'collstatement',
'colljoin',
'collexpr',
'colllval',
'simplervalue',
'resourceinst',
'resourcename',
'undef',
'array',
'expression',
'param',
'rvalue',
'addparam',
'anyparam',
'rvalues',
'comma',
'else',
'caseopts',
'caseopt',
'casevalues',
'selectlhand',
'svalues',
'selectval',
'sintvalues',
'qtexts',
'argumentlist',
'classparent',
'hostnames',
'nodeparent',
'hostname',
'nothing',
'arguments',
'argument',
'classnameordefault']

Racc_debug_parser = false

##### racc system variables end #####

 # reduce 0 omitted

module_eval <<'.,.,', 'grammar.ra', 44
  def _reduce_1( val, _values, result )
    if val[0]
        # Make sure we always return an array.
        if val[0].is_a?(AST::ASTArray)
            if val[0].children.empty?
                result = nil
            else
                result = val[0]
            end
        else
            result = aryfy(val[0])
        end
    else
        result = nil
    end
   result
  end
.,.,

 # reduce 2 omitted

 # reduce 3 omitted

module_eval <<'.,.,', 'grammar.ra', 60
  def _reduce_4( val, _values, result )
    if val[0] and val[1]
        if val[0].instance_of?(AST::ASTArray)
            val[0].push(val[1])
            result = val[0]
        else
            result = ast AST::ASTArray, :children => [val[0],val[1]]
        end
    elsif obj = (val[0] || val[1])
        result = obj
    else result = nil
    end
   result
  end
.,.,

 # reduce 5 omitted

 # reduce 6 omitted

 # reduce 7 omitted

 # reduce 8 omitted

 # reduce 9 omitted

 # reduce 10 omitted

 # reduce 11 omitted

 # reduce 12 omitted

 # reduce 13 omitted

 # reduce 14 omitted

 # reduce 15 omitted

 # reduce 16 omitted

 # reduce 17 omitted

module_eval <<'.,.,', 'grammar.ra', 84
  def _reduce_18( val, _values, result )
    args = aryfy(val[2])
    result = ast AST::Function,
        :name => val[0][:value],
        :line => val[0][:line],
        :arguments => args,
        :ftype => :statement
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 92
  def _reduce_19( val, _values, result )
    args = aryfy(val[2])
    result = ast AST::Function,
        :name => val[0][:value],
        :line => val[0][:line],
        :arguments => args,
        :ftype => :statement
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 98
  def _reduce_20( val, _values, result )
    result = ast AST::Function,
        :name => val[0][:value],
        :line => val[0][:line],
        :arguments => AST::ASTArray.new({}),
        :ftype => :statement
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 106
  def _reduce_21( val, _values, result )
    args = aryfy(val[1])
    result = ast AST::Function,
        :name => val[0][:value],
        :line => val[0][:line],
        :arguments => args,
        :ftype => :statement
   result
  end
.,.,

 # reduce 22 omitted

 # reduce 23 omitted

module_eval <<'.,.,', 'grammar.ra', 114
  def _reduce_24( val, _values, result )
    result = aryfy(val[0], val[2])
    result.line = @lexer.line
    result.file = @lexer.file
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 123
  def _reduce_25( val, _values, result )
    unless val[0].is_a?(AST::ASTArray)
        val[0] = aryfy(val[0])
    end

    val[0].push(val[2])

    result = val[0]
   result
  end
.,.,

 # reduce 26 omitted

 # reduce 27 omitted

 # reduce 28 omitted

 # reduce 29 omitted

 # reduce 30 omitted

 # reduce 31 omitted

 # reduce 32 omitted

module_eval <<'.,.,', 'grammar.ra', 136
  def _reduce_33( val, _values, result )
                    result = ast AST::Name, :value => val[0][:value]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 158
  def _reduce_34( val, _values, result )
    @lexer.commentpop
    array = val[2]
    if array.instance_of?(AST::ResourceInstance)
        array = [array]
    end
    result = ast AST::ASTArray

    # this iterates across each specified resourceinstance
    array.each { |instance|
        unless instance.instance_of?(AST::ResourceInstance)
            raise Puppet::Dev, "Got something that isn't an instance"
        end
        # now, i need to somehow differentiate between those things with
        # arrays in their names, and normal things
        result.push ast(AST::Resource,
            :type => val[0],
            :title => instance[0],
            :params => instance[1])
    }
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 161
  def _reduce_35( val, _values, result )
    # This is a deprecated syntax.
    error "All resource specifications require names"
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 164
  def _reduce_36( val, _values, result )
    # a defaults setting for a type
    result = ast(AST::ResourceDefaults, :type => val[0], :params => val[2])
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 170
  def _reduce_37( val, _values, result )
    @lexer.commentpop
    result = ast AST::ResourceOverride, :object => val[0], :params => val[2]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 197
  def _reduce_38( val, _values, result )
    type = val[0]

    if (type == :exported and ! Puppet[:storeconfigs]) and ! Puppet[:parseonly]
        Puppet.warning addcontext("You cannot collect without storeconfigs being set")
    end

    if val[1].is_a? AST::ResourceDefaults
        error "Defaults are not virtualizable"
    end

    method = type.to_s + "="

    # Just mark our resources as exported and pass them through.
    if val[1].instance_of?(AST::ASTArray)
        val[1].each do |obj|
            obj.send(method, true)
        end
    else
        val[1].send(method, true)
    end

    result = val[1]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 198
  def _reduce_39( val, _values, result )
 result = :virtual
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 199
  def _reduce_40( val, _values, result )
 result = :exported
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 223
  def _reduce_41( val, _values, result )
    if val[0] =~ /^[a-z]/
        Puppet.warning addcontext("Collection names must now be capitalized")
    end
    type = val[0].downcase
    args = {:type => type}

    if val[1].is_a?(AST::CollExpr)
        args[:query] = val[1]
        args[:query].type = type
        args[:form] = args[:query].form
    else
        args[:form] = val[1]
    end
    if args[:form] == :exported and ! Puppet[:storeconfigs] and ! Puppet[:parseonly]
        Puppet.warning addcontext("You cannot collect exported resources without storeconfigs being set; the collection will be ignored")
    end
    args[:override] = val[3]
    result = ast AST::Collection, args
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 242
  def _reduce_42( val, _values, result )
    if val[0] =~ /^[a-z]/
        Puppet.warning addcontext("Collection names must now be capitalized")
    end
    type = val[0].downcase
    args = {:type => type }

    if val[1].is_a?(AST::CollExpr)
        args[:query] = val[1]
        args[:query].type = type
        args[:form] = args[:query].form
    else
        args[:form] = val[1]
    end
    if args[:form] == :exported and ! Puppet[:storeconfigs] and ! Puppet[:parseonly]
        Puppet.warning addcontext("You cannot collect exported resources without storeconfigs being set; the collection will be ignored")
    end
    result = ast AST::Collection, args
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 252
  def _reduce_43( val, _values, result )
    if val[1]
        result = val[1]
        result.form = :virtual
    else
        result = :virtual
    end
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 260
  def _reduce_44( val, _values, result )
    if val[1]
        result = val[1]
        result.form = :exported
    else
        result = :exported
    end
   result
  end
.,.,

 # reduce 45 omitted

 # reduce 46 omitted

module_eval <<'.,.,', 'grammar.ra', 268
  def _reduce_47( val, _values, result )
    result = ast AST::CollExpr, :test1 => val[0], :oper => val[1], :test2 => val[2]
   result
  end
.,.,

 # reduce 48 omitted

module_eval <<'.,.,', 'grammar.ra', 274
  def _reduce_49( val, _values, result )
    result = val[1]
    result.parens = true
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 275
  def _reduce_50( val, _values, result )
 result=val[0][:value]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 276
  def _reduce_51( val, _values, result )
 result=val[0][:value]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 283
  def _reduce_52( val, _values, result )
    result = ast AST::CollExpr, :test1 => val[0], :oper => val[1][:value], :test2 => val[2]
    #result = ast AST::CollExpr
    #result.push *val
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 288
  def _reduce_53( val, _values, result )
    result = ast AST::CollExpr, :test1 => val[0], :oper => val[1][:value], :test2 => val[2]
    #result = ast AST::CollExpr
    #result.push *val
   result
  end
.,.,

 # reduce 54 omitted

 # reduce 55 omitted

module_eval <<'.,.,', 'grammar.ra', 295
  def _reduce_56( val, _values, result )
    result = ast AST::ResourceInstance, :children => [val[0],val[2]]
   result
  end
.,.,

 # reduce 57 omitted

module_eval <<'.,.,', 'grammar.ra', 305
  def _reduce_58( val, _values, result )
    if val[0].instance_of?(AST::ResourceInstance)
        result = ast AST::ASTArray, :children => [val[0],val[2]]
    else
        val[0].push val[2]
        result = val[0]
    end
   result
  end
.,.,

 # reduce 59 omitted

 # reduce 60 omitted

module_eval <<'.,.,', 'grammar.ra', 312
  def _reduce_61( val, _values, result )
    result = ast AST::Undef, :value => :undef
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 316
  def _reduce_62( val, _values, result )
    result = ast AST::Name, :value => val[0][:value], :line => val[0][:line]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 320
  def _reduce_63( val, _values, result )
    result = ast AST::Type, :value => val[0][:value], :line => val[0][:line]
   result
  end
.,.,

 # reduce 64 omitted

 # reduce 65 omitted

 # reduce 66 omitted

 # reduce 67 omitted

 # reduce 68 omitted

 # reduce 69 omitted

module_eval <<'.,.,', 'grammar.ra', 336
  def _reduce_70( val, _values, result )
    if val[0][:value] =~ /::/
        raise Puppet::ParseError, "Cannot assign to variables in other namespaces"
    end
    # this is distinct from referencing a variable
    variable = ast AST::Name, :value => val[0][:value], :line => val[0][:line]
    result = ast AST::VarDef, :name => variable, :value => val[2], :line => val[0][:line]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 341
  def _reduce_71( val, _values, result )
    variable = ast AST::Name, :value => val[0][:value], :line => val[0][:line]
    result = ast AST::VarDef, :name => variable, :value => val[2], :append => true, :line => val[0][:line]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 346
  def _reduce_72( val, _values, result )
    result = ast AST::ASTArray
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 346
  def _reduce_73( val, _values, result )
 result = val[0]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 355
  def _reduce_74( val, _values, result )
    if val[0].instance_of?(AST::ASTArray)
        val[0].push(val[2])
        result = val[0]
    else
        result = ast AST::ASTArray, :children => [val[0],val[2]]
    end
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 359
  def _reduce_75( val, _values, result )
    result = ast AST::ResourceParam, :param => val[0][:value], :line => val[0][:line], :value => val[2]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 364
  def _reduce_76( val, _values, result )
    result = ast AST::ResourceParam, :param => val[0][:value], :line => val[0][:line], :value => val[2],
                                     :add => true
   result
  end
.,.,

 # reduce 77 omitted

 # reduce 78 omitted

module_eval <<'.,.,', 'grammar.ra', 372
  def _reduce_79( val, _values, result )
    result = ast AST::ASTArray
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 372
  def _reduce_80( val, _values, result )
 result = val[0]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 381
  def _reduce_81( val, _values, result )
    if val[0].instance_of?(AST::ASTArray)
        val[0].push(val[2])
        result = val[0]
    else
        result = ast AST::ASTArray, :children => [val[0],val[2]]
    end
   result
  end
.,.,

 # reduce 82 omitted

module_eval <<'.,.,', 'grammar.ra', 390
  def _reduce_83( val, _values, result )
    if val[0].instance_of?(AST::ASTArray)
        result = val[0].push(val[2])
    else
        result = ast AST::ASTArray, :children => [val[0],val[2]]
    end
   result
  end
.,.,

 # reduce 84 omitted

 # reduce 85 omitted

 # reduce 86 omitted

 # reduce 87 omitted

 # reduce 88 omitted

 # reduce 89 omitted

 # reduce 90 omitted

 # reduce 91 omitted

 # reduce 92 omitted

 # reduce 93 omitted

 # reduce 94 omitted

 # reduce 95 omitted

 # reduce 96 omitted

 # reduce 97 omitted

 # reduce 98 omitted

 # reduce 99 omitted

module_eval <<'.,.,', 'grammar.ra', 417
  def _reduce_100( val, _values, result )
    args = aryfy(val[2])
    result = ast AST::Function,
        :name => val[0][:value], :line => val[0][:line],
        :arguments => args,
        :ftype => :rvalue
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 422
  def _reduce_101( val, _values, result )
    result = ast AST::Function,
        :name => val[0][:value], :line => val[0][:line],
        :arguments => AST::ASTArray.new({}),
        :ftype => :rvalue
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 426
  def _reduce_102( val, _values, result )
    result = ast AST::String, :value => val[0][:value], :line => val[0][:line]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 428
  def _reduce_103( val, _values, result )
    result = ast AST::FlatString, :value => val[0][:value], :line => val[0][:line]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 432
  def _reduce_104( val, _values, result )
    result = ast AST::Boolean, :value => val[0][:value], :line => val[0][:line]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 437
  def _reduce_105( val, _values, result )
    Puppet.warning addcontext("Deprecation notice:  Resource references should now be capitalized")
    result = ast AST::ResourceReference, :type => val[0][:value], :line => val[0][:line], :title => val[2]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 439
  def _reduce_106( val, _values, result )
    result = ast AST::ResourceReference, :type => val[0], :title => val[2]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 453
  def _reduce_107( val, _values, result )
    @lexer.commentpop
    args = {
        :test => val[1],
        :statements => val[3]
    }

    if val[5]
        args[:else] = val[5]
    end

    result = ast AST::IfStatement, args
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 466
  def _reduce_108( val, _values, result )
    @lexer.commentpop
    args = {
        :test => val[1],
        :statements => ast(AST::Nop)
    }

    if val[4]
        args[:else] = val[4]
    end

    result = ast AST::IfStatement, args
   result
  end
.,.,

 # reduce 109 omitted

module_eval <<'.,.,', 'grammar.ra', 472
  def _reduce_110( val, _values, result )
    @lexer.commentpop
    result = ast AST::Else, :statements => val[2]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 476
  def _reduce_111( val, _values, result )
    @lexer.commentpop
    result = ast AST::Else, :statements => ast(AST::Nop)
   result
  end
.,.,

 # reduce 112 omitted

module_eval <<'.,.,', 'grammar.ra', 493
  def _reduce_113( val, _values, result )
    result = ast AST::ArithmeticOperator, :operator => val[1][:value], :lval => val[0], :rval => val[2]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 496
  def _reduce_114( val, _values, result )
    result = ast AST::ArithmeticOperator, :operator => val[1][:value], :lval => val[0], :rval => val[2]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 499
  def _reduce_115( val, _values, result )
    result = ast AST::ArithmeticOperator, :operator => val[1][:value], :lval => val[0], :rval => val[2]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 502
  def _reduce_116( val, _values, result )
    result = ast AST::ArithmeticOperator, :operator => val[1][:value], :lval => val[0], :rval => val[2]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 505
  def _reduce_117( val, _values, result )
    result = ast AST::ArithmeticOperator, :operator => val[1][:value], :lval => val[0], :rval => val[2]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 508
  def _reduce_118( val, _values, result )
    result = ast AST::ArithmeticOperator, :operator => val[1][:value], :lval => val[0], :rval => val[2]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 511
  def _reduce_119( val, _values, result )
    result = ast AST::Minus, :value => val[1]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 514
  def _reduce_120( val, _values, result )
    result = ast AST::ComparisonOperator, :operator => val[1][:value], :lval => val[0], :rval => val[2]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 517
  def _reduce_121( val, _values, result )
    result = ast AST::ComparisonOperator, :operator => val[1][:value], :lval => val[0], :rval => val[2]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 520
  def _reduce_122( val, _values, result )
    result = ast AST::ComparisonOperator, :operator => val[1][:value], :lval => val[0], :rval => val[2]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 523
  def _reduce_123( val, _values, result )
    result = ast AST::ComparisonOperator, :operator => val[1][:value], :lval => val[0], :rval => val[2]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 526
  def _reduce_124( val, _values, result )
    result = ast AST::ComparisonOperator, :operator => val[1][:value], :lval => val[0], :rval => val[2]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 529
  def _reduce_125( val, _values, result )
    result = ast AST::ComparisonOperator, :operator => val[1][:value], :lval => val[0], :rval => val[2]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 532
  def _reduce_126( val, _values, result )
    result = ast AST::Not, :value => val[1]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 535
  def _reduce_127( val, _values, result )
    result = ast AST::BooleanOperator, :operator => val[1][:value], :lval => val[0], :rval => val[2]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 538
  def _reduce_128( val, _values, result )
    result = ast AST::BooleanOperator, :operator => val[1][:value], :lval => val[0], :rval => val[2]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 541
  def _reduce_129( val, _values, result )
    result = val[1]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 550
  def _reduce_130( val, _values, result )
    @lexer.commentpop
    options = val[3]
    unless options.instance_of?(AST::ASTArray)
        options = ast AST::ASTArray, :children => [val[3]]
    end
    result = ast AST::CaseStatement, :test => val[1], :options => options
   result
  end
.,.,

 # reduce 131 omitted

module_eval <<'.,.,', 'grammar.ra', 560
  def _reduce_132( val, _values, result )
    if val[0].instance_of?(AST::ASTArray)
        val[0].push val[1]
        result = val[0]
    else
        result = ast AST::ASTArray, :children => [val[0], val[1]]
    end
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 565
  def _reduce_133( val, _values, result )
    @lexer.commentpop
    result = ast AST::CaseOpt, :value => val[0], :statements => val[3]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 571
  def _reduce_134( val, _values, result )
    @lexer.commentpop
    result = ast(AST::CaseOpt,
        :value => val[0],
        :statements => ast(AST::ASTArray)
    )
   result
  end
.,.,

 # reduce 135 omitted

module_eval <<'.,.,', 'grammar.ra', 581
  def _reduce_136( val, _values, result )
    if val[0].instance_of?(AST::ASTArray)
        val[0].push(val[2])
        result = val[0]
    else
        result = ast AST::ASTArray, :children => [val[0],val[2]]
    end
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 585
  def _reduce_137( val, _values, result )
    result = ast AST::Selector, :param => val[0], :values => val[2]
   result
  end
.,.,

 # reduce 138 omitted

module_eval <<'.,.,', 'grammar.ra', 591
  def _reduce_139( val, _values, result )
    @lexer.commentpop
    result = val[1]
   result
  end
.,.,

 # reduce 140 omitted

module_eval <<'.,.,', 'grammar.ra', 601
  def _reduce_141( val, _values, result )
    if val[0].instance_of?(AST::ASTArray)
        val[0].push(val[2])
        result = val[0]
    else
        result = ast AST::ASTArray, :children => [val[0],val[2]]
    end
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 605
  def _reduce_142( val, _values, result )
    result = ast AST::ResourceParam, :param => val[0], :value => val[2]
   result
  end
.,.,

 # reduce 143 omitted

 # reduce 144 omitted

 # reduce 145 omitted

 # reduce 146 omitted

 # reduce 147 omitted

 # reduce 148 omitted

 # reduce 149 omitted

module_eval <<'.,.,', 'grammar.ra', 616
  def _reduce_150( val, _values, result )
    result = ast AST::Default, :value => val[0][:value], :line => val[0][:line]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 618
  def _reduce_151( val, _values, result )
 result = [val[0].value]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 622
  def _reduce_152( val, _values, result )
    results = val[0] << val[2].value
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 630
  def _reduce_153( val, _values, result )
    val[1].each do |file|
        import(file)
    end

    result = AST::ASTArray.new(:children => [])
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 641
  def _reduce_154( val, _values, result )
    @lexer.commentpop
    newdefine classname(val[1]), :arguments => val[2], :code => val[4], :line => val[0][:line]
    @lexer.indefine = false
    result = nil

#}           | DEFINE NAME argumentlist parent LBRACE RBRACE {
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 646
  def _reduce_155( val, _values, result )
    @lexer.commentpop
    newdefine classname(val[1]), :arguments => val[2], :line => val[0][:line]
    @lexer.indefine = false
    result = nil
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 655
  def _reduce_156( val, _values, result )
    @lexer.commentpop
    # Our class gets defined in the parent namespace, not our own.
    @lexer.namepop
    newclass classname(val[1]), :code => val[4], :parent => val[2], :line => val[0][:line]
    result = nil
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 661
  def _reduce_157( val, _values, result )
    @lexer.commentpop
    # Our class gets defined in the parent namespace, not our own.
    @lexer.namepop
    newclass classname(val[1]), :parent => val[2], :line => val[0][:line]
    result = nil
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 667
  def _reduce_158( val, _values, result )
    @lexer.commentpop
    newnode val[1], :parent => val[2], :code => val[4], :line => val[0][:line]
    result = nil
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 671
  def _reduce_159( val, _values, result )
    @lexer.commentpop
    newnode val[1], :parent => val[2], :line => val[0][:line]
    result = nil
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 672
  def _reduce_160( val, _values, result )
 result = val[0][:value]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 674
  def _reduce_161( val, _values, result )
 result = val[0][:value]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 675
  def _reduce_162( val, _values, result )
 result = val[0][:value]
   result
  end
.,.,

 # reduce 163 omitted

module_eval <<'.,.,', 'grammar.ra', 685
  def _reduce_164( val, _values, result )
    result = val[0]
    result = [result] unless result.is_a?(Array)
    result << val[2][:value]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 686
  def _reduce_165( val, _values, result )
 result = val[0][:value]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 687
  def _reduce_166( val, _values, result )
 result = val[0][:value]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 688
  def _reduce_167( val, _values, result )
 result = val[0][:value]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 689
  def _reduce_168( val, _values, result )
 result = val[0][:value]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 694
  def _reduce_169( val, _values, result )
    result = nil
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 698
  def _reduce_170( val, _values, result )
    result = ast AST::ASTArray, :children => []
   result
  end
.,.,

 # reduce 171 omitted

module_eval <<'.,.,', 'grammar.ra', 703
  def _reduce_172( val, _values, result )
    result = nil
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 707
  def _reduce_173( val, _values, result )
    result = val[1]
    result = [result] unless result[0].is_a?(Array)
   result
  end
.,.,

 # reduce 174 omitted

module_eval <<'.,.,', 'grammar.ra', 714
  def _reduce_175( val, _values, result )
    result = val[0]
    result = [result] unless result[0].is_a?(Array)
    result << val[2]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 719
  def _reduce_176( val, _values, result )
    Puppet.warning addcontext("Deprecation notice: must now include '$' in prototype")
    result = [val[0][:value], val[2]]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 723
  def _reduce_177( val, _values, result )
    Puppet.warning addcontext("Deprecation notice: must now include '$' in prototype")
    result = [val[0][:value]]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 725
  def _reduce_178( val, _values, result )
    result = [val[0][:value], val[2]]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 727
  def _reduce_179( val, _values, result )
    result = [val[0][:value]]
   result
  end
.,.,

 # reduce 180 omitted

module_eval <<'.,.,', 'grammar.ra', 732
  def _reduce_181( val, _values, result )
    result = val[1]
   result
  end
.,.,

 # reduce 182 omitted

module_eval <<'.,.,', 'grammar.ra', 737
  def _reduce_183( val, _values, result )
    result = val[1]
   result
  end
.,.,

 # reduce 184 omitted

 # reduce 185 omitted

module_eval <<'.,.,', 'grammar.ra', 743
  def _reduce_186( val, _values, result )
    result = ast AST::Variable, :value => val[0][:value], :line => val[0][:line]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 751
  def _reduce_187( val, _values, result )
    if val[1].instance_of?(AST::ASTArray)
        result = val[1]
    else
        result = ast AST::ASTArray, :children => [val[1]]
    end
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 758
  def _reduce_188( val, _values, result )
    if val[1].instance_of?(AST::ASTArray)
        result = val[1]
    else
        result = ast AST::ASTArray, :children => [val[1]]
    end
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 760
  def _reduce_189( val, _values, result )
    result = ast AST::ASTArray
   result
  end
.,.,

 # reduce 190 omitted

 # reduce 191 omitted

 # reduce 192 omitted

module_eval <<'.,.,', 'grammar.ra', 765
  def _reduce_193( val, _values, result )
 result = nil
   result
  end
.,.,

 def _reduce_none( val, _values, result )
  result
 end

    end   # class Parser

  end   # module Parser

end   # module Puppet
