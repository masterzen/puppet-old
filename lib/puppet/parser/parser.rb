#
# DO NOT MODIFY!!!!
# This file is automatically generated by racc 1.4.5
# from racc grammer file "grammar.ra".
#

require 'racc/parser'


require 'puppet'
require 'puppet/util/loadedfile'
require 'puppet/parser/lexer'
require 'puppet/parser/ast'
#require 'puppet/parser/interpreter'

module Puppet
    class ParseError < Puppet::Error; end
    class ImportError < Racc::ParseError; end
    class AlreadyImportedError < ImportError; end
end

Puppet[:typecheck] = true
Puppet[:paramcheck] = true


module Puppet

  module Parser

    class Parser < Racc::Parser

module_eval <<'..end grammar.ra modeval..id0a45292539', 'grammar.ra', 752

# It got too annoying having code in a file that needs to be compiled.
require 'puppet/parser/parser_support'

# Make emacs happy
# Local Variables:
# mode: ruby
# End:

# $Id$

..end grammar.ra modeval..id0a45292539

##### racc 1.4.5 generates ###

racc_reduce_table = [
 0, 0, :racc_error,
 1, 60, :_reduce_1,
 1, 60, :_reduce_none,
 1, 61, :_reduce_none,
 2, 61, :_reduce_4,
 1, 63, :_reduce_none,
 1, 63, :_reduce_none,
 1, 63, :_reduce_none,
 1, 63, :_reduce_none,
 1, 63, :_reduce_none,
 1, 63, :_reduce_none,
 1, 63, :_reduce_none,
 1, 63, :_reduce_none,
 1, 63, :_reduce_none,
 1, 63, :_reduce_none,
 1, 63, :_reduce_none,
 1, 63, :_reduce_none,
 1, 63, :_reduce_none,
 4, 71, :_reduce_18,
 3, 71, :_reduce_19,
 2, 71, :_reduce_20,
 1, 77, :_reduce_none,
 1, 77, :_reduce_none,
 1, 78, :_reduce_none,
 3, 78, :_reduce_24,
 1, 80, :_reduce_none,
 1, 80, :_reduce_none,
 1, 80, :_reduce_none,
 1, 80, :_reduce_none,
 1, 80, :_reduce_none,
 1, 80, :_reduce_none,
 1, 80, :_reduce_none,
 1, 80, :_reduce_32,
 1, 79, :_reduce_none,
 3, 79, :_reduce_34,
 5, 64, :_reduce_35,
 5, 64, :_reduce_36,
 5, 64, :_reduce_37,
 5, 75, :_reduce_38,
 2, 65, :_reduce_39,
 1, 96, :_reduce_40,
 2, 96, :_reduce_41,
 6, 66, :_reduce_42,
 2, 66, :_reduce_43,
 3, 97, :_reduce_44,
 3, 97, :_reduce_45,
 1, 98, :_reduce_none,
 1, 98, :_reduce_none,
 3, 98, :_reduce_48,
 1, 99, :_reduce_none,
 3, 99, :_reduce_50,
 1, 100, :_reduce_none,
 1, 100, :_reduce_none,
 3, 101, :_reduce_53,
 3, 101, :_reduce_54,
 1, 102, :_reduce_none,
 1, 102, :_reduce_none,
 4, 104, :_reduce_57,
 1, 90, :_reduce_none,
 3, 90, :_reduce_59,
 0, 91, :_reduce_none,
 1, 91, :_reduce_none,
 1, 106, :_reduce_62,
 1, 81, :_reduce_63,
 1, 83, :_reduce_64,
 1, 105, :_reduce_none,
 1, 105, :_reduce_none,
 1, 105, :_reduce_none,
 1, 105, :_reduce_none,
 1, 105, :_reduce_none,
 1, 105, :_reduce_none,
 3, 67, :_reduce_71,
 3, 76, :_reduce_72,
 0, 92, :_reduce_73,
 1, 92, :_reduce_74,
 3, 92, :_reduce_75,
 3, 109, :_reduce_76,
 3, 111, :_reduce_77,
 1, 112, :_reduce_none,
 1, 112, :_reduce_none,
 0, 95, :_reduce_80,
 1, 95, :_reduce_81,
 3, 95, :_reduce_82,
 1, 113, :_reduce_none,
 3, 113, :_reduce_84,
 1, 103, :_reduce_none,
 1, 103, :_reduce_none,
 1, 103, :_reduce_none,
 1, 103, :_reduce_none,
 1, 103, :_reduce_none,
 1, 103, :_reduce_none,
 1, 110, :_reduce_none,
 1, 110, :_reduce_none,
 1, 110, :_reduce_none,
 1, 110, :_reduce_none,
 1, 110, :_reduce_none,
 1, 110, :_reduce_none,
 1, 110, :_reduce_none,
 1, 110, :_reduce_none,
 1, 110, :_reduce_none,
 1, 110, :_reduce_none,
 4, 85, :_reduce_101,
 3, 85, :_reduce_102,
 1, 87, :_reduce_103,
 1, 87, :_reduce_104,
 1, 84, :_reduce_105,
 4, 88, :_reduce_106,
 4, 88, :_reduce_107,
 6, 69, :_reduce_108,
 5, 69, :_reduce_109,
 0, 115, :_reduce_none,
 4, 115, :_reduce_111,
 3, 115, :_reduce_112,
 1, 108, :_reduce_none,
 3, 108, :_reduce_114,
 3, 108, :_reduce_115,
 3, 108, :_reduce_116,
 3, 108, :_reduce_117,
 3, 108, :_reduce_118,
 3, 108, :_reduce_119,
 2, 108, :_reduce_120,
 3, 108, :_reduce_121,
 3, 108, :_reduce_122,
 3, 108, :_reduce_123,
 3, 108, :_reduce_124,
 3, 108, :_reduce_125,
 3, 108, :_reduce_126,
 2, 108, :_reduce_127,
 3, 108, :_reduce_128,
 3, 108, :_reduce_129,
 3, 108, :_reduce_130,
 5, 68, :_reduce_131,
 1, 116, :_reduce_none,
 2, 116, :_reduce_133,
 5, 117, :_reduce_134,
 4, 117, :_reduce_135,
 1, 118, :_reduce_none,
 3, 118, :_reduce_137,
 3, 86, :_reduce_138,
 1, 120, :_reduce_none,
 4, 120, :_reduce_140,
 1, 122, :_reduce_none,
 3, 122, :_reduce_142,
 3, 121, :_reduce_143,
 1, 119, :_reduce_none,
 1, 119, :_reduce_none,
 1, 119, :_reduce_none,
 1, 119, :_reduce_none,
 1, 119, :_reduce_none,
 1, 119, :_reduce_none,
 1, 119, :_reduce_none,
 1, 119, :_reduce_151,
 1, 123, :_reduce_152,
 3, 123, :_reduce_153,
 2, 70, :_reduce_154,
 6, 72, :_reduce_155,
 5, 72, :_reduce_156,
 6, 73, :_reduce_157,
 5, 73, :_reduce_158,
 6, 74, :_reduce_159,
 5, 74, :_reduce_160,
 1, 94, :_reduce_none,
 1, 89, :_reduce_none,
 1, 89, :_reduce_none,
 1, 126, :_reduce_none,
 3, 126, :_reduce_165,
 1, 128, :_reduce_none,
 1, 128, :_reduce_none,
 1, 128, :_reduce_none,
 1, 128, :_reduce_none,
 0, 62, :_reduce_170,
 0, 129, :_reduce_171,
 1, 124, :_reduce_none,
 3, 124, :_reduce_173,
 3, 124, :_reduce_174,
 1, 130, :_reduce_none,
 3, 130, :_reduce_176,
 3, 131, :_reduce_177,
 1, 131, :_reduce_178,
 3, 131, :_reduce_179,
 1, 131, :_reduce_180,
 1, 127, :_reduce_none,
 2, 127, :_reduce_182,
 1, 125, :_reduce_none,
 2, 125, :_reduce_184,
 1, 132, :_reduce_none,
 1, 132, :_reduce_none,
 1, 82, :_reduce_187,
 3, 107, :_reduce_188,
 2, 107, :_reduce_189,
 1, 114, :_reduce_none,
 1, 114, :_reduce_none,
 0, 93, :_reduce_none,
 1, 93, :_reduce_193 ]

racc_reduce_n = 194

racc_shift_n = 321

racc_action_table = [
    75,    54,    57,   275,   179,    39,    40,   202,    88,   239,
    51,   294,    89,   214,   247,     8,   189,   199,   200,   248,
    72,    75,    54,    57,   293,    90,    39,    40,   237,   238,
   136,    45,    39,    40,   129,    56,    59,   237,   238,    66,
    41,    72,   154,    44,    52,    76,   178,   162,    62,    92,
   146,    84,    45,    75,    54,    57,    56,    59,    45,   126,
    66,    41,   105,   167,    44,    52,    76,    41,   189,    62,
    44,   252,    84,    72,    75,    54,    57,   179,   156,   157,
   158,   144,   145,   147,    45,   289,  -147,   235,    56,    59,
   136,   162,    66,   288,    72,   234,    37,    52,    76,    54,
    57,    62,    45,     4,    84,    45,   154,   167,    37,    56,
    59,   155,   162,    66,   146,     4,     8,    37,    52,    76,
   150,   154,    62,    45,     4,    84,   199,   302,   167,   146,
   148,   151,   153,   247,  -144,    75,    54,    57,   248,   158,
   144,   255,   156,   157,   158,   144,   145,   147,   156,   157,
   158,   144,   105,   149,   152,    72,   154,   156,   157,   158,
   144,   145,   147,   138,   146,   162,    45,    75,    54,    57,
    56,    59,    33,    34,    66,    37,    45,   259,   184,    52,
    76,   167,     4,    62,    54,    57,    84,    72,    75,    54,
    57,  -146,   156,   157,   158,   144,   145,   147,    45,   261,
   231,   161,    56,    59,   199,   200,    66,   161,    72,   154,
   137,    52,    76,   158,   144,    62,   136,   146,    84,    45,
    75,    54,    57,    56,    59,   198,  -148,    66,    51,   199,
   200,  -144,    52,    76,  -149,   270,    62,   179,   189,    84,
    72,    75,    54,    57,  -150,   156,   157,   158,   144,   145,
   147,    45,  -145,   241,    88,    56,    59,   237,   238,    66,
  -147,    72,  -149,  -144,    52,    76,   135,  -148,    62,  -161,
   273,    84,    45,    75,    54,    57,    56,    59,  -146,   161,
    66,   156,   157,   158,   144,    52,    76,   274,  -147,    62,
   132,   194,    84,    72,    75,    54,    57,   156,   157,   158,
   144,   145,   147,   192,    45,   181,   108,   187,    56,    59,
   290,   291,    66,   292,    72,  -146,   105,    52,    76,   100,
  -145,    62,   171,   173,    84,    45,    75,    54,    57,    56,
    59,   174,   273,    66,   305,  -144,  -147,  -145,    52,    76,
  -149,  -146,    62,   306,   307,    84,    72,    75,    54,    57,
   156,   157,   158,   144,   145,   147,    89,    45,   190,    71,
   175,    56,    59,  -145,    38,    66,   314,    72,  -193,   181,
    52,    76,    35,   185,    62,   267,   nil,    84,    45,    75,
    54,    57,    56,    59,   nil,   nil,    66,   nil,   nil,   nil,
   nil,    52,    76,   nil,   nil,    62,   nil,   nil,    84,    72,
    75,    54,    57,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
    45,   nil,   nil,   nil,    56,    59,   nil,   nil,    66,   nil,
    72,   nil,   nil,    52,    76,   nil,   nil,    62,   nil,   nil,
    84,    45,    75,    54,    57,    56,    59,   nil,   nil,    66,
   nil,   nil,   nil,   nil,    52,    76,   nil,   nil,    62,   nil,
   nil,    84,    72,    75,    54,    57,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,    45,   nil,   nil,   nil,    56,    59,   nil,
   nil,    66,   nil,    72,   nil,   nil,    52,    76,   nil,   nil,
    62,   nil,   nil,    84,    45,    75,    54,    57,    56,    59,
   nil,   nil,    66,   nil,   nil,   nil,   nil,    52,    76,   nil,
   nil,    62,   nil,   nil,    84,    72,    75,    54,    57,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,    45,    75,    54,    57,
    56,    59,   nil,   nil,    66,   nil,    72,   nil,   nil,    52,
    76,   nil,   nil,    62,   nil,   nil,    84,    45,    75,    54,
    57,    56,    59,   nil,   nil,    66,   nil,   nil,    45,   nil,
    52,    76,    56,   116,    62,   nil,    66,    84,    72,   nil,
   nil,   111,    75,    54,    57,    62,   nil,   nil,   nil,    45,
   nil,   nil,   nil,    56,    59,   nil,   nil,    66,    75,    54,
    57,   141,    52,    76,   nil,   nil,    62,   nil,   nil,    84,
   nil,   nil,   nil,    45,    75,    54,    57,    56,    59,   nil,
   nil,    66,   nil,   nil,   nil,   nil,    52,   nil,   nil,    45,
    62,   nil,   nil,    56,    59,   nil,   nil,    66,    75,    54,
    57,   nil,    52,   nil,   nil,    45,    62,   nil,   nil,    56,
    59,   nil,   nil,    66,    75,    54,    57,   nil,    52,   nil,
   nil,   nil,    62,   nil,    75,    54,    57,   nil,   nil,    45,
    75,    54,    57,    56,    59,   nil,   nil,    66,   nil,   nil,
   nil,   nil,    52,   nil,   nil,    45,    62,   nil,   nil,    56,
   196,   nil,   nil,    66,   nil,    45,   nil,   nil,   111,    56,
    59,    45,    62,    66,   nil,    56,    59,   nil,    52,    66,
   nil,   nil,    62,   nil,    52,    75,    54,    57,    62,   nil,
   nil,    51,    54,    57,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,    75,    54,    57,   nil,   nil,   nil,    75,    54,    57,
   nil,    48,   nil,   nil,   nil,   nil,    45,    75,    54,    57,
    56,    59,    45,   nil,    66,   nil,    56,    59,   nil,    52,
    66,   nil,    45,    62,    49,    52,    56,    59,    45,    62,
    66,   nil,    56,    59,   nil,    52,    66,   nil,    45,    62,
   nil,    52,    56,    59,   nil,    62,    66,    54,    57,    54,
    57,    52,   nil,   nil,   nil,    62,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,    54,    57,    54,    57,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,    45,   nil,    45,
   nil,    56,   196,    56,   196,    66,   nil,    66,    54,    57,
   111,    49,   111,    45,    62,    45,    62,    56,   196,    56,
   196,    66,   nil,    66,   nil,   nil,   111,   nil,   111,   nil,
    62,   nil,    62,    54,    57,    54,    57,   287,    45,   nil,
   nil,   nil,    56,   196,   nil,   nil,    66,   nil,   nil,    54,
    57,   111,   209,   nil,   nil,    62,    54,    57,   nil,   nil,
   nil,   nil,   nil,    45,   nil,    45,   nil,    56,   196,    56,
   196,    66,   nil,    66,   nil,   nil,   111,   nil,   111,    45,
    62,   nil,    62,    56,   196,   nil,    45,    66,    54,    57,
    56,   196,   111,   nil,    66,   nil,    62,   nil,   nil,   111,
   nil,   nil,   nil,    62,    54,    57,   nil,   nil,   131,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    45,   nil,
   nil,   nil,    56,    59,   204,   nil,    66,   nil,   nil,   nil,
    49,    52,   nil,   nil,    45,    62,   nil,   nil,    56,    59,
   nil,   nil,    66,   nil,   150,   154,    49,    52,   nil,   nil,
   nil,    62,   213,   146,   148,   151,   153,   150,   154,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   146,   148,   151,   153,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   149,   152,   nil,
   nil,   156,   157,   158,   144,   145,   147,   nil,   nil,   nil,
   149,   152,   150,   154,   156,   157,   158,   144,   145,   147,
   nil,   146,   148,   151,   153,   150,   154,   nil,   nil,   nil,
   nil,   150,   154,   nil,   146,   148,   151,   153,   nil,   nil,
   146,   148,   151,   153,   nil,   149,   152,   nil,   nil,   156,
   157,   158,   144,   145,   147,   299,   nil,   nil,   nil,   152,
   nil,   nil,   156,   157,   158,   144,   145,   147,   156,   157,
   158,   144,   145,   147,   297,   nil,    16,   nil,    23,    27,
   nil,     1,     5,   nil,    10,   nil,    13,   nil,    20,   nil,
    28,   nil,   nil,     4,     8,    16,   296,    23,    27,   nil,
     1,     5,   nil,    10,   nil,    13,   nil,    20,   nil,    28,
   nil,   nil,     4,     8,   nil,   271,   nil,    16,   nil,    23,
    27,   nil,     1,     5,   nil,    10,   nil,    13,   nil,    20,
   nil,    28,   nil,   nil,     4,     8,    16,   227,    23,    27,
   nil,     1,     5,   nil,    10,   nil,    13,   nil,    20,   nil,
    28,   nil,   nil,     4,     8,   nil,   312,   nil,    16,   nil,
    23,    27,   nil,     1,     5,   nil,    10,   nil,    13,   nil,
    20,   nil,    28,   nil,   nil,     4,     8,    16,   316,    23,
    27,   nil,     1,     5,   nil,    10,   nil,    13,   nil,    20,
   nil,    28,   nil,   nil,     4,     8,   nil,   318,   nil,    16,
   nil,    23,    27,   nil,     1,     5,   nil,    10,   nil,    13,
   nil,    20,   nil,    28,   nil,   nil,     4,     8,    16,   265,
    23,    27,   nil,     1,     5,   nil,    10,   nil,    13,   nil,
    20,   nil,    28,   nil,   nil,     4,     8,   nil,   319,   nil,
    16,   nil,    23,    27,   nil,     1,     5,   nil,    10,   nil,
    13,   nil,    20,   nil,    28,   nil,   nil,     4,     8,    16,
   258,    23,    27,   nil,     1,     5,   nil,    10,   nil,    13,
   nil,    20,   nil,    28,   nil,   nil,     4,     8,   nil,   320,
   nil,    16,   nil,    23,    27,   nil,     1,     5,   nil,    10,
   nil,    13,   nil,    20,   nil,    28,   nil,   nil,     4,     8,
    16,   nil,    23,    27,   nil,     1,     5,   nil,    10,   nil,
    13,   nil,    20,   nil,    28,   nil,   nil,     4,     8,    16,
   nil,    23,    27,   nil,     1,     5,   nil,    10,   nil,    13,
   nil,    20,   nil,    28,   nil,   nil,     4,     8,    16,   nil,
    23,    27,   nil,     1,     5,   nil,    10,   nil,    13,   nil,
    20,   nil,    28,   nil,   nil,     4,     8 ]

racc_action_check = [
   158,   158,   158,   233,   105,   129,   129,   135,    17,   170,
    59,   250,    17,   140,   294,   135,   263,   140,   140,   294,
   158,    84,    84,    84,   250,    17,    10,    10,   233,   233,
    59,   158,   126,   126,    42,   158,   158,   170,   170,   158,
   129,    84,   221,   129,   158,   158,   105,   236,   158,    17,
   221,   158,    84,   144,   144,   144,    84,    84,   236,    42,
    84,    10,   171,   236,    10,    84,    84,   126,   114,    84,
   126,   176,    84,   144,   145,   145,   145,   116,   221,   221,
   221,   221,   221,   221,   144,   244,    78,   165,   144,   144,
   116,    92,   144,   244,   145,   165,    27,   144,   144,    23,
    23,   144,    92,    27,   144,   145,   222,    92,    24,   145,
   145,    85,    90,   145,   222,    24,    24,     5,   145,   145,
    85,    85,   145,    90,     5,   145,   269,   269,    90,    85,
    85,    85,    85,   175,    77,   146,   146,   146,   175,   229,
   229,   180,   222,   222,   222,   222,   222,   222,   218,   218,
   218,   218,   181,    85,    85,   146,   219,    85,    85,    85,
    85,    85,    85,    71,   219,   162,   146,   157,   157,   157,
   146,   146,     1,     1,   146,   108,   162,   186,   108,   146,
   146,   162,   108,   146,   174,   174,   146,   157,   154,   154,
   154,    70,   219,   219,   219,   219,   219,   219,   157,   188,
   159,   189,   157,   157,   159,   159,   157,   190,   154,   224,
    68,   157,   157,   228,   228,   157,   196,   224,   157,   154,
    16,    16,    16,   154,   154,   134,    67,   154,   202,   134,
   134,   113,   154,   154,    65,   210,   154,   161,   160,   154,
    16,   147,   147,   147,    80,   224,   224,   224,   224,   224,
   224,    16,    63,   172,    61,    16,    16,   172,   172,    16,
    60,   147,    81,    58,    16,    16,    53,    82,    16,    52,
   227,    16,   147,   153,   153,   153,   147,   147,    87,    89,
   147,   216,   216,   216,   216,   147,   147,   232,   115,   147,
    50,   130,   147,   153,   152,   152,   152,   217,   217,   217,
   217,   217,   217,   127,   153,   240,    36,   112,   153,   153,
   247,   248,   153,   249,   152,   125,    35,   153,   153,    28,
    79,   153,    91,    94,   153,   152,    76,    76,    76,   152,
   152,    95,   271,   152,   273,   276,   278,   279,   152,   152,
   280,   282,   152,   285,   288,   152,    76,   151,   151,   151,
   225,   225,   225,   225,   225,   225,    97,    76,   119,    15,
    99,    76,    76,   118,     6,    76,   301,   151,   302,   106,
    76,    76,     2,   109,    76,   203,   nil,    76,   151,   148,
   148,   148,   151,   151,   nil,   nil,   151,   nil,   nil,   nil,
   nil,   151,   151,   nil,   nil,   151,   nil,   nil,   151,   148,
   149,   149,   149,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   148,   nil,   nil,   nil,   148,   148,   nil,   nil,   148,   nil,
   149,   nil,   nil,   148,   148,   nil,   nil,   148,   nil,   nil,
   148,   149,    72,    72,    72,   149,   149,   nil,   nil,   149,
   nil,   nil,   nil,   nil,   149,   149,   nil,   nil,   149,   nil,
   nil,   149,    72,    34,    34,    34,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,    72,   nil,   nil,   nil,    72,    72,   nil,
   nil,    72,   nil,    34,   nil,   nil,    72,    72,   nil,   nil,
    72,   nil,   nil,    72,    34,   150,   150,   150,    34,    34,
   nil,   nil,    34,   nil,   nil,   nil,   nil,    34,    34,   nil,
   nil,    34,   nil,   nil,    34,   150,   156,   156,   156,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   150,    38,    38,    38,
   150,   150,   nil,   nil,   150,   nil,   156,   nil,   nil,   150,
   150,   nil,   nil,   150,   nil,   nil,   150,   156,    33,    33,
    33,   156,   156,   nil,   nil,   156,   nil,   nil,    38,   nil,
   156,   156,    38,    38,   156,   nil,    38,   156,    33,   nil,
   nil,    38,   197,   197,   197,    38,   nil,   nil,   nil,    33,
   nil,   nil,   nil,    33,    33,   nil,   nil,    33,    75,    75,
    75,    75,    33,    33,   nil,   nil,    33,   nil,   nil,    33,
   nil,   nil,   nil,   197,    51,    51,    51,   197,   197,   nil,
   nil,   197,   nil,   nil,   nil,   nil,   197,   nil,   nil,    75,
   197,   nil,   nil,    75,    75,   nil,   nil,    75,   270,   270,
   270,   nil,    75,   nil,   nil,    51,    75,   nil,   nil,    51,
    51,   nil,   nil,    51,   187,   187,   187,   nil,    51,   nil,
   nil,   nil,    51,   nil,    20,    20,    20,   nil,   nil,   270,
   290,   290,   290,   270,   270,   nil,   nil,   270,   nil,   nil,
   nil,   nil,   270,   nil,   nil,   187,   270,   nil,   nil,   187,
   187,   nil,   nil,   187,   nil,    20,   nil,   nil,   187,    20,
    20,   290,   187,    20,   nil,   290,   290,   nil,    20,   290,
   nil,   nil,    20,   nil,   290,   291,   291,   291,   290,   nil,
   nil,    13,    13,    13,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   179,   179,   179,   nil,   nil,   nil,   178,   178,   178,
   nil,    13,   nil,   nil,   nil,   nil,   291,    88,    88,    88,
   291,   291,    13,   nil,   291,   nil,    13,    13,   nil,   291,
    13,   nil,   179,   291,    13,    13,   179,   179,   178,    13,
   179,   nil,   178,   178,   nil,   179,   178,   nil,    88,   179,
   nil,   178,    88,    88,   nil,   178,    88,   209,   209,   132,
   132,    88,   nil,   nil,   nil,    88,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   234,   234,   235,   235,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   209,   nil,   132,
   nil,   209,   209,   132,   132,   209,   nil,   132,   289,   289,
   209,   132,   132,   234,   209,   235,   132,   234,   234,   235,
   235,   234,   nil,   235,   nil,   nil,   234,   nil,   235,   nil,
   234,   nil,   235,   242,   242,   300,   300,   242,   289,   nil,
   nil,   nil,   289,   289,   nil,   nil,   289,   nil,   nil,   137,
   137,   289,   137,   nil,   nil,   289,   173,   173,   nil,   nil,
   nil,   nil,   nil,   242,   nil,   300,   nil,   242,   242,   300,
   300,   242,   nil,   300,   nil,   nil,   242,   nil,   300,   137,
   242,   nil,   300,   137,   137,   nil,   173,   137,    48,    48,
   173,   173,   137,   nil,   173,   nil,   137,   nil,   nil,   173,
   nil,   nil,   nil,   173,   136,   136,   nil,   nil,    48,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    48,   nil,
   nil,   nil,    48,    48,   136,   nil,    48,   nil,   nil,   nil,
    48,    48,   nil,   nil,   136,    48,   nil,   nil,   136,   136,
   nil,   nil,   136,   nil,   139,   139,   136,   136,   nil,   nil,
   nil,   136,   139,   139,   139,   139,   139,   101,   101,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   101,   101,   101,   101,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   139,   139,   nil,
   nil,   139,   139,   139,   139,   139,   139,   nil,   nil,   nil,
   101,   101,   102,   102,   101,   101,   101,   101,   101,   101,
   nil,   102,   102,   102,   102,   220,   220,   nil,   nil,   nil,
   nil,   223,   223,   nil,   220,   220,   220,   220,   nil,   nil,
   223,   223,   223,   223,   nil,   102,   102,   nil,   nil,   102,
   102,   102,   102,   102,   102,   264,   nil,   nil,   nil,   220,
   nil,   nil,   220,   220,   220,   220,   220,   220,   223,   223,
   223,   223,   223,   223,   257,   nil,   264,   nil,   264,   264,
   nil,   264,   264,   nil,   264,   nil,   264,   nil,   264,   nil,
   264,   nil,   nil,   264,   264,   257,   252,   257,   257,   nil,
   257,   257,   nil,   257,   nil,   257,   nil,   257,   nil,   257,
   nil,   nil,   257,   257,   nil,   226,   nil,   252,   nil,   252,
   252,   nil,   252,   252,   nil,   252,   nil,   252,   nil,   252,
   nil,   252,   nil,   nil,   252,   252,   226,   155,   226,   226,
   nil,   226,   226,   nil,   226,   nil,   226,   nil,   226,   nil,
   226,   nil,   nil,   226,   226,   nil,   295,   nil,   155,   nil,
   155,   155,   nil,   155,   155,   nil,   155,   nil,   155,   nil,
   155,   nil,   155,   nil,   nil,   155,   155,   295,   305,   295,
   295,   nil,   295,   295,   nil,   295,   nil,   295,   nil,   295,
   nil,   295,   nil,   nil,   295,   295,   nil,   307,   nil,   305,
   nil,   305,   305,   nil,   305,   305,   nil,   305,   nil,   305,
   nil,   305,   nil,   305,   nil,   nil,   305,   305,   307,   192,
   307,   307,   nil,   307,   307,   nil,   307,   nil,   307,   nil,
   307,   nil,   307,   nil,   nil,   307,   307,   nil,   315,   nil,
   192,   nil,   192,   192,   nil,   192,   192,   nil,   192,   nil,
   192,   nil,   192,   nil,   192,   nil,   nil,   192,   192,   315,
   185,   315,   315,   nil,   315,   315,   nil,   315,   nil,   315,
   nil,   315,   nil,   315,   nil,   nil,   315,   315,   nil,   317,
   nil,   185,   nil,   185,   185,   nil,   185,   185,   nil,   185,
   nil,   185,   nil,   185,   nil,   185,   nil,   nil,   185,   185,
   317,   nil,   317,   317,   nil,   317,   317,   nil,   317,   nil,
   317,   nil,   317,   nil,   317,   nil,   nil,   317,   317,     0,
   nil,     0,     0,   nil,     0,     0,   nil,     0,   nil,     0,
   nil,     0,   nil,     0,   nil,   nil,     0,     0,    19,   nil,
    19,    19,   nil,    19,    19,   nil,    19,   nil,    19,   nil,
    19,   nil,    19,   nil,   nil,    19,    19 ]

racc_action_pointer = [
  1271,   159,   366,   nil,   nil,    79,   358,   nil,   nil,   nil,
    23,   nil,   nil,   699,   nil,   359,   218,     6,   nil,  1290,
   642,   nil,   nil,    96,    70,   nil,   nil,    58,   277,   nil,
   nil,   nil,   nil,   536,   451,   278,   271,   nil,   515,   nil,
   nil,   nil,    24,   nil,   nil,   nil,   nil,   nil,   885,   nil,
   280,   592,   267,   256,   nil,   nil,   nil,   nil,   242,     8,
   239,   252,   nil,   231,   nil,   213,   nil,   205,   189,   nil,
   170,   163,   430,   nil,   nil,   576,   324,   113,    65,   299,
   223,   241,   246,   nil,    19,   105,   nil,   257,   725,   241,
    90,   316,    69,   nil,   317,   321,   nil,   350,   nil,   338,
   nil,   942,   977,   nil,   nil,    -5,   359,   nil,   137,   367,
   nil,   nil,   268,   210,    58,   267,    68,   nil,   342,   340,
   nil,   nil,   nil,   nil,   nil,   294,    29,   297,   nil,     2,
   268,   nil,   766,   nil,   220,   -31,   901,   846,   nil,   929,
     8,   nil,   nil,   nil,    51,    72,   133,   239,   377,   398,
   483,   345,   292,   271,   186,  1110,   504,   165,    -2,   195,
   228,   228,   143,   nil,   nil,    71,   nil,   nil,   nil,   nil,
   -11,    24,   209,   853,   181,   100,    65,   nil,   715,   709,
   134,   114,   nil,   nil,   nil,  1233,   170,   632,   192,   163,
   169,   nil,  1192,   nil,   nil,   nil,   194,   560,   nil,   nil,
   nil,   nil,   226,   352,   nil,   nil,   nil,   nil,   nil,   764,
   226,   nil,   nil,   nil,   nil,   nil,   229,   245,    96,   140,
   990,    26,    90,   996,   193,   298,  1088,   241,   159,    85,
   nil,   nil,   280,   -20,   780,   782,    25,   nil,   nil,   nil,
   295,   nil,   830,   nil,    75,   nil,   nil,   297,   298,   290,
     1,   nil,  1069,   nil,   nil,   nil,   nil,  1047,   nil,   nil,
   nil,   nil,   nil,     6,  1028,   nil,   nil,   nil,   nil,   117,
   616,   303,   nil,   328,   nil,   nil,   314,   nil,   315,   316,
   319,   nil,   320,   nil,   nil,   336,   nil,   nil,   338,   805,
   648,   693,   nil,   nil,   -19,  1129,   nil,   nil,   nil,   nil,
   832,   359,   361,   nil,   nil,  1151,   nil,  1170,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,  1211,   nil,  1252,   nil,   nil,
   nil ]

racc_action_default = [
  -170,  -194,  -194,    -7,  -163,  -194,  -194,    -8,  -161,    -9,
  -194,   -10,   -11,  -162,   -12,  -194,  -194,  -194,   -13,    -1,
  -194,   -14,    -2,  -194,  -194,   -15,    -3,  -194,   -40,   -16,
    -5,   -17,    -6,  -194,  -194,   -80,  -170,  -162,   -73,  -168,
  -167,  -166,  -170,  -164,  -169,  -187,   -33,   -20,  -194,   -32,
   -21,  -194,   -64,   -22,  -103,   -23,  -105,  -104,   -25,   -63,
   -26,  -194,   -62,   -27,  -150,   -28,  -151,   -29,  -194,   -30,
   -31,  -194,  -194,  -113,   -98,  -194,  -194,   -92,   -96,   -93,
  -100,   -94,   -99,   -97,  -194,  -194,   -95,   -91,  -194,   -73,
  -170,   -43,  -170,    -4,  -194,  -154,  -152,  -194,   -39,  -170,
   -41,   -71,   -72,   -79,   -81,  -194,  -192,   -78,  -194,  -194,
  -183,   -64,   -60,   -66,  -192,   -69,   -63,   -58,   -67,  -194,
  -149,  -148,   -70,   -68,   -74,   -65,  -194,  -194,  -181,  -194,
  -194,   -19,  -194,   -83,  -194,  -194,  -194,  -194,   321,  -194,
  -194,  -189,  -127,  -120,  -194,  -194,  -194,  -194,  -194,  -194,
  -194,  -194,  -194,  -194,  -194,  -194,  -194,  -194,  -194,  -194,
  -192,  -194,  -170,   -47,   -49,  -194,   -56,   -63,   -55,   -46,
  -194,   -80,  -194,  -194,  -194,  -171,  -194,  -172,  -194,  -194,
  -194,  -193,  -184,  -185,  -186,  -194,  -194,   -61,  -194,  -193,
   -73,  -182,  -194,  -165,   -18,   -24,   -63,  -194,  -106,  -190,
  -191,   -34,  -194,  -194,  -102,  -139,  -144,  -147,  -145,  -194,
  -194,  -146,  -138,  -130,  -188,  -116,  -118,  -122,  -119,  -124,
  -129,  -126,  -123,  -128,  -125,  -121,  -194,  -110,  -114,  -115,
  -117,  -107,  -194,  -194,  -194,  -194,  -194,   -52,   -51,   -45,
  -192,   -44,  -194,  -132,  -194,  -136,  -153,  -180,  -178,  -194,
  -194,  -175,  -194,   -77,   -76,   -38,   -82,  -194,  -158,   -35,
   -59,   -36,   -75,  -192,  -194,  -160,   -84,  -101,  -141,  -192,
  -194,  -110,  -109,  -194,   -37,   -50,   -86,   -53,   -90,   -87,
   -88,   -89,   -85,   -54,   -48,  -194,  -133,  -131,  -194,  -194,
  -194,  -194,  -173,  -174,  -194,  -194,  -156,  -157,   -57,  -159,
  -194,  -194,  -191,  -143,  -108,  -194,   -42,  -194,  -137,  -179,
  -177,  -176,  -155,  -142,  -140,  -194,  -112,  -194,  -135,  -111,
  -134 ]

racc_goto_table = [
     2,    17,    93,    43,    19,   117,   106,    70,   251,    47,
    64,    36,   272,    46,   180,   205,   122,    96,    22,     2,
    17,   243,   188,   114,   170,    97,   172,    69,   124,   134,
   277,   283,   125,    99,    15,    64,   210,   256,    67,   300,
   284,   242,    70,    91,   130,    64,   186,   212,    46,   112,
    65,   269,   123,   140,   110,    95,   304,   176,   109,    42,
   128,   127,    69,   121,   195,   249,   159,   250,   232,    98,
   182,   nil,   245,    67,   160,   120,   nil,   nil,   nil,   124,
   nil,    60,   nil,   nil,    94,    65,   nil,   268,   nil,   nil,
   286,   nil,   nil,   nil,   nil,   nil,   233,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   115,   nil,   210,   nil,
   nil,   nil,   nil,   nil,   183,   133,    60,   177,   nil,   191,
   nil,   nil,   193,   nil,   nil,   nil,    70,   311,   nil,    64,
    70,   211,   203,    64,    64,   201,    46,   nil,   nil,   133,
   nil,   245,   240,   nil,   nil,   nil,    69,   nil,   285,   nil,
    69,   nil,   133,   nil,   260,     2,    17,    67,   168,   226,
   168,    67,   121,   nil,   nil,   122,   nil,   211,   246,    65,
    64,   298,   nil,    65,   120,   263,   nil,   301,   313,   262,
   124,   125,   nil,   nil,    64,     2,    17,   nil,   308,   257,
   nil,   nil,     2,    17,   nil,   nil,   264,   nil,   121,   210,
    60,   123,   nil,   211,    60,   207,    64,   nil,   nil,    93,
   120,   nil,   121,   nil,   nil,   nil,   nil,   nil,   nil,    63,
   nil,   nil,   nil,   nil,   120,   nil,     2,    17,   282,   282,
   168,    64,    64,   nil,   121,   nil,   211,   nil,   nil,    64,
    93,   207,   253,   254,   118,   nil,   120,    93,   281,   281,
    58,   nil,     2,    17,    63,   115,   295,     2,    17,   121,
   121,   266,   nil,   nil,     2,    17,   nil,   121,   nil,   nil,
   nil,   280,   280,   nil,   nil,   113,   nil,   207,    93,   120,
   nil,   nil,   nil,   211,   nil,    58,    64,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   211,     2,    17,    64,    93,   nil,
    93,   nil,   278,   278,   168,     2,    17,     2,    17,   315,
   207,   317,   nil,   nil,   121,     2,    17,     2,    17,   nil,
   nil,   nil,    85,   nil,   nil,   121,   120,   166,   nil,   166,
   nil,   nil,   nil,   nil,   303,   nil,   nil,   120,    63,   101,
   102,   nil,    63,   208,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   309,   310,   nil,   207,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   207,    58,
   nil,   nil,   nil,    58,   206,   nil,   nil,   nil,   139,   208,
   nil,   nil,   142,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   143,   nil,   nil,   118,   nil,   nil,   nil,   nil,   nil,   166,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   206,   nil,   nil,   nil,   nil,   208,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   113,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   279,   279,   nil,   nil,   nil,   nil,   206,   nil,   208,   nil,
   215,   216,   217,   218,   219,   220,   221,   222,   223,   224,
   225,   nil,   228,   229,   230,   nil,   nil,   nil,   nil,   nil,
   nil,   276,   276,   166,   nil,   nil,   nil,   nil,   nil,   206,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   208,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   208,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   206,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   206 ]

racc_goto_check = [
    29,    35,     4,    69,     2,    45,    36,    28,    72,    18,
    47,    30,    56,    29,    34,    62,    48,    28,     3,    29,
    35,    58,    34,    33,    39,    35,    39,    27,    50,    54,
    44,    44,    28,    30,     1,    47,    60,    53,    26,    55,
    40,    57,    28,    38,    18,    47,    32,    61,    29,    31,
    25,    63,    27,    54,     3,    64,    56,    65,    66,    67,
     3,    68,    27,    26,    21,    70,    54,    71,    34,     5,
    73,   nil,    60,    26,    33,    25,   nil,   nil,   nil,    50,
   nil,    23,   nil,   nil,    51,    25,   nil,    62,   nil,   nil,
    58,   nil,   nil,   nil,   nil,   nil,    39,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,    23,   nil,    60,   nil,
   nil,   nil,   nil,   nil,    30,    51,    23,     3,   nil,    69,
   nil,   nil,    69,   nil,   nil,   nil,    28,    72,   nil,    47,
    28,    28,    18,    47,    47,    29,    29,   nil,   nil,    51,
   nil,    60,    36,   nil,   nil,   nil,    27,   nil,    34,   nil,
    27,   nil,    51,   nil,    45,    29,    35,    26,    23,     2,
    23,    26,    26,   nil,   nil,    48,   nil,    28,    28,    25,
    47,    34,   nil,    25,    25,    33,   nil,    34,    62,    50,
    50,    28,   nil,   nil,    47,    29,    35,   nil,    60,     2,
   nil,   nil,    29,    35,   nil,   nil,     2,   nil,    26,    60,
    23,    27,   nil,    28,    23,    23,    47,   nil,   nil,     4,
    25,   nil,    26,   nil,   nil,   nil,   nil,   nil,   nil,    24,
   nil,   nil,   nil,   nil,    25,   nil,    29,    35,    28,    28,
    23,    47,    47,   nil,    26,   nil,    28,   nil,   nil,    47,
     4,    23,    51,    51,    24,   nil,    25,     4,    27,    27,
    22,   nil,    29,    35,    24,    23,     2,    29,    35,    26,
    26,    51,   nil,   nil,    29,    35,   nil,    26,   nil,   nil,
   nil,    25,    25,   nil,   nil,    22,   nil,    23,     4,    25,
   nil,   nil,   nil,    28,   nil,    22,    47,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,    28,    29,    35,    47,     4,   nil,
     4,   nil,    23,    23,    23,    29,    35,    29,    35,     2,
    23,     2,   nil,   nil,    26,    29,    35,    29,    35,   nil,
   nil,   nil,    49,   nil,   nil,    26,    25,    22,   nil,    22,
   nil,   nil,   nil,   nil,    51,   nil,   nil,    25,    24,    49,
    49,   nil,    24,    24,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,    51,    51,   nil,    23,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    23,    22,
   nil,   nil,   nil,    22,    22,   nil,   nil,   nil,    49,    24,
   nil,   nil,    49,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
    49,   nil,   nil,    24,   nil,   nil,   nil,   nil,   nil,    22,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
    22,   nil,   nil,   nil,   nil,    24,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,    22,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
    24,    24,   nil,   nil,   nil,   nil,    22,   nil,    24,   nil,
    49,    49,    49,    49,    49,    49,    49,    49,    49,    49,
    49,   nil,    49,    49,    49,   nil,   nil,   nil,   nil,   nil,
   nil,    22,    22,    22,   nil,   nil,   nil,   nil,   nil,    22,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,    24,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,    24,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,    22,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,    22 ]

racc_goto_pointer = [
   nil,    34,     4,    18,   -17,    45,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    -4,   nil,
   nil,   -68,   237,    68,   206,    37,    25,    14,    -6,     0,
     6,    11,   -66,   -15,   -92,     1,   -29,   nil,    26,   -66,
  -196,   nil,   nil,   nil,  -204,   -33,   nil,    -3,   -22,   306,
   -10,    64,   nil,  -144,   -22,  -230,  -215,  -132,  -152,   nil,
  -101,   -90,  -122,  -158,    32,   -42,    22,    49,    19,    -7,
  -110,  -108,  -167,   -38 ]

racc_goto_default = [
   nil,   nil,   nil,   169,    26,    30,    32,     3,     7,     9,
    11,    12,    14,    18,    21,    25,    29,    31,   nil,    50,
    53,    55,    77,    78,    79,    81,    82,    86,    87,    74,
     6,   nil,   nil,   nil,   nil,    61,   nil,    24,   nil,   nil,
   163,   236,   164,   165,   nil,   nil,   119,    80,    83,   nil,
   107,    73,   103,   104,   nil,   197,   nil,   nil,   nil,   244,
    68,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil ]

racc_token_table = {
 false => 0,
 Object.new => 1,
 :LBRACK => 2,
 :DQTEXT => 3,
 :SQTEXT => 4,
 :RBRACK => 5,
 :LBRACE => 6,
 :RBRACE => 7,
 :SYMBOL => 8,
 :FARROW => 9,
 :COMMA => 10,
 :TRUE => 11,
 :FALSE => 12,
 :EQUALS => 13,
 :APPENDS => 14,
 :LESSEQUAL => 15,
 :NOTEQUAL => 16,
 :DOT => 17,
 :COLON => 18,
 :LLCOLLECT => 19,
 :RRCOLLECT => 20,
 :QMARK => 21,
 :LPAREN => 22,
 :RPAREN => 23,
 :ISEQUAL => 24,
 :GREATEREQUAL => 25,
 :GREATERTHAN => 26,
 :LESSTHAN => 27,
 :IF => 28,
 :ELSE => 29,
 :IMPORT => 30,
 :DEFINE => 31,
 :ELSIF => 32,
 :VARIABLE => 33,
 :CLASS => 34,
 :INHERITS => 35,
 :NODE => 36,
 :BOOLEAN => 37,
 :NAME => 38,
 :SEMIC => 39,
 :CASE => 40,
 :DEFAULT => 41,
 :AT => 42,
 :LCOLLECT => 43,
 :RCOLLECT => 44,
 :CLASSNAME => 45,
 :CLASSREF => 46,
 :NOT => 47,
 :OR => 48,
 :AND => 49,
 :UNDEF => 50,
 :PARROW => 51,
 :PLUS => 52,
 :MINUS => 53,
 :TIMES => 54,
 :DIV => 55,
 :LSHIFT => 56,
 :RSHIFT => 57,
 :UMINUS => 58 }

racc_use_result_var = true

racc_nt_base = 59

Racc_arg = [
 racc_action_table,
 racc_action_check,
 racc_action_default,
 racc_action_pointer,
 racc_goto_table,
 racc_goto_check,
 racc_goto_default,
 racc_goto_pointer,
 racc_nt_base,
 racc_reduce_table,
 racc_token_table,
 racc_shift_n,
 racc_reduce_n,
 racc_use_result_var ]

Racc_token_to_s_table = [
'$end',
'error',
'LBRACK',
'DQTEXT',
'SQTEXT',
'RBRACK',
'LBRACE',
'RBRACE',
'SYMBOL',
'FARROW',
'COMMA',
'TRUE',
'FALSE',
'EQUALS',
'APPENDS',
'LESSEQUAL',
'NOTEQUAL',
'DOT',
'COLON',
'LLCOLLECT',
'RRCOLLECT',
'QMARK',
'LPAREN',
'RPAREN',
'ISEQUAL',
'GREATEREQUAL',
'GREATERTHAN',
'LESSTHAN',
'IF',
'ELSE',
'IMPORT',
'DEFINE',
'ELSIF',
'VARIABLE',
'CLASS',
'INHERITS',
'NODE',
'BOOLEAN',
'NAME',
'SEMIC',
'CASE',
'DEFAULT',
'AT',
'LCOLLECT',
'RCOLLECT',
'CLASSNAME',
'CLASSREF',
'NOT',
'OR',
'AND',
'UNDEF',
'PARROW',
'PLUS',
'MINUS',
'TIMES',
'DIV',
'LSHIFT',
'RSHIFT',
'UMINUS',
'$start',
'program',
'statements',
'nil',
'statement',
'resource',
'virtualresource',
'collection',
'assignment',
'casestatement',
'ifstatement',
'import',
'fstatement',
'definition',
'hostclass',
'nodedef',
'resourceoverride',
'append',
'funcvalues',
'namestrings',
'resourcerefs',
'namestring',
'name',
'variable',
'type',
'boolean',
'funcrvalue',
'selector',
'quotedtext',
'resourceref',
'classname',
'resourceinstances',
'endsemi',
'params',
'endcomma',
'classref',
'anyparams',
'at',
'collectrhand',
'collstatements',
'collstatement',
'colljoin',
'collexpr',
'colllval',
'simplervalue',
'resourceinst',
'resourcename',
'undef',
'array',
'expression',
'param',
'rvalue',
'addparam',
'anyparam',
'rvalues',
'comma',
'else',
'caseopts',
'caseopt',
'casevalues',
'selectlhand',
'svalues',
'selectval',
'sintvalues',
'qtexts',
'argumentlist',
'classparent',
'hostnames',
'nodeparent',
'hostname',
'nothing',
'arguments',
'argument',
'classnameordefault']

Racc_debug_parser = false

##### racc system variables end #####

 # reduce 0 omitted

module_eval <<'.,.,', 'grammar.ra', 42
  def _reduce_1( val, _values, result )
    if val[0]
        # Make sure we always return an array.
        if val[0].is_a?(AST::ASTArray)
            if val[0].children.empty?
                result = nil
            else
                result = val[0]
            end
        else
            result = aryfy(val[0])
        end
    else
        result = nil
    end
   result
  end
.,.,

 # reduce 2 omitted

 # reduce 3 omitted

module_eval <<'.,.,', 'grammar.ra', 58
  def _reduce_4( val, _values, result )
    if val[0] and val[1]
        if val[0].instance_of?(AST::ASTArray)
            val[0].push(val[1])
            result = val[0]
        else
            result = ast AST::ASTArray, :children => [val[0],val[1]]
        end
    elsif obj = (val[0] || val[1])
        result = obj
    else result = nil
    end
   result
  end
.,.,

 # reduce 5 omitted

 # reduce 6 omitted

 # reduce 7 omitted

 # reduce 8 omitted

 # reduce 9 omitted

 # reduce 10 omitted

 # reduce 11 omitted

 # reduce 12 omitted

 # reduce 13 omitted

 # reduce 14 omitted

 # reduce 15 omitted

 # reduce 16 omitted

 # reduce 17 omitted

module_eval <<'.,.,', 'grammar.ra', 81
  def _reduce_18( val, _values, result )
    args = aryfy(val[2])
    result = ast AST::Function,
        :name => val[0],
        :arguments => args,
        :ftype => :statement
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 87
  def _reduce_19( val, _values, result )
    result = ast AST::Function,
        :name => val[0],
        :arguments => AST::ASTArray.new({}),
        :ftype => :statement
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 94
  def _reduce_20( val, _values, result )
    args = aryfy(val[1])
    result = ast AST::Function,
        :name => val[0],
        :arguments => args,
        :ftype => :statement
   result
  end
.,.,

 # reduce 21 omitted

 # reduce 22 omitted

 # reduce 23 omitted

module_eval <<'.,.,', 'grammar.ra', 104
  def _reduce_24( val, _values, result )
    result = aryfy(val[0], val[2])
    result.line = @lexer.line
    result.file = @lexer.file
   result
  end
.,.,

 # reduce 25 omitted

 # reduce 26 omitted

 # reduce 27 omitted

 # reduce 28 omitted

 # reduce 29 omitted

 # reduce 30 omitted

 # reduce 31 omitted

module_eval <<'.,.,', 'grammar.ra', 117
  def _reduce_32( val, _values, result )
                    result = ast AST::Name, :value => val[0]
   result
  end
.,.,

 # reduce 33 omitted

module_eval <<'.,.,', 'grammar.ra', 128
  def _reduce_34( val, _values, result )
    unless val[0].is_a?(AST::ASTArray)
        val[0] = aryfy(val[0])
    end

    val[0].push(val[2])

    result = val[0]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 149
  def _reduce_35( val, _values, result )
    array = val[2]
    if array.instance_of?(AST::ResourceInstance)
        array = [array]
    end
    result = ast AST::ASTArray

    # this iterates across each specified resourceinstance
    array.each { |instance|
        unless instance.instance_of?(AST::ResourceInstance)
            raise Puppet::Dev, "Got something that isn't an instance"
        end
        # now, i need to somehow differentiate between those things with
        # arrays in their names, and normal things
        result.push ast(AST::Resource,
            :type => val[0],
            :title => instance[0],
            :params => instance[1])
    }
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 152
  def _reduce_36( val, _values, result )
    # This is a deprecated syntax.
    error "All resource specifications require names"
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 155
  def _reduce_37( val, _values, result )
    # a defaults setting for a type
    result = ast(AST::ResourceDefaults, :type => val[0], :params => val[2])
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 160
  def _reduce_38( val, _values, result )
    result = ast AST::ResourceOverride, :object => val[0], :params => val[2]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 187
  def _reduce_39( val, _values, result )
    type = val[0]

    if (type == :exported and ! Puppet[:storeconfigs]) and ! Puppet[:parseonly]
        Puppet.warning addcontext("You cannot collect without storeconfigs being set")
    end

    if val[1].is_a? AST::ResourceDefaults
        error "Defaults are not virtualizable"
    end

    method = type.to_s + "="

    # Just mark our resources as exported and pass them through.
    if val[1].instance_of?(AST::ASTArray)
        val[1].each do |obj|
            obj.send(method, true)
        end
    else
        val[1].send(method, true)
    end

    result = val[1]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 188
  def _reduce_40( val, _values, result )
 result = :virtual
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 189
  def _reduce_41( val, _values, result )
 result = :exported
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 213
  def _reduce_42( val, _values, result )
    if val[0] =~ /^[a-z]/
        Puppet.warning addcontext("Collection names must now be capitalized")
    end
    type = val[0].downcase
    args = {:type => type}

    if val[1].is_a?(AST::CollExpr)
        args[:query] = val[1]
        args[:query].type = type
        args[:form] = args[:query].form
    else
        args[:form] = val[1]
    end
    if args[:form] == :exported and ! Puppet[:storeconfigs] and ! Puppet[:parseonly]
        Puppet.warning addcontext("You cannot collect exported resources without storeconfigs being set; the collection will be ignored")
    end
    args[:override] = val[3]
    result = ast AST::Collection, args
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 232
  def _reduce_43( val, _values, result )
    if val[0] =~ /^[a-z]/
        Puppet.warning addcontext("Collection names must now be capitalized")
    end
    type = val[0].downcase
    args = {:type => type}

    if val[1].is_a?(AST::CollExpr)
        args[:query] = val[1]
        args[:query].type = type
        args[:form] = args[:query].form
    else
        args[:form] = val[1]
    end
    if args[:form] == :exported and ! Puppet[:storeconfigs] and ! Puppet[:parseonly]
        Puppet.warning addcontext("You cannot collect exported resources without storeconfigs being set; the collection will be ignored")
    end
    result = ast AST::Collection, args
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 242
  def _reduce_44( val, _values, result )
    if val[1]
        result = val[1]
        result.form = :virtual
    else
        result = :virtual
    end
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 250
  def _reduce_45( val, _values, result )
    if val[1]
        result = val[1]
        result.form = :exported
    else
        result = :exported
    end
   result
  end
.,.,

 # reduce 46 omitted

 # reduce 47 omitted

module_eval <<'.,.,', 'grammar.ra', 258
  def _reduce_48( val, _values, result )
    result = ast AST::CollExpr, :test1 => val[0], :oper => val[1], :test2 => val[2]
   result
  end
.,.,

 # reduce 49 omitted

module_eval <<'.,.,', 'grammar.ra', 264
  def _reduce_50( val, _values, result )
    result = val[1]
    result.parens = true
   result
  end
.,.,

 # reduce 51 omitted

 # reduce 52 omitted

module_eval <<'.,.,', 'grammar.ra', 272
  def _reduce_53( val, _values, result )
    result = ast AST::CollExpr, :test1 => val[0], :oper => val[1], :test2 => val[2]
    #result = ast AST::CollExpr
    #result.push *val
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 277
  def _reduce_54( val, _values, result )
    result = ast AST::CollExpr, :test1 => val[0], :oper => val[1], :test2 => val[2]
    #result = ast AST::CollExpr
    #result.push *val
   result
  end
.,.,

 # reduce 55 omitted

 # reduce 56 omitted

module_eval <<'.,.,', 'grammar.ra', 284
  def _reduce_57( val, _values, result )
    result = ast AST::ResourceInstance, :children => [val[0],val[2]]
   result
  end
.,.,

 # reduce 58 omitted

module_eval <<'.,.,', 'grammar.ra', 294
  def _reduce_59( val, _values, result )
    if val[0].instance_of?(AST::ResourceInstance)
        result = ast AST::ASTArray, :children => [val[0],val[2]]
    else
        val[0].push val[2]
        result = val[0]
    end
   result
  end
.,.,

 # reduce 60 omitted

 # reduce 61 omitted

module_eval <<'.,.,', 'grammar.ra', 301
  def _reduce_62( val, _values, result )
    result = ast AST::Undef, :value => :undef
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 305
  def _reduce_63( val, _values, result )
    result = ast AST::Name, :value => val[0]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 309
  def _reduce_64( val, _values, result )
    result = ast AST::Type, :value => val[0]
   result
  end
.,.,

 # reduce 65 omitted

 # reduce 66 omitted

 # reduce 67 omitted

 # reduce 68 omitted

 # reduce 69 omitted

 # reduce 70 omitted

module_eval <<'.,.,', 'grammar.ra', 325
  def _reduce_71( val, _values, result )
    if val[0] =~ /::/
        raise Puppet::ParseError, "Cannot assign to variables in other namespaces"
    end
    # this is distinct from referencing a variable
    variable = ast AST::Name, :value => val[0]
    result = ast AST::VarDef, :name => variable, :value => val[2]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 330
  def _reduce_72( val, _values, result )
    variable = ast AST::Name, :value => val[0]
    result = ast AST::VarDef, :name => variable, :value => val[2], :append => true
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 335
  def _reduce_73( val, _values, result )
    result = ast AST::ASTArray
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 335
  def _reduce_74( val, _values, result )
 result = val[0]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 344
  def _reduce_75( val, _values, result )
    if val[0].instance_of?(AST::ASTArray)
        val[0].push(val[2])
        result = val[0]
    else
        result = ast AST::ASTArray, :children => [val[0],val[2]]
    end
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 348
  def _reduce_76( val, _values, result )
    result = ast AST::ResourceParam, :param => val[0], :value => val[2]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 353
  def _reduce_77( val, _values, result )
    result = ast AST::ResourceParam, :param => val[0], :value => val[2],
                                     :add => true
   result
  end
.,.,

 # reduce 78 omitted

 # reduce 79 omitted

module_eval <<'.,.,', 'grammar.ra', 361
  def _reduce_80( val, _values, result )
    result = ast AST::ASTArray
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 361
  def _reduce_81( val, _values, result )
 result = val[0]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 370
  def _reduce_82( val, _values, result )
    if val[0].instance_of?(AST::ASTArray)
        val[0].push(val[2])
        result = val[0]
    else
        result = ast AST::ASTArray, :children => [val[0],val[2]]
    end
   result
  end
.,.,

 # reduce 83 omitted

module_eval <<'.,.,', 'grammar.ra', 379
  def _reduce_84( val, _values, result )
    if val[0].instance_of?(AST::ASTArray)
        result = val[0].push(val[2])
    else
        result = ast AST::ASTArray, :children => [val[0],val[2]]
    end
   result
  end
.,.,

 # reduce 85 omitted

 # reduce 86 omitted

 # reduce 87 omitted

 # reduce 88 omitted

 # reduce 89 omitted

 # reduce 90 omitted

 # reduce 91 omitted

 # reduce 92 omitted

 # reduce 93 omitted

 # reduce 94 omitted

 # reduce 95 omitted

 # reduce 96 omitted

 # reduce 97 omitted

 # reduce 98 omitted

 # reduce 99 omitted

 # reduce 100 omitted

module_eval <<'.,.,', 'grammar.ra', 406
  def _reduce_101( val, _values, result )
    args = aryfy(val[2])
    result = ast AST::Function,
        :name => val[0],
        :arguments => args,
        :ftype => :rvalue
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 411
  def _reduce_102( val, _values, result )
    result = ast AST::Function,
        :name => val[0],
        :arguments => AST::ASTArray.new({}),
        :ftype => :rvalue
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 415
  def _reduce_103( val, _values, result )
    result = ast AST::String, :value => val[0]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 417
  def _reduce_104( val, _values, result )
    result = ast AST::FlatString, :value => val[0]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 421
  def _reduce_105( val, _values, result )
    result = ast AST::Boolean, :value => val[0]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 426
  def _reduce_106( val, _values, result )
    Puppet.warning addcontext("Deprecation notice:  Resource references should now be capitalized")
    result = ast AST::ResourceReference, :type => val[0], :title => val[2]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 428
  def _reduce_107( val, _values, result )
    result = ast AST::ResourceReference, :type => val[0], :title => val[2]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 441
  def _reduce_108( val, _values, result )
    args = {
        :test => val[1],
        :statements => val[3]
    }

    if val[5]
        args[:else] = val[5]
    end

    result = ast AST::IfStatement, args
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 453
  def _reduce_109( val, _values, result )
    args = {
        :test => val[1],
        :statements => ast(AST::Nop)
    }

    if val[4]
        args[:else] = val[4]
    end

    result = ast AST::IfStatement, args
   result
  end
.,.,

 # reduce 110 omitted

module_eval <<'.,.,', 'grammar.ra', 458
  def _reduce_111( val, _values, result )
    result = ast AST::Else, :statements => val[2]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 461
  def _reduce_112( val, _values, result )
    result = ast AST::Else, :statements => ast(AST::Nop)
   result
  end
.,.,

 # reduce 113 omitted

module_eval <<'.,.,', 'grammar.ra', 478
  def _reduce_114( val, _values, result )
    result = ast AST::ArithmeticOperator, :operator => val[1], :lval => val[0], :rval => val[2]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 481
  def _reduce_115( val, _values, result )
    result = ast AST::ArithmeticOperator, :operator => val[1], :lval => val[0], :rval => val[2]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 484
  def _reduce_116( val, _values, result )
    result = ast AST::ArithmeticOperator, :operator => val[1], :lval => val[0], :rval => val[2]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 487
  def _reduce_117( val, _values, result )
    result = ast AST::ArithmeticOperator, :operator => val[1], :lval => val[0], :rval => val[2]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 490
  def _reduce_118( val, _values, result )
    result = ast AST::ArithmeticOperator, :operator => val[1], :lval => val[0], :rval => val[2]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 493
  def _reduce_119( val, _values, result )
    result = ast AST::ArithmeticOperator, :operator => val[1], :lval => val[0], :rval => val[2]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 496
  def _reduce_120( val, _values, result )
    result = ast AST::Minus, :value => val[1]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 499
  def _reduce_121( val, _values, result )
    result = ast AST::ComparisonOperator, :operator => val[1], :lval => val[0], :rval => val[2]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 502
  def _reduce_122( val, _values, result )
    result = ast AST::ComparisonOperator, :operator => val[1], :lval => val[0], :rval => val[2]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 505
  def _reduce_123( val, _values, result )
    result = ast AST::ComparisonOperator, :operator => val[1], :lval => val[0], :rval => val[2]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 508
  def _reduce_124( val, _values, result )
    result = ast AST::ComparisonOperator, :operator => val[1], :lval => val[0], :rval => val[2]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 511
  def _reduce_125( val, _values, result )
    result = ast AST::ComparisonOperator, :operator => val[1], :lval => val[0], :rval => val[2]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 514
  def _reduce_126( val, _values, result )
    result = ast AST::ComparisonOperator, :operator => val[1], :lval => val[0], :rval => val[2]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 517
  def _reduce_127( val, _values, result )
    result = ast AST::Not, :value => val[1]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 520
  def _reduce_128( val, _values, result )
    result = ast AST::BooleanOperator, :operator => val[1], :lval => val[0], :rval => val[2]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 523
  def _reduce_129( val, _values, result )
    result = ast AST::BooleanOperator, :operator => val[1], :lval => val[0], :rval => val[2]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 526
  def _reduce_130( val, _values, result )
    result = val[1]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 534
  def _reduce_131( val, _values, result )
    options = val[3]
    unless options.instance_of?(AST::ASTArray)
        options = ast AST::ASTArray, :children => [val[3]]
    end
    result = ast AST::CaseStatement, :test => val[1], :options => options
   result
  end
.,.,

 # reduce 132 omitted

module_eval <<'.,.,', 'grammar.ra', 544
  def _reduce_133( val, _values, result )
    if val[0].instance_of?(AST::ASTArray)
        val[0].push val[1]
        result = val[0]
    else
        result = ast AST::ASTArray, :children => [val[0], val[1]]
    end
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 548
  def _reduce_134( val, _values, result )
    result = ast AST::CaseOpt, :value => val[0], :statements => val[3]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 553
  def _reduce_135( val, _values, result )
    result = ast(AST::CaseOpt,
        :value => val[0],
        :statements => ast(AST::ASTArray)
    )
   result
  end
.,.,

 # reduce 136 omitted

module_eval <<'.,.,', 'grammar.ra', 563
  def _reduce_137( val, _values, result )
    if val[0].instance_of?(AST::ASTArray)
        val[0].push(val[2])
        result = val[0]
    else
        result = ast AST::ASTArray, :children => [val[0],val[2]]
    end
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 567
  def _reduce_138( val, _values, result )
    result = ast AST::Selector, :param => val[0], :values => val[2]
   result
  end
.,.,

 # reduce 139 omitted

module_eval <<'.,.,', 'grammar.ra', 569
  def _reduce_140( val, _values, result )
 result = val[1]
   result
  end
.,.,

 # reduce 141 omitted

module_eval <<'.,.,', 'grammar.ra', 580
  def _reduce_142( val, _values, result )
    if val[0].instance_of?(AST::ASTArray)
        val[0].push(val[2])
        result = val[0]
    else
        result = ast AST::ASTArray, :children => [val[0],val[2]]
    end
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 584
  def _reduce_143( val, _values, result )
    result = ast AST::ResourceParam, :param => val[0], :value => val[2]
   result
  end
.,.,

 # reduce 144 omitted

 # reduce 145 omitted

 # reduce 146 omitted

 # reduce 147 omitted

 # reduce 148 omitted

 # reduce 149 omitted

 # reduce 150 omitted

module_eval <<'.,.,', 'grammar.ra', 595
  def _reduce_151( val, _values, result )
    result = ast AST::Default, :value => val[0]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 597
  def _reduce_152( val, _values, result )
 result = [val[0].value]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 601
  def _reduce_153( val, _values, result )
    results = val[0] << val[2].value
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 609
  def _reduce_154( val, _values, result )
    val[1].each do |file|
        import(file)
    end

    result = AST::ASTArray.new(:children => [])
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 619
  def _reduce_155( val, _values, result )
    newdefine classname(val[1]), :arguments => val[2], :code => val[4]
    @lexer.indefine = false
    result = nil

#}           | DEFINE NAME argumentlist parent LBRACE RBRACE {
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 623
  def _reduce_156( val, _values, result )
    newdefine classname(val[1]), :arguments => val[2]
    @lexer.indefine = false
    result = nil
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 631
  def _reduce_157( val, _values, result )
    # Our class gets defined in the parent namespace, not our own.
    @lexer.namepop
    newclass classname(val[1]), :code => val[4], :parent => val[2]
    result = nil
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 636
  def _reduce_158( val, _values, result )
    # Our class gets defined in the parent namespace, not our own.
    @lexer.namepop
    newclass classname(val[1]), :parent => val[2]
    result = nil
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 641
  def _reduce_159( val, _values, result )
    newnode val[1], :parent => val[2], :code => val[4]
    result = nil
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 644
  def _reduce_160( val, _values, result )
    newnode val[1], :parent => val[2]
    result = nil
   result
  end
.,.,

 # reduce 161 omitted

 # reduce 162 omitted

 # reduce 163 omitted

 # reduce 164 omitted

module_eval <<'.,.,', 'grammar.ra', 658
  def _reduce_165( val, _values, result )
    result = val[0]
    result = [result] unless result.is_a?(Array)
    result << val[2]
   result
  end
.,.,

 # reduce 166 omitted

 # reduce 167 omitted

 # reduce 168 omitted

 # reduce 169 omitted

module_eval <<'.,.,', 'grammar.ra', 667
  def _reduce_170( val, _values, result )
    result = nil
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 671
  def _reduce_171( val, _values, result )
    result = ast AST::ASTArray, :children => []
   result
  end
.,.,

 # reduce 172 omitted

module_eval <<'.,.,', 'grammar.ra', 676
  def _reduce_173( val, _values, result )
    result = nil
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 680
  def _reduce_174( val, _values, result )
    result = val[1]
    result = [result] unless result[0].is_a?(Array)
   result
  end
.,.,

 # reduce 175 omitted

module_eval <<'.,.,', 'grammar.ra', 687
  def _reduce_176( val, _values, result )
    result = val[0]
    result = [result] unless result[0].is_a?(Array)
    result << val[2]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 692
  def _reduce_177( val, _values, result )
    Puppet.warning addcontext("Deprecation notice: must now include '$' in prototype")
    result = [val[0], val[2]]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 696
  def _reduce_178( val, _values, result )
    Puppet.warning addcontext("Deprecation notice: must now include '$' in prototype")
    result = [val[0]]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 698
  def _reduce_179( val, _values, result )
    result = [val[0], val[2]]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 700
  def _reduce_180( val, _values, result )
    result = [val[0]]
   result
  end
.,.,

 # reduce 181 omitted

module_eval <<'.,.,', 'grammar.ra', 705
  def _reduce_182( val, _values, result )
    result = val[1]
   result
  end
.,.,

 # reduce 183 omitted

module_eval <<'.,.,', 'grammar.ra', 710
  def _reduce_184( val, _values, result )
    result = val[1]
   result
  end
.,.,

 # reduce 185 omitted

 # reduce 186 omitted

module_eval <<'.,.,', 'grammar.ra', 716
  def _reduce_187( val, _values, result )
    result = ast AST::Variable, :value => val[0]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 724
  def _reduce_188( val, _values, result )
    if val[1].instance_of?(AST::ASTArray)
        result = val[1]
    else
        result = ast AST::ASTArray, :children => [val[1]]
    end
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 726
  def _reduce_189( val, _values, result )
    result = ast AST::ASTArray
   result
  end
.,.,

 # reduce 190 omitted

 # reduce 191 omitted

 # reduce 192 omitted

module_eval <<'.,.,', 'grammar.ra', 731
  def _reduce_193( val, _values, result )
 result = nil
   result
  end
.,.,

 def _reduce_none( val, _values, result )
  result
 end

    end   # class Parser

  end   # module Parser

end   # module Puppet
