#
# DO NOT MODIFY!!!!
# This file is automatically generated by racc 1.4.5
# from racc grammer file "grammar.ra".
#

require 'racc/parser'


require 'puppet'
require 'puppet/util/loadedfile'
require 'puppet/parser/lexer'
require 'puppet/parser/ast'
#require 'puppet/parser/interpreter'

module Puppet
    class ParseError < Puppet::Error; end
    class ImportError < Racc::ParseError; end
    class AlreadyImportedError < ImportError; end
end

Puppet[:typecheck] = true
Puppet[:paramcheck] = true


module Puppet

  module Parser

    class Parser < Racc::Parser

module_eval <<'..end grammar.ra modeval..id272fb19b12', 'grammar.ra', 717

# It got too annoying having code in a file that needs to be compiled.
require 'puppet/parser/parser_support'

# Make emacs happy
# Local Variables:
# mode: ruby
# End:

# $Id$

..end grammar.ra modeval..id272fb19b12

##### racc 1.4.5 generates ###

racc_reduce_table = [
 0, 0, :racc_error,
 1, 60, :_reduce_1,
 1, 60, :_reduce_none,
 1, 61, :_reduce_none,
 2, 61, :_reduce_4,
 1, 63, :_reduce_none,
 1, 63, :_reduce_none,
 1, 63, :_reduce_none,
 1, 63, :_reduce_none,
 1, 63, :_reduce_none,
 1, 63, :_reduce_none,
 1, 63, :_reduce_none,
 1, 63, :_reduce_none,
 1, 63, :_reduce_none,
 1, 63, :_reduce_none,
 1, 63, :_reduce_none,
 1, 63, :_reduce_none,
 1, 63, :_reduce_none,
 4, 71, :_reduce_18,
 3, 71, :_reduce_19,
 2, 71, :_reduce_20,
 1, 77, :_reduce_none,
 1, 77, :_reduce_none,
 1, 78, :_reduce_none,
 3, 78, :_reduce_24,
 1, 80, :_reduce_none,
 1, 80, :_reduce_none,
 1, 80, :_reduce_none,
 1, 80, :_reduce_none,
 1, 80, :_reduce_none,
 1, 80, :_reduce_none,
 1, 80, :_reduce_none,
 1, 80, :_reduce_32,
 1, 79, :_reduce_none,
 3, 79, :_reduce_34,
 5, 64, :_reduce_35,
 5, 64, :_reduce_36,
 5, 64, :_reduce_37,
 5, 75, :_reduce_38,
 2, 65, :_reduce_39,
 1, 96, :_reduce_40,
 2, 96, :_reduce_41,
 2, 66, :_reduce_42,
 3, 97, :_reduce_43,
 3, 97, :_reduce_44,
 1, 98, :_reduce_none,
 1, 98, :_reduce_none,
 3, 98, :_reduce_47,
 1, 99, :_reduce_none,
 3, 99, :_reduce_49,
 1, 100, :_reduce_none,
 1, 100, :_reduce_none,
 3, 101, :_reduce_52,
 3, 101, :_reduce_53,
 1, 102, :_reduce_none,
 1, 102, :_reduce_none,
 4, 104, :_reduce_56,
 1, 90, :_reduce_none,
 3, 90, :_reduce_58,
 0, 91, :_reduce_none,
 1, 91, :_reduce_none,
 1, 106, :_reduce_61,
 1, 81, :_reduce_62,
 1, 83, :_reduce_63,
 1, 105, :_reduce_none,
 1, 105, :_reduce_none,
 1, 105, :_reduce_none,
 1, 105, :_reduce_none,
 1, 105, :_reduce_none,
 1, 105, :_reduce_none,
 3, 67, :_reduce_70,
 3, 76, :_reduce_71,
 0, 92, :_reduce_72,
 1, 92, :_reduce_73,
 3, 92, :_reduce_74,
 3, 109, :_reduce_75,
 3, 111, :_reduce_76,
 1, 112, :_reduce_none,
 1, 112, :_reduce_none,
 0, 95, :_reduce_79,
 1, 95, :_reduce_80,
 3, 95, :_reduce_81,
 1, 113, :_reduce_none,
 3, 113, :_reduce_83,
 1, 103, :_reduce_none,
 1, 103, :_reduce_none,
 1, 103, :_reduce_none,
 1, 103, :_reduce_none,
 1, 103, :_reduce_none,
 1, 103, :_reduce_none,
 1, 110, :_reduce_none,
 1, 110, :_reduce_none,
 1, 110, :_reduce_none,
 1, 110, :_reduce_none,
 1, 110, :_reduce_none,
 1, 110, :_reduce_none,
 1, 110, :_reduce_none,
 1, 110, :_reduce_none,
 1, 110, :_reduce_none,
 1, 110, :_reduce_none,
 4, 85, :_reduce_100,
 3, 85, :_reduce_101,
 1, 87, :_reduce_102,
 1, 87, :_reduce_103,
 1, 84, :_reduce_104,
 4, 88, :_reduce_105,
 4, 88, :_reduce_106,
 6, 69, :_reduce_107,
 0, 115, :_reduce_none,
 4, 115, :_reduce_109,
 1, 108, :_reduce_none,
 3, 108, :_reduce_111,
 3, 108, :_reduce_112,
 3, 108, :_reduce_113,
 3, 108, :_reduce_114,
 3, 108, :_reduce_115,
 3, 108, :_reduce_116,
 2, 108, :_reduce_117,
 3, 108, :_reduce_118,
 3, 108, :_reduce_119,
 3, 108, :_reduce_120,
 3, 108, :_reduce_121,
 3, 108, :_reduce_122,
 3, 108, :_reduce_123,
 2, 108, :_reduce_124,
 3, 108, :_reduce_125,
 3, 108, :_reduce_126,
 3, 108, :_reduce_127,
 5, 68, :_reduce_128,
 1, 116, :_reduce_none,
 2, 116, :_reduce_130,
 5, 117, :_reduce_131,
 4, 117, :_reduce_132,
 1, 118, :_reduce_none,
 3, 118, :_reduce_134,
 3, 86, :_reduce_135,
 1, 120, :_reduce_none,
 4, 120, :_reduce_137,
 1, 122, :_reduce_none,
 3, 122, :_reduce_139,
 3, 121, :_reduce_140,
 1, 119, :_reduce_none,
 1, 119, :_reduce_none,
 1, 119, :_reduce_none,
 1, 119, :_reduce_none,
 1, 119, :_reduce_none,
 1, 119, :_reduce_none,
 1, 119, :_reduce_none,
 1, 119, :_reduce_148,
 1, 123, :_reduce_149,
 3, 123, :_reduce_150,
 2, 70, :_reduce_151,
 6, 72, :_reduce_152,
 5, 72, :_reduce_153,
 6, 73, :_reduce_154,
 5, 73, :_reduce_155,
 6, 74, :_reduce_156,
 5, 74, :_reduce_157,
 1, 94, :_reduce_none,
 1, 89, :_reduce_none,
 1, 89, :_reduce_none,
 1, 126, :_reduce_none,
 3, 126, :_reduce_162,
 1, 128, :_reduce_none,
 1, 128, :_reduce_none,
 1, 128, :_reduce_none,
 1, 128, :_reduce_none,
 0, 62, :_reduce_167,
 0, 129, :_reduce_168,
 1, 124, :_reduce_none,
 3, 124, :_reduce_170,
 3, 124, :_reduce_171,
 1, 130, :_reduce_none,
 3, 130, :_reduce_173,
 3, 131, :_reduce_174,
 1, 131, :_reduce_175,
 3, 131, :_reduce_176,
 1, 131, :_reduce_177,
 1, 127, :_reduce_none,
 2, 127, :_reduce_179,
 1, 125, :_reduce_none,
 2, 125, :_reduce_181,
 1, 132, :_reduce_none,
 1, 132, :_reduce_none,
 1, 82, :_reduce_184,
 3, 107, :_reduce_185,
 2, 107, :_reduce_186,
 1, 114, :_reduce_none,
 1, 114, :_reduce_none,
 0, 93, :_reduce_none,
 1, 93, :_reduce_190 ]

racc_reduce_n = 191

racc_shift_n = 314

racc_action_table = [
    75,    54,    57,   270,   178,    39,    40,   283,    88,   237,
    51,   178,    89,   238,   244,   282,   286,   235,   236,   245,
    72,    75,    54,    57,   135,    90,    39,    40,   235,   236,
   135,    45,    39,    40,   129,    56,    59,   235,   236,    66,
    41,    72,   154,    44,    52,    76,   177,   162,    62,    92,
   146,    84,    45,    75,    54,    57,    56,    59,    45,   126,
    66,    41,   178,   167,    44,    52,    76,    41,   188,    62,
    44,   249,    84,    72,    75,    54,    57,   288,   156,   157,
   158,   144,   145,   147,    45,   198,    54,    57,    56,    59,
   287,   233,    66,     8,    72,   154,  -141,    52,    76,   232,
   162,    62,   137,   146,    84,    45,    75,    54,    57,    56,
    59,    45,   252,    66,    37,   105,   167,    37,    52,    76,
   183,     4,    62,    37,     4,    84,    72,    75,    54,    57,
     4,   156,   157,   158,   144,   145,   147,    45,  -143,   211,
   256,    56,    59,   212,   213,    66,   136,    72,   154,   258,
    52,    76,   161,   162,    62,   161,   146,    84,    45,    75,
    54,    57,    56,    59,    45,   244,    66,    54,    57,   167,
   245,    52,    76,    33,    34,    62,   212,   296,    84,    72,
    75,    54,    57,  -145,   156,   157,   158,   144,   145,   147,
    45,   158,   144,   135,    56,    59,   158,   144,    66,    51,
    72,   154,   263,    52,    76,  -146,   162,    62,   266,   146,
    84,    45,    75,    54,    57,    56,    59,    45,  -142,    66,
   229,  -142,   167,  -147,    52,    76,    88,  -144,    62,  -146,
  -141,    84,    72,    75,    54,    57,   134,   156,   157,   158,
   144,   145,   147,    45,  -158,  -145,   132,    56,    59,  -143,
   161,    66,   269,    72,    37,   172,    52,    76,   173,   108,
    62,     4,     8,    84,    45,    89,   105,   174,    56,    59,
   155,   284,    66,   156,   157,   158,   144,    52,    76,   150,
   154,    62,   285,  -144,    84,   180,   100,   184,   146,   148,
   151,   153,   188,   186,    75,    54,    57,   156,   157,   158,
   144,   145,   147,   156,   157,   158,   144,   145,   147,  -141,
   196,   299,   149,   152,    72,  -141,   156,   157,   158,   144,
   145,   147,  -144,  -142,  -146,    45,    75,    54,    57,    56,
    59,  -143,   300,    66,   156,   157,   158,   144,    52,    76,
   188,    71,    62,   193,   191,    84,    72,    75,    54,    57,
    38,  -143,   307,  -190,   308,    35,   189,    45,  -142,  -144,
   nil,    56,    59,   nil,   nil,    66,   nil,    72,   nil,   nil,
    52,    76,   nil,   nil,    62,   nil,   nil,    84,    45,    75,
    54,    57,    56,    59,   nil,   nil,    66,   nil,   nil,   nil,
   nil,    52,    76,   nil,   nil,    62,   nil,   nil,    84,    72,
    75,    54,    57,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
    45,   nil,   nil,   nil,    56,    59,   nil,   nil,    66,   nil,
    72,   nil,   nil,    52,    76,   nil,   nil,    62,   nil,   nil,
    84,    45,    75,    54,    57,    56,    59,   nil,   nil,    66,
   nil,   nil,   nil,   nil,    52,    76,   nil,   nil,    62,   nil,
   nil,    84,    72,    75,    54,    57,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,    45,   nil,   nil,   nil,    56,    59,   nil,
   nil,    66,   nil,    72,   nil,   nil,    52,    76,   nil,   nil,
    62,   nil,   nil,    84,    45,    75,    54,    57,    56,    59,
   nil,   nil,    66,   nil,   nil,   nil,   nil,    52,    76,   nil,
   nil,    62,   nil,   nil,    84,    72,    75,    54,    57,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,    45,    75,    54,    57,
    56,    59,   nil,   nil,    66,   nil,    72,   nil,   nil,    52,
    76,   nil,   nil,    62,   nil,   nil,    84,    45,    75,    54,
    57,    56,    59,   nil,   nil,    66,   nil,   nil,    45,   nil,
    52,    76,    56,   116,    62,   nil,    66,    84,    72,   nil,
   nil,   111,    75,    54,    57,    62,   nil,   nil,   nil,    45,
   nil,   nil,   nil,    56,    59,   nil,   nil,    66,    75,    54,
    57,   141,    52,    76,   nil,   nil,    62,   nil,   nil,    84,
   nil,   nil,   nil,    45,    75,    54,    57,    56,    59,   nil,
   nil,    66,   nil,   nil,   nil,   nil,    52,   nil,   nil,    45,
    62,   nil,   nil,    56,    59,   nil,   nil,    66,    75,    54,
    57,   nil,    52,   nil,   nil,    45,    62,   nil,   nil,    56,
    59,   nil,   nil,    66,    75,    54,    57,   nil,    52,   nil,
   nil,   nil,    62,   nil,    75,    54,    57,   nil,   nil,    45,
    75,    54,    57,    56,    59,   nil,   nil,    66,   nil,   nil,
   nil,   nil,    52,   nil,   nil,    45,    62,   nil,   nil,    56,
    59,   nil,   nil,    66,   nil,    45,   nil,   nil,    52,    56,
    59,    45,    62,    66,   nil,    56,    59,   nil,    52,    66,
   nil,   nil,    62,   nil,    52,    75,    54,    57,    62,   nil,
   nil,    51,    54,    57,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,    75,    54,    57,   nil,   nil,   nil,    75,    54,    57,
   nil,    48,   nil,   nil,   nil,   nil,    45,    75,    54,    57,
    56,    59,    45,   nil,    66,   nil,    56,    59,   nil,    52,
    66,   nil,    45,    62,    49,    52,    56,    59,    45,    62,
    66,   nil,    56,   195,   nil,    52,    66,   nil,    45,    62,
   nil,   111,    56,    59,   nil,    62,    66,    54,    57,    54,
    57,    52,   nil,   nil,   nil,    62,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,    54,    57,    54,    57,   nil,   nil,   281,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,    45,   nil,    45,
   nil,    56,   195,    56,   195,    66,   nil,    66,    54,    57,
   111,   nil,   111,    45,    62,    45,    62,    56,   195,    56,
   195,    66,   nil,    66,   nil,    49,   111,   nil,   111,   nil,
    62,   nil,    62,    54,    57,    54,    57,   nil,    45,   nil,
   nil,   nil,    56,   195,   nil,   nil,    66,   nil,   nil,    54,
    57,   111,   nil,   nil,   nil,    62,    54,    57,   nil,   205,
   nil,   nil,   nil,    45,   nil,    45,   nil,    56,   195,    56,
   195,    66,   nil,    66,   nil,   nil,   111,   nil,   111,    45,
    62,   nil,    62,    56,   195,   nil,    45,    66,    54,    57,
    56,   195,   111,   nil,    66,   nil,    62,   nil,   nil,   111,
   nil,   nil,   nil,    62,    54,    57,   nil,   nil,   131,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    45,   nil,
   nil,   nil,    56,    59,   200,   nil,    66,   nil,   nil,   nil,
    49,    52,   nil,   nil,    45,    62,   nil,   nil,    56,    59,
   nil,   nil,    66,   150,   154,   nil,    49,    52,   nil,   nil,
   nil,    62,   146,   148,   151,   153,   150,   154,   nil,   nil,
   nil,   nil,   nil,   nil,   209,   146,   148,   151,   153,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   156,   157,   158,   144,   145,   147,   nil,   nil,   nil,   149,
   152,   150,   154,   156,   157,   158,   144,   145,   147,   nil,
   146,   148,   151,   153,   150,   154,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   146,   148,   151,   153,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   149,   152,   nil,   nil,   156,   157,
   158,   144,   145,   147,   nil,   nil,   293,   nil,   152,   150,
   154,   156,   157,   158,   144,   145,   147,   nil,   146,   148,
   151,   153,   nil,   nil,   nil,   nil,   nil,    16,   nil,    23,
    27,   291,     1,     5,   nil,    10,   nil,    13,   nil,    20,
   nil,    28,   149,   152,     4,     8,   156,   157,   158,   144,
   145,   147,    16,   290,    23,    27,   nil,     1,     5,   nil,
    10,   nil,    13,   nil,    20,   nil,    28,   nil,   nil,     4,
     8,   nil,   268,   nil,    16,   nil,    23,    27,   nil,     1,
     5,   nil,    10,   nil,    13,   nil,    20,   nil,    28,   nil,
   nil,     4,     8,    16,   305,    23,    27,   nil,     1,     5,
   nil,    10,   nil,    13,   nil,    20,   nil,    28,   nil,   nil,
     4,     8,   nil,   310,   nil,    16,   nil,    23,    27,   nil,
     1,     5,   nil,    10,   nil,    13,   nil,    20,   nil,    28,
   nil,   nil,     4,     8,    16,   262,    23,    27,   nil,     1,
     5,   nil,    10,   nil,    13,   nil,    20,   nil,    28,   nil,
   nil,     4,     8,   nil,   312,   nil,    16,   nil,    23,    27,
   nil,     1,     5,   nil,    10,   nil,    13,   nil,    20,   nil,
    28,   nil,   nil,     4,     8,    16,   255,    23,    27,   nil,
     1,     5,   nil,    10,   nil,    13,   nil,    20,   nil,    28,
   nil,   nil,     4,     8,   nil,   313,   nil,    16,   nil,    23,
    27,   nil,     1,     5,   nil,    10,   nil,    13,   nil,    20,
   nil,    28,   nil,   nil,     4,     8,    16,   nil,    23,    27,
   nil,     1,     5,   nil,    10,   nil,    13,   nil,    20,   nil,
    28,   nil,   nil,     4,     8,    16,   nil,    23,    27,   nil,
     1,     5,   nil,    10,   nil,    13,   nil,    20,   nil,    28,
   nil,   nil,     4,     8,    16,   nil,    23,    27,   nil,     1,
     5,   nil,    10,   nil,    13,   nil,    20,   nil,    28,   nil,
   nil,     4,     8,    16,   nil,    23,    27,   nil,     1,     5,
   nil,    10,   nil,    13,   nil,    20,   nil,    28,   nil,   nil,
     4,     8,    16,   nil,    23,    27,   nil,     1,     5,   nil,
    10,   nil,    13,   nil,    20,   nil,    28,   nil,   nil,     4,
     8 ]

racc_action_check = [
    33,    33,    33,   231,   105,   129,   129,   241,    17,   170,
    59,   116,    17,   171,   288,   241,   246,   171,   171,   288,
    33,   158,   158,   158,   116,    17,    10,    10,   231,   231,
    59,    33,   126,   126,    42,    33,    33,   170,   170,    33,
   129,   158,   220,   129,    33,    33,   105,    92,    33,    17,
   220,    33,   158,   144,   144,   144,   158,   158,    92,    42,
   158,    10,   161,    92,    10,   158,   158,   126,   160,   158,
   126,   175,   158,   144,    76,    76,    76,   247,   220,   220,
   220,   220,   220,   220,   144,   134,    23,    23,   144,   144,
   247,   165,   144,   134,    76,   223,    77,   144,   144,   165,
   162,   144,    71,   223,   144,    76,   145,   145,   145,    76,
    76,   162,   179,    76,    27,   180,   162,   108,    76,    76,
   108,    27,    76,     5,   108,    76,   145,    72,    72,    72,
     5,   223,   223,   223,   223,   223,   223,   145,    70,   140,
   185,   145,   145,   140,   140,   145,    68,    72,   221,   187,
   145,   145,   188,    90,   145,   189,   221,   145,    72,   154,
   154,   154,    72,    72,    90,   174,    72,   173,   173,    90,
   174,    72,    72,     1,     1,    72,   265,   265,    72,   154,
    84,    84,    84,    67,   221,   221,   221,   221,   221,   221,
   154,   227,   227,   195,   154,   154,   226,   226,   154,   198,
    84,   218,   199,   154,   154,    65,   234,   154,   206,   218,
   154,    84,    16,    16,    16,    84,    84,   234,    63,    84,
   159,    79,   234,    80,    84,    84,    61,    60,    84,    81,
    58,    84,    16,   146,   146,   146,    53,   218,   218,   218,
   218,   218,   218,    16,    52,    82,    50,    16,    16,    87,
    89,    16,   230,   146,    24,    94,    16,    16,    95,    36,
    16,    24,    24,    16,   146,    97,    35,    99,   146,   146,
    85,   244,   146,   217,   217,   217,   217,   146,   146,    85,
    85,   146,   245,    78,   146,   106,    28,   109,    85,    85,
    85,    85,   260,   112,   153,   153,   153,   224,   224,   224,
   224,   224,   224,   216,   216,   216,   216,   216,   216,   113,
   133,   268,    85,    85,   153,   271,    85,    85,    85,    85,
    85,    85,   273,   274,   275,   153,   152,   152,   152,   153,
   153,   277,   282,   153,   215,   215,   215,   215,   153,   153,
   114,    15,   153,   130,   127,   153,   152,   147,   147,   147,
     6,   125,   295,   296,   299,     2,   119,   152,   118,   115,
   nil,   152,   152,   nil,   nil,   152,   nil,   147,   nil,   nil,
   152,   152,   nil,   nil,   152,   nil,   nil,   152,   147,   148,
   148,   148,   147,   147,   nil,   nil,   147,   nil,   nil,   nil,
   nil,   147,   147,   nil,   nil,   147,   nil,   nil,   147,   148,
   149,   149,   149,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   148,   nil,   nil,   nil,   148,   148,   nil,   nil,   148,   nil,
   149,   nil,   nil,   148,   148,   nil,   nil,   148,   nil,   nil,
   148,   149,   156,   156,   156,   149,   149,   nil,   nil,   149,
   nil,   nil,   nil,   nil,   149,   149,   nil,   nil,   149,   nil,
   nil,   149,   156,    34,    34,    34,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   156,   nil,   nil,   nil,   156,   156,   nil,
   nil,   156,   nil,    34,   nil,   nil,   156,   156,   nil,   nil,
   156,   nil,   nil,   156,    34,   151,   151,   151,    34,    34,
   nil,   nil,    34,   nil,   nil,   nil,   nil,    34,    34,   nil,
   nil,    34,   nil,   nil,    34,   151,   150,   150,   150,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   151,    38,    38,    38,
   151,   151,   nil,   nil,   151,   nil,   150,   nil,   nil,   151,
   151,   nil,   nil,   151,   nil,   nil,   151,   150,   157,   157,
   157,   150,   150,   nil,   nil,   150,   nil,   nil,    38,   nil,
   150,   150,    38,    38,   150,   nil,    38,   150,   157,   nil,
   nil,    38,   177,   177,   177,    38,   nil,   nil,   nil,   157,
   nil,   nil,   nil,   157,   157,   nil,   nil,   157,    75,    75,
    75,    75,   157,   157,   nil,   nil,   157,   nil,   nil,   157,
   nil,   nil,   nil,   177,    51,    51,    51,   177,   177,   nil,
   nil,   177,   nil,   nil,   nil,   nil,   177,   nil,   nil,    75,
   177,   nil,   nil,    75,    75,   nil,   nil,    75,   285,   285,
   285,   nil,    75,   nil,   nil,    51,    75,   nil,   nil,    51,
    51,   nil,   nil,    51,   266,   266,   266,   nil,    51,   nil,
   nil,   nil,    51,   nil,    88,    88,    88,   nil,   nil,   285,
   178,   178,   178,   285,   285,   nil,   nil,   285,   nil,   nil,
   nil,   nil,   285,   nil,   nil,   266,   285,   nil,   nil,   266,
   266,   nil,   nil,   266,   nil,    88,   nil,   nil,   266,    88,
    88,   178,   266,    88,   nil,   178,   178,   nil,    88,   178,
   nil,   nil,    88,   nil,   178,    20,    20,    20,   178,   nil,
   nil,    13,    13,    13,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   210,   210,   210,   nil,   nil,   nil,   186,   186,   186,
   nil,    13,   nil,   nil,   nil,   nil,    20,   284,   284,   284,
    20,    20,    13,   nil,    20,   nil,    13,    13,   nil,    20,
    13,   nil,   210,    20,    13,    13,   210,   210,   186,    13,
   210,   nil,   186,   186,   nil,   210,   186,   nil,   284,   210,
   nil,   186,   284,   284,   nil,   186,   284,   205,   205,   283,
   283,   284,   nil,   nil,   nil,   284,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   132,   132,   239,   239,   nil,   nil,   239,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   205,   nil,   283,
   nil,   205,   205,   283,   283,   205,   nil,   283,   233,   233,
   205,   nil,   283,   132,   205,   239,   283,   132,   132,   239,
   239,   132,   nil,   239,   nil,   132,   132,   nil,   239,   nil,
   132,   nil,   239,   294,   294,   232,   232,   nil,   233,   nil,
   nil,   nil,   233,   233,   nil,   nil,   233,   nil,   nil,   172,
   172,   233,   nil,   nil,   nil,   233,   136,   136,   nil,   136,
   nil,   nil,   nil,   294,   nil,   232,   nil,   294,   294,   232,
   232,   294,   nil,   232,   nil,   nil,   294,   nil,   232,   172,
   294,   nil,   232,   172,   172,   nil,   136,   172,    48,    48,
   136,   136,   172,   nil,   136,   nil,   172,   nil,   nil,   136,
   nil,   nil,   nil,   136,   135,   135,   nil,   nil,    48,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    48,   nil,
   nil,   nil,    48,    48,   135,   nil,    48,   nil,   nil,   nil,
    48,    48,   nil,   nil,   135,    48,   nil,   nil,   135,   135,
   nil,   nil,   135,   222,   222,   nil,   135,   135,   nil,   nil,
   nil,   135,   222,   222,   222,   222,   138,   138,   nil,   nil,
   nil,   nil,   nil,   nil,   138,   138,   138,   138,   138,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   222,   222,   222,   222,   222,   222,   nil,   nil,   nil,   138,
   138,   101,   101,   138,   138,   138,   138,   138,   138,   nil,
   101,   101,   101,   101,   219,   219,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   219,   219,   219,   219,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   101,   101,   nil,   nil,   101,   101,
   101,   101,   101,   101,   nil,   nil,   261,   nil,   219,   102,
   102,   219,   219,   219,   219,   219,   219,   nil,   102,   102,
   102,   102,   nil,   nil,   nil,   nil,   nil,   261,   nil,   261,
   261,   254,   261,   261,   nil,   261,   nil,   261,   nil,   261,
   nil,   261,   102,   102,   261,   261,   102,   102,   102,   102,
   102,   102,   254,   249,   254,   254,   nil,   254,   254,   nil,
   254,   nil,   254,   nil,   254,   nil,   254,   nil,   nil,   254,
   254,   nil,   225,   nil,   249,   nil,   249,   249,   nil,   249,
   249,   nil,   249,   nil,   249,   nil,   249,   nil,   249,   nil,
   nil,   249,   249,   225,   289,   225,   225,   nil,   225,   225,
   nil,   225,   nil,   225,   nil,   225,   nil,   225,   nil,   nil,
   225,   225,   nil,   300,   nil,   289,   nil,   289,   289,   nil,
   289,   289,   nil,   289,   nil,   289,   nil,   289,   nil,   289,
   nil,   nil,   289,   289,   300,   191,   300,   300,   nil,   300,
   300,   nil,   300,   nil,   300,   nil,   300,   nil,   300,   nil,
   nil,   300,   300,   nil,   309,   nil,   191,   nil,   191,   191,
   nil,   191,   191,   nil,   191,   nil,   191,   nil,   191,   nil,
   191,   nil,   nil,   191,   191,   309,   184,   309,   309,   nil,
   309,   309,   nil,   309,   nil,   309,   nil,   309,   nil,   309,
   nil,   nil,   309,   309,   nil,   311,   nil,   184,   nil,   184,
   184,   nil,   184,   184,   nil,   184,   nil,   184,   nil,   184,
   nil,   184,   nil,   nil,   184,   184,   311,   nil,   311,   311,
   nil,   311,   311,   nil,   311,   nil,   311,   nil,   311,   nil,
   311,   nil,   nil,   311,   311,   308,   nil,   308,   308,   nil,
   308,   308,   nil,   308,   nil,   308,   nil,   308,   nil,   308,
   nil,   nil,   308,   308,   155,   nil,   155,   155,   nil,   155,
   155,   nil,   155,   nil,   155,   nil,   155,   nil,   155,   nil,
   nil,   155,   155,    19,   nil,    19,    19,   nil,    19,    19,
   nil,    19,   nil,    19,   nil,    19,   nil,    19,   nil,   nil,
    19,    19,     0,   nil,     0,     0,   nil,     0,     0,   nil,
     0,   nil,     0,   nil,     0,   nil,     0,   nil,   nil,     0,
     0 ]

racc_action_pointer = [
  1294,   160,   349,   nil,   nil,    85,   344,   nil,   nil,   nil,
    23,   nil,   nil,   699,   nil,   341,   210,     6,   nil,  1275,
   693,   nil,   nil,    83,   216,   nil,   nil,    76,   244,   nil,
   nil,   nil,   nil,    -2,   451,   228,   224,   nil,   515,   nil,
   nil,   nil,    24,   nil,   nil,   nil,   nil,   nil,   885,   nil,
   236,   592,   242,   226,   nil,   nil,   nil,   nil,   209,     8,
   206,   224,   nil,   197,   nil,   184,   nil,   162,   125,   nil,
   117,   102,   125,   nil,   nil,   576,    72,    75,   262,   200,
   202,   208,   224,   nil,   178,   264,   nil,   228,   642,   212,
   131,   nil,    25,   nil,   249,   248,   nil,   259,   nil,   245,
   nil,   976,  1024,   nil,   nil,    -5,   275,   nil,    79,   281,
   nil,   nil,   254,   288,   330,   338,     2,   nil,   337,   338,
   nil,   nil,   nil,   nil,   nil,   330,    29,   338,   nil,     2,
   320,   nil,   780,   305,    47,   901,   853,   nil,   941,   nil,
   134,   nil,   nil,   nil,    51,   104,   231,   345,   377,   398,
   504,   483,   324,   292,   157,  1256,   430,   536,    19,   215,
    58,    53,    78,   nil,   nil,    75,   nil,   nil,   nil,   nil,
   -11,   -31,   846,   164,   132,    65,   nil,   560,   648,   105,
    77,   nil,   nil,   nil,  1199,   133,   715,   142,   114,   117,
   nil,  1158,   nil,   nil,   nil,   171,   nil,   nil,   197,   179,
   nil,   nil,   nil,   nil,   nil,   764,   199,   nil,   nil,   nil,
   709,   nil,   nil,   nil,   nil,   282,   251,   221,   185,   989,
    26,   132,   928,    79,   245,  1095,   142,   137,   nil,   nil,
   245,   -20,   832,   805,   184,   nil,   nil,   nil,   nil,   782,
   nil,    -3,   nil,   nil,   258,   269,    -7,    67,   nil,  1076,
   nil,   nil,   nil,   nil,  1054,   nil,   nil,   nil,   nil,   nil,
   282,  1029,   nil,   nil,   nil,   167,   632,   nil,   282,   nil,
   nil,   294,   nil,   301,   302,   303,   nil,   310,   nil,   nil,
   nil,   nil,   326,   766,   725,   616,   nil,   nil,   -19,  1117,
   nil,   nil,   nil,   nil,   830,   345,   346,   nil,   nil,   348,
  1136,   nil,   nil,   nil,   nil,   nil,   nil,   nil,  1237,  1177,
   nil,  1218,   nil,   nil ]

racc_action_default = [
  -167,  -191,  -191,    -7,  -160,  -191,  -191,    -8,  -158,    -9,
  -191,   -10,   -11,  -159,   -12,  -191,  -191,  -191,   -13,    -1,
  -191,   -14,    -2,  -191,  -191,   -15,    -3,  -191,   -40,   -16,
    -5,   -17,    -6,  -191,  -191,   -79,  -167,  -159,   -72,  -165,
  -164,  -163,  -167,  -161,  -166,  -184,   -33,   -20,  -191,   -32,
   -21,  -191,   -63,   -22,  -102,   -23,  -104,  -103,   -25,   -62,
   -26,  -191,   -61,   -27,  -147,   -28,  -148,   -29,  -191,   -30,
   -31,  -191,  -191,  -110,   -97,  -191,  -191,   -91,   -95,   -92,
   -99,   -93,   -98,   -96,  -191,  -191,   -94,   -90,  -191,   -72,
  -167,   -42,  -167,    -4,  -191,  -151,  -149,  -191,   -39,  -167,
   -41,   -70,   -71,   -78,   -80,  -191,  -189,   -77,  -191,  -191,
  -180,   -63,   -59,   -65,  -189,   -68,   -62,   -57,   -66,  -191,
  -146,  -145,   -69,   -67,   -73,   -64,  -191,  -191,  -178,  -191,
  -191,   -19,  -191,  -191,  -191,  -191,  -191,   314,  -191,   -82,
  -191,  -186,  -124,  -117,  -191,  -191,  -191,  -191,  -191,  -191,
  -191,  -191,  -191,  -191,  -191,  -191,  -191,  -191,  -191,  -191,
  -189,  -191,  -167,   -46,   -48,  -191,   -55,   -62,   -54,   -45,
  -191,  -191,  -191,  -191,  -168,  -191,  -169,  -191,  -191,  -191,
  -190,  -181,  -182,  -183,  -191,  -191,   -60,  -191,  -190,   -72,
  -179,  -191,  -162,   -18,   -24,   -62,  -105,   -34,  -191,  -191,
  -101,  -136,  -141,  -144,  -142,  -191,  -191,  -143,  -135,  -127,
  -191,  -185,  -187,  -188,  -113,  -115,  -119,  -116,  -121,  -126,
  -123,  -120,  -125,  -122,  -118,  -191,  -111,  -112,  -114,  -106,
  -191,  -191,  -191,  -191,  -191,   -51,   -50,   -44,   -43,  -191,
  -129,  -191,  -133,  -150,  -177,  -175,  -191,  -191,  -172,  -191,
   -76,   -75,   -38,   -81,  -191,  -155,   -35,   -58,   -36,   -74,
  -189,  -191,  -157,  -100,  -138,  -189,  -191,   -83,  -108,   -37,
   -49,   -85,   -52,   -89,   -86,   -87,   -88,   -84,   -53,   -47,
  -130,  -128,  -191,  -191,  -191,  -191,  -170,  -171,  -191,  -191,
  -153,  -154,   -56,  -156,  -191,  -191,  -188,  -140,  -107,  -191,
  -191,  -134,  -176,  -174,  -173,  -152,  -139,  -137,  -191,  -191,
  -132,  -191,  -131,  -109 ]

racc_goto_table = [
     2,    69,    19,   206,    17,    93,   179,    70,   122,   107,
    47,   210,   201,    46,   187,   117,    36,    96,    15,     2,
   114,    43,    22,    17,    64,   248,   123,   170,    97,   171,
   104,   240,   125,   272,   278,   279,    69,   140,    99,   242,
    91,   298,    70,   239,   106,   130,   185,   208,    46,    64,
    63,   112,   265,    95,   175,   109,    42,   127,   110,    64,
   230,   194,   246,   247,   128,    98,   181,   nil,   nil,   nil,
   nil,   160,   206,    94,   nil,   118,   nil,   nil,   nil,   nil,
   nil,   264,   nil,   nil,   nil,    63,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   280,   231,
   nil,   nil,   nil,   nil,   133,   nil,   242,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   182,
    69,   176,   nil,    69,   nil,   nil,    70,   nil,   139,    70,
   207,   nil,   199,    58,   197,    46,   294,   190,   nil,   304,
   192,   159,   nil,    64,   nil,   nil,    64,    64,   nil,   nil,
   301,   nil,   nil,   nil,   107,     2,   122,   225,   113,    17,
   292,   206,   259,   257,   nil,   295,   207,   243,    58,    63,
   306,   260,    63,   204,   123,   253,   nil,   nil,   nil,   nil,
   125,   nil,   nil,    64,     2,   nil,   254,   nil,    17,   nil,
   nil,     2,   nil,   261,   nil,    17,   nil,    64,   nil,   207,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   204,
   166,    93,   166,    65,   nil,   nil,    64,   nil,   nil,   nil,
   276,   276,   nil,   118,   nil,     2,   277,   277,   nil,    17,
   250,   251,   nil,   207,   nil,   nil,   nil,   nil,   120,    67,
    93,   nil,   204,    64,    64,   nil,   nil,    93,    65,     2,
    64,   289,    58,    17,     2,    58,   202,   nil,    17,   nil,
   nil,     2,   nil,   267,   121,    17,   nil,   nil,   nil,   274,
   274,   nil,   nil,   nil,    67,    93,   204,   207,   nil,   nil,
   nil,   nil,   166,   nil,   nil,   nil,   nil,   nil,   207,     2,
   nil,   nil,   202,    17,    64,    93,   nil,    93,    60,   nil,
     2,   nil,   309,   nil,    17,    64,   113,   nil,     2,     2,
   311,     2,    17,    17,   nil,    17,   nil,   nil,   nil,   297,
   204,   nil,   nil,   115,   nil,   202,   nil,   nil,   nil,   nil,
   nil,   204,    65,    60,   nil,    65,   120,   302,   303,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   271,   271,   166,   nil,   nil,   nil,    67,   202,
   nil,    67,   121,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
    85,   nil,   120,   nil,   nil,   168,   nil,   168,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   120,   101,   102,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   121,   nil,
   nil,   nil,   nil,   202,   nil,   120,   nil,   nil,   nil,   nil,
   nil,   nil,   121,   nil,   202,   nil,   nil,    60,   nil,   nil,
    60,   203,   nil,   nil,   nil,   nil,   138,   nil,   nil,   nil,
   142,   121,   275,   275,   nil,   nil,   nil,   nil,   143,   120,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   168,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   203,   121,   121,
   nil,   nil,   nil,   nil,   nil,   121,   nil,   nil,   nil,   nil,
   nil,   115,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   120,   nil,   nil,   nil,   nil,   nil,   nil,
   203,   nil,   nil,   nil,   120,   nil,   nil,   nil,   214,   215,
   216,   217,   218,   219,   220,   221,   222,   223,   224,   121,
   226,   227,   228,   nil,   nil,   nil,   nil,   273,   273,   168,
   121,   nil,   nil,   nil,   203,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   203,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   203 ]

racc_goto_check = [
    29,    27,     2,    60,    35,     4,    34,    28,    48,    50,
    18,    55,    62,    29,    34,    45,    30,    28,     1,    29,
    33,    69,     3,    35,    47,    72,    27,    39,    35,    39,
    53,    58,    28,    44,    44,    40,    27,    54,    30,    60,
    38,    56,    28,    57,    36,    18,    32,    61,    29,    47,
    24,    31,    63,    64,    65,    66,    67,    68,     3,    47,
    34,    21,    70,    71,     3,     5,    73,   nil,   nil,   nil,
   nil,    33,    60,    51,   nil,    24,   nil,   nil,   nil,   nil,
   nil,    62,   nil,   nil,   nil,    24,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    58,    39,
   nil,   nil,   nil,   nil,    51,   nil,    60,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    30,
    27,     3,   nil,    27,   nil,   nil,    28,   nil,    51,    28,
    28,   nil,    18,    22,    29,    29,    55,    69,   nil,    72,
    69,    51,   nil,    47,   nil,   nil,    47,    47,   nil,   nil,
    60,   nil,   nil,   nil,    50,    29,    48,     2,    22,    35,
    34,    60,    50,    45,   nil,    34,    28,    28,    22,    24,
    62,    33,    24,    24,    27,    53,   nil,   nil,   nil,   nil,
    28,   nil,   nil,    47,    29,   nil,     2,   nil,    35,   nil,
   nil,    29,   nil,     2,   nil,    35,   nil,    47,   nil,    28,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    24,
    22,     4,    22,    25,   nil,   nil,    47,   nil,   nil,   nil,
    27,    27,   nil,    24,   nil,    29,    28,    28,   nil,    35,
    51,    51,   nil,    28,   nil,   nil,   nil,   nil,    25,    26,
     4,   nil,    24,    47,    47,   nil,   nil,     4,    25,    29,
    47,     2,    22,    35,    29,    22,    22,   nil,    35,   nil,
   nil,    29,   nil,    51,    26,    35,   nil,   nil,   nil,    24,
    24,   nil,   nil,   nil,    26,     4,    24,    28,   nil,   nil,
   nil,   nil,    22,   nil,   nil,   nil,   nil,   nil,    28,    29,
   nil,   nil,    22,    35,    47,     4,   nil,     4,    23,   nil,
    29,   nil,     2,   nil,    35,    47,    22,   nil,    29,    29,
     2,    29,    35,    35,   nil,    35,   nil,   nil,   nil,    51,
    24,   nil,   nil,    23,   nil,    22,   nil,   nil,   nil,   nil,
   nil,    24,    25,    23,   nil,    25,    25,    51,    51,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,    22,    22,    22,   nil,   nil,   nil,    26,    22,
   nil,    26,    26,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
    49,   nil,    25,   nil,   nil,    23,   nil,    23,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,    25,    49,    49,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    26,   nil,
   nil,   nil,   nil,    22,   nil,    25,   nil,   nil,   nil,   nil,
   nil,   nil,    26,   nil,    22,   nil,   nil,    23,   nil,   nil,
    23,    23,   nil,   nil,   nil,   nil,    49,   nil,   nil,   nil,
    49,    26,    25,    25,   nil,   nil,   nil,   nil,    49,    25,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,    23,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,    23,    26,    26,
   nil,   nil,   nil,   nil,   nil,    26,   nil,   nil,   nil,   nil,
   nil,    23,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,    25,   nil,   nil,   nil,   nil,   nil,   nil,
    23,   nil,   nil,   nil,    25,   nil,   nil,   nil,    49,    49,
    49,    49,    49,    49,    49,    49,    49,    49,    49,    26,
    49,    49,    49,   nil,   nil,   nil,   nil,    23,    23,    23,
    26,   nil,   nil,   nil,    23,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    23,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    23 ]

racc_goto_pointer = [
   nil,    18,     2,    22,   -14,    41,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    -3,   nil,
   nil,   -71,   120,   285,    37,   200,   226,   -12,    -6,     0,
    11,    13,   -66,   -18,  -100,     4,     9,   nil,    23,   -63,
  -199,   nil,   nil,   nil,  -199,   -23,   nil,    11,   -30,   354,
   -26,    53,   nil,    -5,   -38,  -129,  -227,  -129,  -141,   nil,
  -133,   -89,  -124,  -153,    30,   -45,    19,    46,    15,    11,
  -112,  -111,  -149,   -42 ]

racc_goto_default = [
   nil,   nil,   nil,   169,    26,    30,    32,     3,     7,     9,
    11,    12,    14,    18,    21,    25,    29,    31,   nil,    50,
    53,    55,    77,    78,    79,    81,    82,    86,    87,    74,
     6,   nil,   nil,   nil,   nil,    61,   nil,    24,   nil,   nil,
   163,   234,   164,   165,   nil,   nil,   119,    80,    83,   nil,
   124,    73,   103,   nil,   nil,   nil,   nil,   nil,   nil,   241,
    68,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil ]

racc_token_table = {
 false => 0,
 Object.new => 1,
 :LBRACK => 2,
 :DQTEXT => 3,
 :SQTEXT => 4,
 :RBRACK => 5,
 :LBRACE => 6,
 :RBRACE => 7,
 :SYMBOL => 8,
 :FARROW => 9,
 :COMMA => 10,
 :TRUE => 11,
 :FALSE => 12,
 :EQUALS => 13,
 :APPENDS => 14,
 :LESSEQUAL => 15,
 :NOTEQUAL => 16,
 :DOT => 17,
 :COLON => 18,
 :LLCOLLECT => 19,
 :RRCOLLECT => 20,
 :QMARK => 21,
 :LPAREN => 22,
 :RPAREN => 23,
 :ISEQUAL => 24,
 :GREATEREQUAL => 25,
 :GREATERTHAN => 26,
 :LESSTHAN => 27,
 :IF => 28,
 :ELSE => 29,
 :IMPORT => 30,
 :DEFINE => 31,
 :ELSIF => 32,
 :VARIABLE => 33,
 :CLASS => 34,
 :INHERITS => 35,
 :NODE => 36,
 :BOOLEAN => 37,
 :NAME => 38,
 :SEMIC => 39,
 :CASE => 40,
 :DEFAULT => 41,
 :AT => 42,
 :LCOLLECT => 43,
 :RCOLLECT => 44,
 :CLASSNAME => 45,
 :CLASSREF => 46,
 :NOT => 47,
 :OR => 48,
 :AND => 49,
 :UNDEF => 50,
 :PARROW => 51,
 :PLUS => 52,
 :MINUS => 53,
 :TIMES => 54,
 :DIV => 55,
 :LSHIFT => 56,
 :RSHIFT => 57,
 :UMINUS => 58 }

racc_use_result_var = true

racc_nt_base = 59

Racc_arg = [
 racc_action_table,
 racc_action_check,
 racc_action_default,
 racc_action_pointer,
 racc_goto_table,
 racc_goto_check,
 racc_goto_default,
 racc_goto_pointer,
 racc_nt_base,
 racc_reduce_table,
 racc_token_table,
 racc_shift_n,
 racc_reduce_n,
 racc_use_result_var ]

Racc_token_to_s_table = [
'$end',
'error',
'LBRACK',
'DQTEXT',
'SQTEXT',
'RBRACK',
'LBRACE',
'RBRACE',
'SYMBOL',
'FARROW',
'COMMA',
'TRUE',
'FALSE',
'EQUALS',
'APPENDS',
'LESSEQUAL',
'NOTEQUAL',
'DOT',
'COLON',
'LLCOLLECT',
'RRCOLLECT',
'QMARK',
'LPAREN',
'RPAREN',
'ISEQUAL',
'GREATEREQUAL',
'GREATERTHAN',
'LESSTHAN',
'IF',
'ELSE',
'IMPORT',
'DEFINE',
'ELSIF',
'VARIABLE',
'CLASS',
'INHERITS',
'NODE',
'BOOLEAN',
'NAME',
'SEMIC',
'CASE',
'DEFAULT',
'AT',
'LCOLLECT',
'RCOLLECT',
'CLASSNAME',
'CLASSREF',
'NOT',
'OR',
'AND',
'UNDEF',
'PARROW',
'PLUS',
'MINUS',
'TIMES',
'DIV',
'LSHIFT',
'RSHIFT',
'UMINUS',
'$start',
'program',
'statements',
'nil',
'statement',
'resource',
'virtualresource',
'collection',
'assignment',
'casestatement',
'ifstatement',
'import',
'fstatement',
'definition',
'hostclass',
'nodedef',
'resourceoverride',
'append',
'funcvalues',
'namestrings',
'resourcerefs',
'namestring',
'name',
'variable',
'type',
'boolean',
'funcrvalue',
'selector',
'quotedtext',
'resourceref',
'classname',
'resourceinstances',
'endsemi',
'params',
'endcomma',
'classref',
'anyparams',
'at',
'collectrhand',
'collstatements',
'collstatement',
'colljoin',
'collexpr',
'colllval',
'simplervalue',
'resourceinst',
'resourcename',
'undef',
'array',
'expression',
'param',
'rvalue',
'addparam',
'anyparam',
'rvalues',
'comma',
'else',
'caseopts',
'caseopt',
'casevalues',
'selectlhand',
'svalues',
'selectval',
'sintvalues',
'qtexts',
'argumentlist',
'classparent',
'hostnames',
'nodeparent',
'hostname',
'nothing',
'arguments',
'argument',
'classnameordefault']

Racc_debug_parser = true

##### racc system variables end #####

 # reduce 0 omitted

module_eval <<'.,.,', 'grammar.ra', 42
  def _reduce_1( val, _values, result )
    if val[0]
        # Make sure we always return an array.
        if val[0].is_a?(AST::ASTArray)
            if val[0].children.empty?
                result = nil
            else
                result = val[0]
            end
        else
            result = aryfy(val[0])
        end
    else
        result = nil
    end
   result
  end
.,.,

 # reduce 2 omitted

 # reduce 3 omitted

module_eval <<'.,.,', 'grammar.ra', 58
  def _reduce_4( val, _values, result )
    if val[0] and val[1]
        if val[0].instance_of?(AST::ASTArray)
            val[0].push(val[1])
            result = val[0]
        else
            result = ast AST::ASTArray, :children => [val[0],val[1]]
        end
    elsif obj = (val[0] || val[1])
        result = obj
    else result = nil
    end
   result
  end
.,.,

 # reduce 5 omitted

 # reduce 6 omitted

 # reduce 7 omitted

 # reduce 8 omitted

 # reduce 9 omitted

 # reduce 10 omitted

 # reduce 11 omitted

 # reduce 12 omitted

 # reduce 13 omitted

 # reduce 14 omitted

 # reduce 15 omitted

 # reduce 16 omitted

 # reduce 17 omitted

module_eval <<'.,.,', 'grammar.ra', 81
  def _reduce_18( val, _values, result )
    args = aryfy(val[2])
    result = ast AST::Function,
        :name => val[0],
        :arguments => args,
        :ftype => :statement
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 87
  def _reduce_19( val, _values, result )
    result = ast AST::Function,
        :name => val[0],
        :arguments => AST::ASTArray.new({}),
        :ftype => :statement
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 94
  def _reduce_20( val, _values, result )
    args = aryfy(val[1])
    result = ast AST::Function,
        :name => val[0],
        :arguments => args,
        :ftype => :statement
   result
  end
.,.,

 # reduce 21 omitted

 # reduce 22 omitted

 # reduce 23 omitted

module_eval <<'.,.,', 'grammar.ra', 104
  def _reduce_24( val, _values, result )
    result = aryfy(val[0], val[2])
    result.line = @lexer.line
    result.file = @lexer.file
   result
  end
.,.,

 # reduce 25 omitted

 # reduce 26 omitted

 # reduce 27 omitted

 # reduce 28 omitted

 # reduce 29 omitted

 # reduce 30 omitted

 # reduce 31 omitted

module_eval <<'.,.,', 'grammar.ra', 117
  def _reduce_32( val, _values, result )
                    result = ast AST::Name, :value => val[0]
   result
  end
.,.,

 # reduce 33 omitted

module_eval <<'.,.,', 'grammar.ra', 128
  def _reduce_34( val, _values, result )
    unless val[0].is_a?(AST::ASTArray)
        val[0] = aryfy(val[0])
    end

    val[0].push(val[2])

    result = val[0]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 149
  def _reduce_35( val, _values, result )
    array = val[2]
    if array.instance_of?(AST::ResourceInstance)
        array = [array]
    end
    result = ast AST::ASTArray

    # this iterates across each specified resourceinstance
    array.each { |instance|
        unless instance.instance_of?(AST::ResourceInstance)
            raise Puppet::Dev, "Got something that isn't an instance"
        end
        # now, i need to somehow differentiate between those things with
        # arrays in their names, and normal things
        result.push ast(AST::Resource,
            :type => val[0],
            :title => instance[0],
            :params => instance[1])
    }
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 152
  def _reduce_36( val, _values, result )
    # This is a deprecated syntax.
    error "All resource specifications require names"
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 155
  def _reduce_37( val, _values, result )
    # a defaults setting for a type
    result = ast(AST::ResourceDefaults, :type => val[0], :params => val[2])
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 160
  def _reduce_38( val, _values, result )
    result = ast AST::ResourceOverride, :object => val[0], :params => val[2]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 187
  def _reduce_39( val, _values, result )
    type = val[0]

    if (type == :exported and ! Puppet[:storeconfigs]) and ! Puppet[:parseonly]
        Puppet.warning addcontext("You cannot collect without storeconfigs being set")
    end

    if val[1].is_a? AST::ResourceDefaults
        error "Defaults are not virtualizable"
    end

    method = type.to_s + "="

    # Just mark our resources as exported and pass them through.
    if val[1].instance_of?(AST::ASTArray)
        val[1].each do |obj|
            obj.send(method, true)
        end
    else
        val[1].send(method, true)
    end

    result = val[1]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 188
  def _reduce_40( val, _values, result )
 result = :virtual
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 189
  def _reduce_41( val, _values, result )
 result = :exported
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 212
  def _reduce_42( val, _values, result )
    if val[0] =~ /^[a-z]/
        Puppet.warning addcontext("Collection names must now be capitalized")
    end
    type = val[0].downcase
    args = {:type => type}

    if val[1].is_a?(AST::CollExpr)
        args[:query] = val[1]
        args[:query].type = type
        args[:form] = args[:query].form
    else
        args[:form] = val[1]
    end
    if args[:form] == :exported and ! Puppet[:storeconfigs] and ! Puppet[:parseonly]
        Puppet.warning addcontext("You cannot collect exported resources without storeconfigs being set; the collection will be ignored")
    end
    result = ast AST::Collection, args
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 222
  def _reduce_43( val, _values, result )
    if val[1]
        result = val[1]
        result.form = :virtual
    else
        result = :virtual
    end
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 230
  def _reduce_44( val, _values, result )
    if val[1]
        result = val[1]
        result.form = :exported
    else
        result = :exported
    end
   result
  end
.,.,

 # reduce 45 omitted

 # reduce 46 omitted

module_eval <<'.,.,', 'grammar.ra', 238
  def _reduce_47( val, _values, result )
    result = ast AST::CollExpr, :test1 => val[0], :oper => val[1], :test2 => val[2]
   result
  end
.,.,

 # reduce 48 omitted

module_eval <<'.,.,', 'grammar.ra', 244
  def _reduce_49( val, _values, result )
    result = val[1]
    result.parens = true
   result
  end
.,.,

 # reduce 50 omitted

 # reduce 51 omitted

module_eval <<'.,.,', 'grammar.ra', 252
  def _reduce_52( val, _values, result )
    result = ast AST::CollExpr, :test1 => val[0], :oper => val[1], :test2 => val[2]
    #result = ast AST::CollExpr
    #result.push *val
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 257
  def _reduce_53( val, _values, result )
    result = ast AST::CollExpr, :test1 => val[0], :oper => val[1], :test2 => val[2]
    #result = ast AST::CollExpr
    #result.push *val
   result
  end
.,.,

 # reduce 54 omitted

 # reduce 55 omitted

module_eval <<'.,.,', 'grammar.ra', 264
  def _reduce_56( val, _values, result )
    result = ast AST::ResourceInstance, :children => [val[0],val[2]]
   result
  end
.,.,

 # reduce 57 omitted

module_eval <<'.,.,', 'grammar.ra', 274
  def _reduce_58( val, _values, result )
    if val[0].instance_of?(AST::ResourceInstance)
        result = ast AST::ASTArray, :children => [val[0],val[2]]
    else
        val[0].push val[2]
        result = val[0]
    end
   result
  end
.,.,

 # reduce 59 omitted

 # reduce 60 omitted

module_eval <<'.,.,', 'grammar.ra', 281
  def _reduce_61( val, _values, result )
    result = ast AST::Undef, :value => :undef
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 285
  def _reduce_62( val, _values, result )
    result = ast AST::Name, :value => val[0]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 289
  def _reduce_63( val, _values, result )
    result = ast AST::Type, :value => val[0]
   result
  end
.,.,

 # reduce 64 omitted

 # reduce 65 omitted

 # reduce 66 omitted

 # reduce 67 omitted

 # reduce 68 omitted

 # reduce 69 omitted

module_eval <<'.,.,', 'grammar.ra', 305
  def _reduce_70( val, _values, result )
    if val[0] =~ /::/
        raise Puppet::ParseError, "Cannot assign to variables in other namespaces"
    end
    # this is distinct from referencing a variable
    variable = ast AST::Name, :value => val[0]
    result = ast AST::VarDef, :name => variable, :value => val[2]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 310
  def _reduce_71( val, _values, result )
    variable = ast AST::Name, :value => val[0]
    result = ast AST::VarDef, :name => variable, :value => val[2], :append => true
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 315
  def _reduce_72( val, _values, result )
    result = ast AST::ASTArray
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 315
  def _reduce_73( val, _values, result )
 result = val[0]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 324
  def _reduce_74( val, _values, result )
    if val[0].instance_of?(AST::ASTArray)
        val[0].push(val[2])
        result = val[0]
    else
        result = ast AST::ASTArray, :children => [val[0],val[2]]
    end
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 328
  def _reduce_75( val, _values, result )
    result = ast AST::ResourceParam, :param => val[0], :value => val[2]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 333
  def _reduce_76( val, _values, result )
    result = ast AST::ResourceParam, :param => val[0], :value => val[2],
                                     :add => true
   result
  end
.,.,

 # reduce 77 omitted

 # reduce 78 omitted

module_eval <<'.,.,', 'grammar.ra', 341
  def _reduce_79( val, _values, result )
    result = ast AST::ASTArray
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 341
  def _reduce_80( val, _values, result )
 result = val[0]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 350
  def _reduce_81( val, _values, result )
    if val[0].instance_of?(AST::ASTArray)
        val[0].push(val[2])
        result = val[0]
    else
        result = ast AST::ASTArray, :children => [val[0],val[2]]
    end
   result
  end
.,.,

 # reduce 82 omitted

module_eval <<'.,.,', 'grammar.ra', 359
  def _reduce_83( val, _values, result )
    if val[0].instance_of?(AST::ASTArray)
        result = val[0].push(val[2])
    else
        result = ast AST::ASTArray, :children => [val[0],val[2]]
    end
   result
  end
.,.,

 # reduce 84 omitted

 # reduce 85 omitted

 # reduce 86 omitted

 # reduce 87 omitted

 # reduce 88 omitted

 # reduce 89 omitted

 # reduce 90 omitted

 # reduce 91 omitted

 # reduce 92 omitted

 # reduce 93 omitted

 # reduce 94 omitted

 # reduce 95 omitted

 # reduce 96 omitted

 # reduce 97 omitted

 # reduce 98 omitted

 # reduce 99 omitted

module_eval <<'.,.,', 'grammar.ra', 386
  def _reduce_100( val, _values, result )
    args = aryfy(val[2])
    result = ast AST::Function,
        :name => val[0],
        :arguments => args,
        :ftype => :rvalue
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 391
  def _reduce_101( val, _values, result )
    result = ast AST::Function,
        :name => val[0],
        :arguments => AST::ASTArray.new({}),
        :ftype => :rvalue
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 395
  def _reduce_102( val, _values, result )
    result = ast AST::String, :value => val[0]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 397
  def _reduce_103( val, _values, result )
    result = ast AST::FlatString, :value => val[0]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 401
  def _reduce_104( val, _values, result )
    result = ast AST::Boolean, :value => val[0]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 406
  def _reduce_105( val, _values, result )
    Puppet.warning addcontext("Deprecation notice:  Resource references should now be capitalized")
    result = ast AST::ResourceReference, :type => val[0], :title => val[2]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 408
  def _reduce_106( val, _values, result )
    result = ast AST::ResourceReference, :type => val[0], :title => val[2]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 421
  def _reduce_107( val, _values, result )
    args = {
        :test => val[1],
        :statements => val[3]
    }

    if val[5]
        args[:else] = val[5]
    end

    result = ast AST::IfStatement, args
   result
  end
.,.,

 # reduce 108 omitted

module_eval <<'.,.,', 'grammar.ra', 426
  def _reduce_109( val, _values, result )
    result = ast AST::Else, :statements => val[2]
   result
  end
.,.,

 # reduce 110 omitted

module_eval <<'.,.,', 'grammar.ra', 443
  def _reduce_111( val, _values, result )
    result = ast AST::ArithmeticOperator, :operator => val[1], :lval => val[0], :rval => val[2]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 446
  def _reduce_112( val, _values, result )
    result = ast AST::ArithmeticOperator, :operator => val[1], :lval => val[0], :rval => val[2]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 449
  def _reduce_113( val, _values, result )
    result = ast AST::ArithmeticOperator, :operator => val[1], :lval => val[0], :rval => val[2]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 452
  def _reduce_114( val, _values, result )
    result = ast AST::ArithmeticOperator, :operator => val[1], :lval => val[0], :rval => val[2]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 455
  def _reduce_115( val, _values, result )
    result = ast AST::ArithmeticOperator, :operator => val[1], :lval => val[0], :rval => val[2]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 458
  def _reduce_116( val, _values, result )
    result = ast AST::ArithmeticOperator, :operator => val[1], :lval => val[0], :rval => val[2]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 461
  def _reduce_117( val, _values, result )
    result = ast AST::Minus, :value => val[1]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 464
  def _reduce_118( val, _values, result )
    result = ast AST::ComparisonOperator, :operator => val[1], :lval => val[0], :rval => val[2]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 467
  def _reduce_119( val, _values, result )
    result = ast AST::ComparisonOperator, :operator => val[1], :lval => val[0], :rval => val[2]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 470
  def _reduce_120( val, _values, result )
    result = ast AST::ComparisonOperator, :operator => val[1], :lval => val[0], :rval => val[2]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 473
  def _reduce_121( val, _values, result )
    result = ast AST::ComparisonOperator, :operator => val[1], :lval => val[0], :rval => val[2]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 476
  def _reduce_122( val, _values, result )
    result = ast AST::ComparisonOperator, :operator => val[1], :lval => val[0], :rval => val[2]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 479
  def _reduce_123( val, _values, result )
    result = ast AST::ComparisonOperator, :operator => val[1], :lval => val[0], :rval => val[2]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 482
  def _reduce_124( val, _values, result )
    result = ast AST::Not, :value => val[1]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 485
  def _reduce_125( val, _values, result )
    result = ast AST::BooleanOperator, :operator => val[1], :lval => val[0], :rval => val[2]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 488
  def _reduce_126( val, _values, result )
    result = ast AST::BooleanOperator, :operator => val[1], :lval => val[0], :rval => val[2]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 491
  def _reduce_127( val, _values, result )
    result = val[1]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 499
  def _reduce_128( val, _values, result )
    options = val[3]
    unless options.instance_of?(AST::ASTArray)
        options = ast AST::ASTArray, :children => [val[3]]
    end
    result = ast AST::CaseStatement, :test => val[1], :options => options
   result
  end
.,.,

 # reduce 129 omitted

module_eval <<'.,.,', 'grammar.ra', 509
  def _reduce_130( val, _values, result )
    if val[0].instance_of?(AST::ASTArray)
        val[0].push val[1]
        result = val[0]
    else
        result = ast AST::ASTArray, :children => [val[0], val[1]]
    end
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 513
  def _reduce_131( val, _values, result )
    result = ast AST::CaseOpt, :value => val[0], :statements => val[3]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 518
  def _reduce_132( val, _values, result )
    result = ast(AST::CaseOpt,
        :value => val[0],
        :statements => ast(AST::ASTArray)
    )
   result
  end
.,.,

 # reduce 133 omitted

module_eval <<'.,.,', 'grammar.ra', 528
  def _reduce_134( val, _values, result )
    if val[0].instance_of?(AST::ASTArray)
        val[0].push(val[2])
        result = val[0]
    else
        result = ast AST::ASTArray, :children => [val[0],val[2]]
    end
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 532
  def _reduce_135( val, _values, result )
    result = ast AST::Selector, :param => val[0], :values => val[2]
   result
  end
.,.,

 # reduce 136 omitted

module_eval <<'.,.,', 'grammar.ra', 534
  def _reduce_137( val, _values, result )
 result = val[1]
   result
  end
.,.,

 # reduce 138 omitted

module_eval <<'.,.,', 'grammar.ra', 545
  def _reduce_139( val, _values, result )
    if val[0].instance_of?(AST::ASTArray)
        val[0].push(val[2])
        result = val[0]
    else
        result = ast AST::ASTArray, :children => [val[0],val[2]]
    end
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 549
  def _reduce_140( val, _values, result )
    result = ast AST::ResourceParam, :param => val[0], :value => val[2]
   result
  end
.,.,

 # reduce 141 omitted

 # reduce 142 omitted

 # reduce 143 omitted

 # reduce 144 omitted

 # reduce 145 omitted

 # reduce 146 omitted

 # reduce 147 omitted

module_eval <<'.,.,', 'grammar.ra', 560
  def _reduce_148( val, _values, result )
    result = ast AST::Default, :value => val[0]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 562
  def _reduce_149( val, _values, result )
 result = [val[0].value]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 566
  def _reduce_150( val, _values, result )
    results = val[0] << val[2].value
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 574
  def _reduce_151( val, _values, result )
    val[1].each do |file|
        import(file)
    end

    result = AST::ASTArray.new(:children => [])
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 584
  def _reduce_152( val, _values, result )
    newdefine classname(val[1]), :arguments => val[2], :code => val[4]
    @lexer.indefine = false
    result = nil

#}           | DEFINE NAME argumentlist parent LBRACE RBRACE {
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 588
  def _reduce_153( val, _values, result )
    newdefine classname(val[1]), :arguments => val[2]
    @lexer.indefine = false
    result = nil
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 596
  def _reduce_154( val, _values, result )
    # Our class gets defined in the parent namespace, not our own.
    @lexer.namepop
    newclass classname(val[1]), :code => val[4], :parent => val[2]
    result = nil
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 601
  def _reduce_155( val, _values, result )
    # Our class gets defined in the parent namespace, not our own.
    @lexer.namepop
    newclass classname(val[1]), :parent => val[2]
    result = nil
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 606
  def _reduce_156( val, _values, result )
    newnode val[1], :parent => val[2], :code => val[4]
    result = nil
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 609
  def _reduce_157( val, _values, result )
    newnode val[1], :parent => val[2]
    result = nil
   result
  end
.,.,

 # reduce 158 omitted

 # reduce 159 omitted

 # reduce 160 omitted

 # reduce 161 omitted

module_eval <<'.,.,', 'grammar.ra', 623
  def _reduce_162( val, _values, result )
    result = val[0]
    result = [result] unless result.is_a?(Array)
    result << val[2]
   result
  end
.,.,

 # reduce 163 omitted

 # reduce 164 omitted

 # reduce 165 omitted

 # reduce 166 omitted

module_eval <<'.,.,', 'grammar.ra', 632
  def _reduce_167( val, _values, result )
    result = nil
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 636
  def _reduce_168( val, _values, result )
    result = ast AST::ASTArray, :children => []
   result
  end
.,.,

 # reduce 169 omitted

module_eval <<'.,.,', 'grammar.ra', 641
  def _reduce_170( val, _values, result )
    result = nil
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 645
  def _reduce_171( val, _values, result )
    result = val[1]
    result = [result] unless result[0].is_a?(Array)
   result
  end
.,.,

 # reduce 172 omitted

module_eval <<'.,.,', 'grammar.ra', 652
  def _reduce_173( val, _values, result )
    result = val[0]
    result = [result] unless result[0].is_a?(Array)
    result << val[2]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 657
  def _reduce_174( val, _values, result )
    Puppet.warning addcontext("Deprecation notice: must now include '$' in prototype")
    result = [val[0], val[2]]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 661
  def _reduce_175( val, _values, result )
    Puppet.warning addcontext("Deprecation notice: must now include '$' in prototype")
    result = [val[0]]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 663
  def _reduce_176( val, _values, result )
    result = [val[0], val[2]]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 665
  def _reduce_177( val, _values, result )
    result = [val[0]]
   result
  end
.,.,

 # reduce 178 omitted

module_eval <<'.,.,', 'grammar.ra', 670
  def _reduce_179( val, _values, result )
    result = val[1]
   result
  end
.,.,

 # reduce 180 omitted

module_eval <<'.,.,', 'grammar.ra', 675
  def _reduce_181( val, _values, result )
    result = val[1]
   result
  end
.,.,

 # reduce 182 omitted

 # reduce 183 omitted

module_eval <<'.,.,', 'grammar.ra', 681
  def _reduce_184( val, _values, result )
    result = ast AST::Variable, :value => val[0]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 689
  def _reduce_185( val, _values, result )
    if val[1].instance_of?(AST::ASTArray)
        result = val[1]
    else
        result = ast AST::ASTArray, :children => [val[1]]
    end
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 691
  def _reduce_186( val, _values, result )
    result = ast AST::ASTArray
   result
  end
.,.,

 # reduce 187 omitted

 # reduce 188 omitted

 # reduce 189 omitted

module_eval <<'.,.,', 'grammar.ra', 696
  def _reduce_190( val, _values, result )
 result = nil
   result
  end
.,.,

 def _reduce_none( val, _values, result )
  result
 end

    end   # class Parser

  end   # module Parser

end   # module Puppet
