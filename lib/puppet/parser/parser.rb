#
# DO NOT MODIFY!!!!
# This file is automatically generated by racc 1.4.5
# from racc grammer file "grammar.ra".
#

require 'racc/parser'


require 'puppet'
require 'puppet/util/loadedfile'
require 'puppet/parser/lexer'
require 'puppet/parser/ast'
#require 'puppet/parser/interpreter'

module Puppet
    class ParseError < Puppet::Error; end
    class ImportError < Racc::ParseError; end
    class AlreadyImportedError < ImportError; end
end

Puppet[:typecheck] = true
Puppet[:paramcheck] = true


module Puppet

  module Parser

    class Parser < Racc::Parser

module_eval <<'..end grammar.ra modeval..id53fc2ece56', 'grammar.ra', 784

# It got too annoying having code in a file that needs to be compiled.
require 'puppet/parser/parser_support'

# Make emacs happy
# Local Variables:
# mode: ruby
# End:

# $Id$

..end grammar.ra modeval..id53fc2ece56

##### racc 1.4.5 generates ###

racc_reduce_table = [
 0, 0, :racc_error,
 1, 60, :_reduce_1,
 1, 60, :_reduce_none,
 1, 61, :_reduce_none,
 2, 61, :_reduce_4,
 1, 63, :_reduce_none,
 1, 63, :_reduce_none,
 1, 63, :_reduce_none,
 1, 63, :_reduce_none,
 1, 63, :_reduce_none,
 1, 63, :_reduce_none,
 1, 63, :_reduce_none,
 1, 63, :_reduce_none,
 1, 63, :_reduce_none,
 1, 63, :_reduce_none,
 1, 63, :_reduce_none,
 1, 63, :_reduce_none,
 1, 63, :_reduce_none,
 4, 71, :_reduce_18,
 5, 71, :_reduce_19,
 3, 71, :_reduce_20,
 2, 71, :_reduce_21,
 1, 77, :_reduce_none,
 1, 77, :_reduce_none,
 3, 77, :_reduce_24,
 3, 77, :_reduce_25,
 1, 78, :_reduce_none,
 1, 78, :_reduce_none,
 1, 78, :_reduce_none,
 1, 78, :_reduce_none,
 1, 78, :_reduce_none,
 1, 78, :_reduce_none,
 1, 78, :_reduce_none,
 1, 78, :_reduce_33,
 5, 64, :_reduce_34,
 5, 64, :_reduce_35,
 5, 64, :_reduce_36,
 5, 75, :_reduce_37,
 2, 65, :_reduce_38,
 1, 94, :_reduce_39,
 2, 94, :_reduce_40,
 6, 66, :_reduce_41,
 2, 66, :_reduce_42,
 3, 95, :_reduce_43,
 3, 95, :_reduce_44,
 1, 96, :_reduce_none,
 1, 96, :_reduce_none,
 3, 96, :_reduce_47,
 1, 97, :_reduce_none,
 3, 97, :_reduce_49,
 1, 98, :_reduce_50,
 1, 98, :_reduce_51,
 3, 99, :_reduce_52,
 3, 99, :_reduce_53,
 1, 100, :_reduce_none,
 1, 100, :_reduce_none,
 4, 102, :_reduce_56,
 1, 88, :_reduce_none,
 3, 88, :_reduce_58,
 0, 89, :_reduce_none,
 1, 89, :_reduce_none,
 1, 104, :_reduce_61,
 1, 80, :_reduce_62,
 1, 82, :_reduce_63,
 1, 103, :_reduce_none,
 1, 103, :_reduce_none,
 1, 103, :_reduce_none,
 1, 103, :_reduce_none,
 1, 103, :_reduce_none,
 1, 103, :_reduce_none,
 3, 67, :_reduce_70,
 3, 76, :_reduce_71,
 0, 90, :_reduce_72,
 1, 90, :_reduce_73,
 3, 90, :_reduce_74,
 3, 107, :_reduce_75,
 3, 109, :_reduce_76,
 1, 110, :_reduce_none,
 1, 110, :_reduce_none,
 0, 93, :_reduce_79,
 1, 93, :_reduce_80,
 3, 93, :_reduce_81,
 1, 111, :_reduce_none,
 3, 111, :_reduce_83,
 1, 101, :_reduce_none,
 1, 101, :_reduce_none,
 1, 101, :_reduce_none,
 1, 101, :_reduce_none,
 1, 101, :_reduce_none,
 1, 101, :_reduce_none,
 1, 108, :_reduce_none,
 1, 108, :_reduce_none,
 1, 108, :_reduce_none,
 1, 108, :_reduce_none,
 1, 108, :_reduce_none,
 1, 108, :_reduce_none,
 1, 108, :_reduce_none,
 1, 108, :_reduce_none,
 1, 108, :_reduce_none,
 1, 108, :_reduce_none,
 4, 84, :_reduce_100,
 3, 84, :_reduce_101,
 1, 86, :_reduce_102,
 1, 86, :_reduce_103,
 1, 83, :_reduce_104,
 4, 79, :_reduce_105,
 4, 79, :_reduce_106,
 6, 69, :_reduce_107,
 5, 69, :_reduce_108,
 0, 113, :_reduce_none,
 4, 113, :_reduce_110,
 3, 113, :_reduce_111,
 1, 106, :_reduce_none,
 3, 106, :_reduce_113,
 3, 106, :_reduce_114,
 3, 106, :_reduce_115,
 3, 106, :_reduce_116,
 3, 106, :_reduce_117,
 3, 106, :_reduce_118,
 2, 106, :_reduce_119,
 3, 106, :_reduce_120,
 3, 106, :_reduce_121,
 3, 106, :_reduce_122,
 3, 106, :_reduce_123,
 3, 106, :_reduce_124,
 3, 106, :_reduce_125,
 2, 106, :_reduce_126,
 3, 106, :_reduce_127,
 3, 106, :_reduce_128,
 3, 106, :_reduce_129,
 5, 68, :_reduce_130,
 1, 114, :_reduce_none,
 2, 114, :_reduce_132,
 5, 115, :_reduce_133,
 4, 115, :_reduce_134,
 1, 116, :_reduce_none,
 3, 116, :_reduce_136,
 3, 85, :_reduce_137,
 1, 118, :_reduce_none,
 4, 118, :_reduce_139,
 1, 120, :_reduce_none,
 3, 120, :_reduce_141,
 3, 119, :_reduce_142,
 1, 117, :_reduce_none,
 1, 117, :_reduce_none,
 1, 117, :_reduce_none,
 1, 117, :_reduce_none,
 1, 117, :_reduce_none,
 1, 117, :_reduce_none,
 1, 117, :_reduce_none,
 1, 117, :_reduce_150,
 1, 121, :_reduce_151,
 3, 121, :_reduce_152,
 2, 70, :_reduce_153,
 6, 72, :_reduce_154,
 5, 72, :_reduce_155,
 6, 73, :_reduce_156,
 5, 73, :_reduce_157,
 6, 74, :_reduce_158,
 5, 74, :_reduce_159,
 1, 92, :_reduce_160,
 1, 87, :_reduce_161,
 1, 87, :_reduce_162,
 1, 124, :_reduce_none,
 3, 124, :_reduce_164,
 1, 126, :_reduce_165,
 1, 126, :_reduce_166,
 1, 126, :_reduce_167,
 1, 126, :_reduce_168,
 0, 62, :_reduce_169,
 0, 127, :_reduce_170,
 1, 122, :_reduce_none,
 3, 122, :_reduce_172,
 3, 122, :_reduce_173,
 1, 128, :_reduce_none,
 3, 128, :_reduce_175,
 3, 129, :_reduce_176,
 1, 129, :_reduce_177,
 3, 129, :_reduce_178,
 1, 129, :_reduce_179,
 1, 125, :_reduce_none,
 2, 125, :_reduce_181,
 1, 123, :_reduce_none,
 2, 123, :_reduce_183,
 1, 130, :_reduce_none,
 1, 130, :_reduce_none,
 1, 81, :_reduce_186,
 3, 105, :_reduce_187,
 4, 105, :_reduce_188,
 2, 105, :_reduce_189,
 1, 112, :_reduce_none,
 1, 112, :_reduce_none,
 0, 91, :_reduce_none,
 1, 91, :_reduce_193 ]

racc_reduce_n = 194

racc_shift_n = 321

racc_action_table = [
    75,    57,    61,   263,   180,    38,    40,   285,    44,   198,
    54,   129,    45,   200,   241,   284,   295,   196,   197,   242,
    74,    75,    57,    61,   274,    47,    38,    40,   196,   197,
   133,    49,    38,    40,   112,    60,    64,   196,   197,    70,
    41,    74,   150,    43,    55,    77,   179,   119,    66,    48,
   142,    87,    49,    75,    57,    61,    60,    64,    49,   109,
    70,    41,  -145,   124,    43,    55,    77,    41,  -147,    66,
    43,   255,    87,    74,    75,    57,    61,   290,   152,   153,
   154,   140,   141,   143,    49,   195,   180,   105,    60,    64,
   289,   241,    70,   194,    74,   150,   242,    55,    77,   133,
   119,    66,   204,   142,    87,    49,    75,    57,    61,    60,
    64,    49,   134,    70,    35,   203,   124,   175,    55,    77,
  -148,     3,    66,    35,   260,    87,    74,    75,    57,    61,
     3,   152,   153,   154,   140,   141,   143,    49,   116,    35,
   182,    60,    64,   188,   302,    70,     3,    74,   150,  -145,
    55,    77,  -144,   119,    66,  -144,   142,    87,    49,    75,
    57,    61,    60,    64,    49,   250,    70,   154,   140,   124,
  -146,    55,    77,    57,    61,    66,    57,    61,    87,    74,
    75,    57,    61,  -146,   152,   153,   154,   140,   141,   143,
    49,   133,   205,    44,    60,    64,   188,   189,    70,   277,
    74,   150,   278,    55,    77,  -143,   119,    66,   191,   142,
    87,    49,    75,    57,    61,    60,    64,    49,   248,    70,
    33,    34,   124,  -143,    55,    77,   154,   140,    66,  -160,
   129,    87,    74,    75,    57,    61,   246,   152,   153,   154,
   140,   141,   143,    49,  -143,   218,   118,    60,    64,   188,
   219,    70,  -146,    74,    35,   116,    55,    77,   281,  -149,
    66,     3,     6,    87,    49,  -144,  -148,  -147,    60,    64,
   151,   187,    70,   286,   287,   188,   189,    55,    77,   146,
   150,    66,   288,  -145,    87,   105,   293,   101,   142,   144,
   147,   149,   135,   116,    75,    57,    61,   152,   153,   154,
   140,   141,   143,   152,   153,   154,   140,   141,   143,    98,
    97,   299,   145,   148,    74,  -143,   152,   153,   154,   140,
   141,   143,  -146,  -144,  -148,    49,    75,    57,    61,    60,
    64,  -145,    45,    70,   152,   153,   154,   140,    55,    77,
   156,   281,    66,   305,   306,    87,    74,    75,    57,    61,
   152,   153,   154,   140,   157,   158,   178,    49,   182,    73,
   191,    60,    64,   184,   314,    70,  -193,    74,    37,   191,
    55,    77,   180,   105,    66,   nil,   nil,    87,    49,    75,
    57,    61,    60,    64,   nil,   nil,    70,   nil,   nil,   nil,
   nil,    55,    77,   nil,   nil,    66,   nil,   nil,    87,    74,
    75,    57,    61,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
    49,   nil,   nil,   nil,    60,    64,   nil,   nil,    70,   nil,
    74,   nil,   nil,    55,    77,   nil,   nil,    66,   nil,   nil,
    87,    49,    75,    57,    61,    60,    64,   nil,   nil,    70,
   nil,   nil,   nil,   nil,    55,    77,   nil,   nil,    66,   nil,
   nil,    87,    74,    75,    57,    61,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,    49,   nil,   nil,   nil,    60,    64,   nil,
   nil,    70,   nil,    74,   nil,   nil,    55,    77,   nil,   nil,
    66,   nil,   nil,    87,    49,    75,    57,    61,    60,    64,
   nil,   nil,    70,   nil,   nil,   nil,   nil,    55,    77,   nil,
   nil,    66,   nil,   nil,    87,    74,    75,    57,    61,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,    49,    75,    57,    61,
    60,    64,   nil,   nil,    70,   nil,    74,   nil,   nil,    55,
    77,   nil,   nil,    66,   nil,   nil,    87,    49,    75,    57,
    61,    60,    64,   nil,   nil,    70,   nil,   nil,    49,   nil,
    55,    77,    60,    64,    66,   nil,    70,    87,    74,   nil,
   nil,    55,    75,    57,    61,    66,   nil,   nil,   nil,    49,
   nil,   nil,   nil,    60,    64,   nil,   nil,    70,    75,    57,
    61,   138,    55,    77,   nil,   nil,    66,   nil,   nil,    87,
   nil,   nil,   nil,    49,    75,    57,    61,    60,   211,   nil,
   nil,    70,   nil,   nil,   nil,   nil,   162,   nil,   nil,    49,
    66,   nil,   nil,    60,    64,   nil,   nil,    70,    75,    57,
    61,   nil,    55,   nil,   nil,    49,    66,   nil,   nil,    60,
   169,   nil,   nil,    70,   nil,   nil,   nil,   nil,   162,    54,
    57,    61,    66,   nil,   nil,    75,    57,    61,   nil,    49,
   nil,   nil,   nil,    60,    64,   nil,   nil,    70,   nil,    51,
   nil,   nil,    55,    75,    57,    61,    66,   nil,   nil,   nil,
    49,   nil,   nil,   nil,    60,    64,    49,   nil,    70,   nil,
    60,    64,    52,    55,    70,   nil,   nil,    66,   nil,    55,
    75,    57,    61,    66,    49,   nil,   nil,   nil,    60,    64,
   nil,   nil,    70,   nil,    75,    57,    61,    55,   nil,   nil,
   nil,    66,   nil,   nil,    75,    57,    61,   nil,   nil,   nil,
   nil,    49,   nil,   nil,   nil,    60,    64,   nil,   nil,    70,
    75,    57,    61,   nil,    55,    49,   nil,   nil,    66,    60,
    64,    57,    61,    70,   nil,    49,   nil,   nil,    55,    60,
    64,   nil,    66,    70,    75,    57,    61,   nil,    55,   nil,
   nil,    49,    66,   nil,   nil,    60,    64,   nil,   nil,    70,
   nil,    49,   nil,   nil,    55,    60,   211,   nil,    66,    70,
    57,    61,   nil,   nil,   162,    49,    57,    61,    66,    60,
    64,   nil,   nil,    70,   nil,   nil,    57,    61,    55,   nil,
   nil,   nil,    66,   nil,   nil,   nil,   273,    57,    61,   nil,
    49,   nil,   nil,   nil,    60,   211,    49,   nil,    70,   nil,
    60,    64,   nil,   162,    70,   nil,    49,    66,    52,    55,
    60,   211,   nil,    66,    70,    57,    61,    49,   nil,   162,
   nil,    60,   211,    66,   nil,    70,    57,    61,   nil,   nil,
   162,   nil,   nil,   nil,    66,   131,    57,    61,   nil,   nil,
   283,   nil,    57,    61,   nil,    49,   nil,   nil,   nil,    60,
    64,   nil,   nil,    70,   nil,   nil,    49,    52,    55,   nil,
    60,    64,    66,   nil,    70,   nil,    49,   nil,    52,    55,
    60,   211,    49,    66,    70,   nil,    60,   211,   nil,   162,
    70,    57,    61,    66,   nil,   162,   nil,    57,    61,    66,
   212,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,    57,    61,   nil,   nil,   nil,   nil,   nil,
   nil,    49,   nil,   nil,   nil,    60,   211,    49,   nil,    70,
   nil,    60,   211,   207,   162,    70,   nil,   nil,    66,   nil,
   162,   nil,   nil,    49,    66,   nil,   nil,    60,    64,   nil,
   nil,    70,   146,   150,   nil,    52,    55,   nil,   nil,   nil,
    66,   142,   144,   147,   149,   146,   150,   nil,   nil,   nil,
   nil,   146,   150,   217,   142,   144,   147,   149,   nil,   nil,
   142,   144,   147,   149,   nil,   145,   148,   nil,   nil,   152,
   153,   154,   140,   141,   143,   nil,   nil,   nil,   145,   148,
   nil,   nil,   152,   153,   154,   140,   141,   143,   152,   153,
   154,   140,   141,   143,   146,   150,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   142,   144,   147,   149,   146,   150,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   142,   144,   147,   149,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   148,   297,
   nil,   152,   153,   154,   140,   141,   143,   nil,   nil,   nil,
   145,   148,   nil,   nil,   152,   153,   154,   140,   141,   143,
    16,   292,    23,    26,   nil,     1,     4,   nil,     9,   nil,
    13,   nil,    20,   nil,    27,   nil,   nil,     3,     6,   nil,
   298,   nil,    16,   nil,    23,    26,   nil,     1,     4,   nil,
     9,   nil,    13,   nil,    20,   nil,    27,   nil,   nil,     3,
     6,    16,   311,    23,    26,   nil,     1,     4,   nil,     9,
   nil,    13,   nil,    20,   nil,    27,   nil,   nil,     3,     6,
   nil,   279,   nil,    16,   nil,    23,    26,   nil,     1,     4,
   nil,     9,   nil,    13,   nil,    20,   nil,    27,   nil,   nil,
     3,     6,    16,   258,    23,    26,   nil,     1,     4,   nil,
     9,   nil,    13,   nil,    20,   nil,    27,   nil,   nil,     3,
     6,   nil,   316,   nil,    16,   nil,    23,    26,   nil,     1,
     4,   nil,     9,   nil,    13,   nil,    20,   nil,    27,   nil,
   nil,     3,     6,    16,   318,    23,    26,   nil,     1,     4,
   nil,     9,   nil,    13,   nil,    20,   nil,    27,   nil,   nil,
     3,     6,   nil,   232,   nil,    16,   nil,    23,    26,   nil,
     1,     4,   nil,     9,   nil,    13,   nil,    20,   nil,    27,
   nil,   nil,     3,     6,    16,   319,    23,    26,   nil,     1,
     4,   nil,     9,   nil,    13,   nil,    20,   nil,    27,   nil,
   nil,     3,     6,   nil,   252,   nil,    16,   nil,    23,    26,
   nil,     1,     4,   nil,     9,   nil,    13,   nil,    20,   nil,
    27,   nil,   nil,     3,     6,    16,   320,    23,    26,   nil,
     1,     4,   nil,     9,   nil,    13,   nil,    20,   nil,    27,
   nil,   nil,     3,     6,   nil,   nil,   nil,    16,   nil,    23,
    26,   nil,     1,     4,   nil,     9,   nil,    13,   nil,    20,
   nil,    27,   nil,   nil,     3,     6,    16,   nil,    23,    26,
   nil,     1,     4,   nil,     9,   nil,    13,   nil,    20,   nil,
    27,   nil,   nil,     3,     6,    16,   nil,    23,    26,   nil,
     1,     4,   nil,     9,   nil,    13,   nil,    20,   nil,    27,
   nil,   nil,     3,     6 ]

racc_action_check = [
    34,    34,    34,   193,   105,     9,     9,   238,    11,   126,
    64,   206,    11,   128,   290,   238,   249,   128,   128,   290,
    34,   154,   154,   154,   206,    11,   109,   109,   193,   193,
    64,    34,   112,   112,    39,    34,    34,   126,   126,    34,
     9,   154,   224,     9,    34,    34,   105,    48,    34,    11,
   224,    34,   154,   140,   140,   140,   154,   154,    48,    39,
   154,   109,    72,    48,   109,   154,   154,   112,    69,   154,
   112,   181,   154,   140,   141,   141,   141,   244,   224,   224,
   224,   224,   224,   224,   140,   121,   169,   182,   140,   140,
   244,   158,   140,   121,   141,   229,   158,   140,   140,   169,
   119,   140,   130,   229,   140,   141,    77,    77,    77,   141,
   141,   119,    68,   141,   101,   130,   119,   101,   141,   141,
    67,   101,   141,     4,   190,   141,    77,   142,   142,   142,
     4,   229,   229,   229,   229,   229,   229,    77,   191,    26,
   192,    77,    77,   276,   276,    77,    26,   142,   227,   174,
    77,    77,    65,    47,    77,   168,   227,    77,   142,    74,
    74,    74,   142,   142,    47,   167,   142,   233,   233,    47,
    62,   142,   142,   157,   157,   142,    23,    23,   142,    74,
   143,   143,   143,   166,   227,   227,   227,   227,   227,   227,
    74,   211,   132,    59,    74,    74,   132,   132,    74,   213,
   143,   226,   219,    74,    74,   164,   199,    74,   163,   226,
    74,   143,    16,    16,    16,   143,   143,   199,   161,   143,
     1,     1,   199,    58,   143,   143,   234,   234,   143,    55,
    50,   143,    16,   152,   152,   152,   159,   226,   226,   226,
   226,   226,   226,    16,    78,   137,    46,    16,    16,   137,
   137,    16,    79,   152,    17,    45,    16,    16,   232,    80,
    16,    17,    17,    16,   152,    81,    83,    85,   152,   152,
    84,   113,   152,   241,   242,   113,   113,   152,   152,    84,
    84,   152,   243,    89,   152,    37,   247,    36,    84,    84,
    84,    84,    73,   250,   150,   150,   150,   230,   230,   230,
   230,   230,   230,   222,   222,   222,   222,   222,   222,    30,
    27,   262,    84,    84,   150,   265,    84,    84,    84,    84,
    84,    84,   266,   267,   268,   150,    87,    87,    87,   150,
   150,   270,    90,   150,   223,   223,   223,   223,   150,   150,
    93,   279,   150,   281,   284,   150,    87,   149,   149,   149,
   221,   221,   221,   221,    94,    96,   102,    87,   106,    15,
   296,    87,    87,   110,   301,    87,   302,   149,     7,   115,
    87,    87,   116,   118,    87,   nil,   nil,    87,   149,   144,
   144,   144,   149,   149,   nil,   nil,   149,   nil,   nil,   nil,
   nil,   149,   149,   nil,   nil,   149,   nil,   nil,   149,   144,
   148,   148,   148,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   144,   nil,   nil,   nil,   144,   144,   nil,   nil,   144,   nil,
   148,   nil,   nil,   144,   144,   nil,   nil,   144,   nil,   nil,
   144,   148,    33,    33,    33,   148,   148,   nil,   nil,   148,
   nil,   nil,   nil,   nil,   148,   148,   nil,   nil,   148,   nil,
   nil,   148,    33,   153,   153,   153,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,    33,   nil,   nil,   nil,    33,    33,   nil,
   nil,    33,   nil,   153,   nil,   nil,    33,    33,   nil,   nil,
    33,   nil,   nil,    33,   153,   147,   147,   147,   153,   153,
   nil,   nil,   153,   nil,   nil,   nil,   nil,   153,   153,   nil,
   nil,   153,   nil,   nil,   153,   147,   145,   145,   145,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   147,    44,    44,    44,
   147,   147,   nil,   nil,   147,   nil,   145,   nil,   nil,   147,
   147,   nil,   nil,   147,   nil,   nil,   147,   145,   146,   146,
   146,   145,   145,   nil,   nil,   145,   nil,   nil,    44,   nil,
   145,   145,    44,    44,   145,   nil,    44,   145,   146,   nil,
   nil,    44,   248,   248,   248,    44,   nil,   nil,   nil,   146,
   nil,   nil,   nil,   146,   146,   nil,   nil,   146,    75,    75,
    75,    75,   146,   146,   nil,   nil,   146,   nil,   nil,   146,
   nil,   nil,   nil,   248,    98,    98,    98,   248,   248,   nil,
   nil,   248,   nil,   nil,   nil,   nil,   248,   nil,   nil,    75,
   248,   nil,   nil,    75,    75,   nil,   nil,    75,   277,   277,
   277,   nil,    75,   nil,   nil,    98,    75,   nil,   nil,    98,
    98,   nil,   nil,    98,   nil,   nil,   nil,   nil,    98,    13,
    13,    13,    98,   nil,   nil,   287,   287,   287,   nil,   277,
   nil,   nil,   nil,   277,   277,   nil,   nil,   277,   nil,    13,
   nil,   nil,   277,    54,    54,    54,   277,   nil,   nil,   nil,
    13,   nil,   nil,   nil,    13,    13,   287,   nil,    13,   nil,
   287,   287,    13,    13,   287,   nil,   nil,    13,   nil,   287,
   179,   179,   179,   287,    54,   nil,   nil,   nil,    54,    54,
   nil,   nil,    54,   nil,    20,    20,    20,    54,   nil,   nil,
   nil,    54,   nil,   nil,   180,   180,   180,   nil,   nil,   nil,
   nil,   179,   nil,   nil,   nil,   179,   179,   nil,   nil,   179,
   286,   286,   286,   nil,   179,    20,   nil,   nil,   179,    20,
    20,   195,   195,    20,   nil,   180,   nil,   nil,    20,   180,
   180,   nil,    20,   180,   186,   186,   186,   nil,   180,   nil,
   nil,   286,   180,   nil,   nil,   286,   286,   nil,   nil,   286,
   nil,   195,   nil,   nil,   286,   195,   195,   nil,   286,   195,
   194,   194,   nil,   nil,   195,   186,   204,   204,   195,   186,
   186,   nil,   nil,   186,   nil,   nil,   212,   212,   186,   nil,
   nil,   nil,   186,   nil,   nil,   nil,   204,   285,   285,   nil,
   194,   nil,   nil,   nil,   194,   194,   204,   nil,   194,   nil,
   204,   204,   nil,   194,   204,   nil,   212,   194,   204,   204,
   212,   212,   nil,   204,   212,    51,    51,   285,   nil,   212,
   nil,   285,   285,   212,   nil,   285,   129,   129,   nil,   nil,
   285,   nil,   nil,   nil,   285,    51,   236,   236,   nil,   nil,
   236,   nil,   300,   300,   nil,    51,   nil,   nil,   nil,    51,
    51,   nil,   nil,    51,   nil,   nil,   129,    51,    51,   nil,
   129,   129,    51,   nil,   129,   nil,   236,   nil,   129,   129,
   236,   236,   300,   129,   236,   nil,   300,   300,   nil,   236,
   300,   156,   156,   236,   nil,   300,   nil,   134,   134,   300,
   134,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   133,   133,   nil,   nil,   nil,   nil,   nil,
   nil,   156,   nil,   nil,   nil,   156,   156,   134,   nil,   156,
   nil,   134,   134,   133,   156,   134,   nil,   nil,   156,   nil,
   134,   nil,   nil,   133,   134,   nil,   nil,   133,   133,   nil,
   nil,   133,    99,    99,   nil,   133,   133,   nil,   nil,   nil,
   133,    99,    99,    99,    99,   136,   136,   nil,   nil,   nil,
   nil,   228,   228,   136,   136,   136,   136,   136,   nil,   nil,
   228,   228,   228,   228,   nil,    99,    99,   nil,   nil,    99,
    99,    99,    99,    99,    99,   nil,   nil,   nil,   136,   136,
   nil,   nil,   136,   136,   136,   136,   136,   136,   228,   228,
   228,   228,   228,   228,   225,   225,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   225,   225,   225,   225,   100,   100,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   100,   100,   100,   100,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   225,   251,
   nil,   225,   225,   225,   225,   225,   225,   nil,   nil,   nil,
   100,   100,   nil,   nil,   100,   100,   100,   100,   100,   100,
   251,   246,   251,   251,   nil,   251,   251,   nil,   251,   nil,
   251,   nil,   251,   nil,   251,   nil,   nil,   251,   251,   nil,
   257,   nil,   246,   nil,   246,   246,   nil,   246,   246,   nil,
   246,   nil,   246,   nil,   246,   nil,   246,   nil,   nil,   246,
   246,   257,   291,   257,   257,   nil,   257,   257,   nil,   257,
   nil,   257,   nil,   257,   nil,   257,   nil,   nil,   257,   257,
   nil,   231,   nil,   291,   nil,   291,   291,   nil,   291,   291,
   nil,   291,   nil,   291,   nil,   291,   nil,   291,   nil,   nil,
   291,   291,   231,   184,   231,   231,   nil,   231,   231,   nil,
   231,   nil,   231,   nil,   231,   nil,   231,   nil,   nil,   231,
   231,   nil,   305,   nil,   184,   nil,   184,   184,   nil,   184,
   184,   nil,   184,   nil,   184,   nil,   184,   nil,   184,   nil,
   nil,   184,   184,   305,   306,   305,   305,   nil,   305,   305,
   nil,   305,   nil,   305,   nil,   305,   nil,   305,   nil,   nil,
   305,   305,   nil,   151,   nil,   306,   nil,   306,   306,   nil,
   306,   306,   nil,   306,   nil,   306,   nil,   306,   nil,   306,
   nil,   nil,   306,   306,   151,   315,   151,   151,   nil,   151,
   151,   nil,   151,   nil,   151,   nil,   151,   nil,   151,   nil,
   nil,   151,   151,   nil,   178,   nil,   315,   nil,   315,   315,
   nil,   315,   315,   nil,   315,   nil,   315,   nil,   315,   nil,
   315,   nil,   nil,   315,   315,   178,   317,   178,   178,   nil,
   178,   178,   nil,   178,   nil,   178,   nil,   178,   nil,   178,
   nil,   nil,   178,   178,   nil,   nil,   nil,   317,   nil,   317,
   317,   nil,   317,   317,   nil,   317,   nil,   317,   nil,   317,
   nil,   317,   nil,   nil,   317,   317,    19,   nil,    19,    19,
   nil,    19,    19,   nil,    19,   nil,    19,   nil,    19,   nil,
    19,   nil,   nil,    19,    19,     0,   nil,     0,     0,   nil,
     0,     0,   nil,     0,   nil,     0,   nil,     0,   nil,     0,
   nil,   nil,     0,     0 ]

racc_action_pointer = [
  1317,   207,   nil,   nil,    85,   nil,   nil,   362,   nil,     2,
   nil,     6,   nil,   637,   nil,   359,   210,   216,   nil,  1298,
   702,   nil,   nil,   173,   nil,   nil,   101,   268,   nil,   nil,
   303,   nil,   nil,   430,    -2,   nil,   252,   247,   nil,    24,
   nil,   nil,   nil,   nil,   515,   217,   240,   131,    25,   nil,
   220,   832,   nil,   nil,   661,   227,   nil,   nil,   202,   191,
   nil,   nil,   149,   nil,     8,   131,   nil,    99,    91,    47,
   nil,   nil,    41,   292,   157,   576,   nil,   104,   223,   231,
   238,   244,   nil,   245,   264,   246,   nil,   324,   nil,   262,
   326,   nil,   nil,   334,   344,   nil,   333,   nil,   592,   947,
  1022,    76,   350,   nil,   nil,    -5,   348,   nil,   nil,    23,
   357,   nil,    29,   266,   nil,   359,   363,   nil,   335,    78,
   nil,    69,   nil,   nil,   nil,   nil,   -11,   nil,   -31,   843,
    92,   nil,   187,   920,   904,   nil,   960,   240,   nil,   nil,
    51,    72,   125,   178,   377,   504,   536,   483,   398,   345,
   292,  1216,   231,   451,    19,   nil,   898,   170,    58,   230,
   nil,   179,   nil,   198,   184,   nil,   162,   147,   134,    77,
   nil,   nil,   nil,   nil,   128,   nil,   nil,   nil,  1257,   688,
   712,    64,    49,   nil,  1156,   nil,   752,   nil,   nil,   nil,
   117,   100,   130,   -20,   777,   738,   nil,   nil,   nil,   184,
   nil,   nil,   nil,   nil,   783,   nil,     1,   nil,   nil,   nil,
   nil,   169,   793,   190,   nil,   nil,   nil,   nil,   nil,   197,
   nil,   298,   251,   282,    26,  1009,   185,   132,   966,    79,
   245,  1134,   229,   113,   172,   nil,   853,   nil,    -3,   nil,
   nil,   260,   261,   259,    67,   nil,  1074,   279,   560,     9,
   255,  1052,   nil,   nil,   nil,   nil,   nil,  1093,   nil,   nil,
   nil,   nil,   304,   nil,   nil,   294,   301,   302,   303,   nil,
   310,   nil,   nil,   nil,   nil,   nil,   134,   616,   nil,   312,
   nil,   337,   nil,   nil,   338,   804,   728,   643,   nil,   nil,
   -19,  1115,   nil,   nil,   nil,   nil,   350,   nil,   nil,   nil,
   859,   357,   359,   nil,   nil,  1175,  1197,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,  1238,   nil,  1279,   nil,   nil,
   nil ]

racc_action_default = [
  -169,  -194,    -7,  -162,  -194,    -8,  -160,  -194,    -9,  -194,
   -10,  -194,   -11,  -161,   -12,  -194,  -194,  -194,   -13,    -1,
  -194,   -14,    -2,  -194,   -15,    -3,  -194,   -39,   -16,    -5,
  -194,   -17,    -6,  -194,  -194,  -161,  -169,   -79,  -167,  -169,
  -166,  -165,  -163,  -168,  -194,   -72,   -42,  -169,  -169,  -186,
   -21,  -194,   -33,   -22,  -194,   -63,   -23,  -102,   -26,  -194,
  -104,  -103,   -27,  -149,   -62,   -28,   -61,   -29,  -194,   -30,
  -150,   -31,   -32,  -194,  -194,  -194,   -97,  -194,   -91,   -95,
   -99,   -92,   -96,   -93,  -194,   -98,   -94,  -194,  -112,   -90,
  -194,   -38,    -4,  -194,  -153,  -151,  -169,   -40,   -72,   -70,
   -71,  -194,  -194,  -182,   -80,  -194,  -192,   -77,   -78,  -194,
  -194,  -180,  -194,  -194,   -82,  -192,  -194,   -73,   -79,  -169,
   -48,  -194,   -55,   -54,   -62,   -45,  -194,   -46,  -194,  -194,
  -194,   -20,  -194,  -194,  -194,   321,  -194,  -194,  -189,  -126,
  -194,  -194,  -194,  -194,  -194,  -194,  -194,  -194,  -194,  -194,
  -194,  -194,  -194,  -194,  -194,  -119,  -194,  -194,  -170,  -194,
  -171,   -59,   -63,  -192,   -65,   -57,   -68,  -194,   -66,   -62,
  -148,   -69,  -147,   -67,   -64,  -185,  -183,  -184,  -194,  -194,
  -194,  -194,  -193,  -181,  -194,  -164,  -194,  -106,  -190,  -191,
  -194,  -193,  -192,  -194,  -194,  -194,   -51,   -50,   -44,  -194,
   -43,   -24,   -25,   -18,  -194,  -105,  -194,  -101,  -143,  -146,
  -144,   -62,  -194,  -194,  -137,  -145,  -138,  -129,  -187,  -191,
  -115,  -117,  -121,  -118,  -123,  -128,  -125,  -122,  -127,  -124,
  -120,  -194,  -109,  -113,  -114,  -116,  -194,  -131,  -194,  -135,
  -152,  -179,  -177,  -194,  -194,  -174,  -194,  -194,   -60,  -194,
   -72,  -194,  -157,   -76,   -75,   -37,   -81,  -194,  -159,   -83,
   -36,   -74,  -194,   -49,   -52,   -85,   -89,   -86,   -87,   -88,
   -84,   -53,   -47,   -19,  -100,  -140,  -192,  -194,  -188,  -109,
  -108,  -194,  -132,  -130,  -194,  -194,  -194,  -194,  -172,  -173,
  -194,  -194,  -155,   -34,   -58,   -35,  -192,  -156,  -158,   -41,
  -194,  -194,  -191,  -142,  -107,  -194,  -194,  -136,  -178,  -176,
  -175,  -154,   -56,  -141,  -139,  -194,  -111,  -194,  -134,  -110,
  -133 ]

racc_goto_table = [
    11,    92,   216,     7,    93,   115,   181,    19,    50,   213,
   245,   117,   165,    58,    42,   190,    56,    90,    36,    11,
   106,   171,     7,   237,    63,   201,   280,    71,   114,   113,
    22,   239,   126,   128,   264,   271,    15,   300,   114,   132,
    96,   256,   236,   272,    46,   214,   130,   122,   122,   247,
   276,    58,    94,   159,    56,   102,    39,   110,   163,   114,
   137,   161,    63,   249,   117,    71,   103,   243,   244,   111,
    91,   176,   nil,   304,   nil,   nil,   nil,   nil,   nil,   nil,
   275,   nil,   nil,   nil,   nil,   nil,   nil,   213,   nil,   nil,
   nil,   nil,   262,   nil,   nil,   nil,   nil,   nil,   164,   nil,
   201,   192,   nil,   282,   193,   nil,   nil,   nil,   nil,    63,
   nil,   239,   173,   nil,   183,   177,   nil,   185,   nil,   122,
   nil,   nil,   nil,   nil,   nil,   nil,   160,   nil,   206,    58,
   nil,   nil,   202,    58,   208,   nil,    56,   nil,   nil,   nil,
    63,   nil,   310,    71,    63,    63,   nil,    71,   nil,   nil,
   nil,    11,   nil,   nil,     7,   nil,   208,   261,   231,    72,
   307,   nil,   294,   253,   254,   nil,   nil,    63,   313,    95,
   259,   171,   nil,   nil,   nil,   213,   301,   nil,    11,   nil,
   nil,     7,   nil,   nil,    11,   251,   nil,     7,   nil,   nil,
   nil,   257,   nil,   nil,   265,   265,   312,    72,   nil,   122,
   nil,   nil,   nil,   nil,    58,    63,    63,   202,   269,   269,
   296,   nil,   208,    92,   nil,    63,   117,   nil,    71,   nil,
   nil,   nil,   nil,    63,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,    11,   nil,    92,     7,   nil,   208,   nil,   nil,    92,
   nil,   nil,   nil,    67,   174,    69,    11,    63,   164,     7,
   nil,    11,   nil,   291,     7,   nil,   nil,    11,   nil,    63,
     7,   303,   173,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   308,   309,   nil,    92,   nil,    72,   nil,   nil,   nil,    72,
   215,    67,   nil,    69,   nil,   208,   nil,   nil,   nil,   nil,
   nil,    11,   nil,   nil,     7,   nil,    63,    92,   nil,    92,
   208,   nil,   215,   240,   nil,    11,    11,   nil,     7,     7,
   nil,    63,   315,   317,   nil,    11,   nil,    11,     7,   nil,
     7,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   170,   nil,
   172,   nil,    65,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   270,   270,   nil,    62,   nil,   nil,   nil,   nil,   nil,   nil,
    72,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   215,    67,
   nil,    69,   nil,    67,   170,    69,   172,   nil,   nil,   nil,
    65,   nil,    84,   nil,   nil,   nil,   nil,   123,   123,   nil,
   nil,    62,   215,   nil,   nil,   nil,   170,   nil,   172,    99,
   100,   nil,   nil,   nil,   174,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   168,   nil,   nil,
   nil,   nil,   nil,   nil,   268,   268,   172,   172,   166,   nil,
   136,   215,   nil,   139,    67,   nil,    69,   nil,   nil,   nil,
   nil,   nil,   170,   155,   172,   nil,   215,   nil,    65,   123,
   nil,   nil,    65,   210,   nil,   nil,   nil,   nil,   nil,    62,
   nil,   nil,   nil,    62,   209,   nil,   170,   nil,   172,   nil,
   nil,   nil,   nil,   nil,   nil,   210,   nil,   nil,   170,   nil,
   172,   nil,   nil,   nil,   nil,   nil,   209,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   220,   221,   222,   223,
   224,   225,   226,   227,   228,   229,   230,   nil,   233,   234,
   235,   nil,   nil,   267,   267,   170,   nil,   172,   nil,   nil,
   nil,   nil,   nil,    65,   266,   266,   nil,   nil,   nil,   123,
   170,   210,   172,   nil,    62,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   209,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   210,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   209,   168,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   166,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   210,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   209,   nil,   nil,   nil,   210,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   209 ]

racc_goto_check = [
    33,     4,    60,    20,    49,    31,    32,     2,    18,    58,
    70,    48,    43,    21,    67,    32,    20,    33,    28,    33,
    34,    46,    20,    56,    45,    19,    54,    26,    49,    52,
     3,    58,    37,    37,    42,    42,     1,    53,    49,    52,
    28,    51,    55,    38,    36,    59,    18,    21,    21,    30,
    61,    21,    62,    63,    20,    64,    65,    66,    31,    49,
    52,    29,    45,    32,    48,    26,     3,    68,    69,     3,
     5,    71,   nil,    54,   nil,   nil,   nil,   nil,   nil,   nil,
    60,   nil,   nil,   nil,   nil,   nil,   nil,    58,   nil,   nil,
   nil,   nil,    32,   nil,   nil,   nil,   nil,   nil,    21,   nil,
    19,    34,   nil,    56,    37,   nil,   nil,   nil,   nil,    45,
   nil,    58,    26,   nil,    67,    28,   nil,    67,   nil,    21,
   nil,   nil,   nil,   nil,   nil,   nil,     3,   nil,    18,    21,
   nil,   nil,    20,    21,    21,   nil,    20,   nil,   nil,   nil,
    45,   nil,    70,    26,    45,    45,   nil,    26,   nil,   nil,
   nil,    33,   nil,   nil,    20,   nil,    21,    48,     2,    27,
    58,   nil,    43,    49,    49,   nil,   nil,    45,    60,    27,
    49,    46,   nil,   nil,   nil,    58,    32,   nil,    33,   nil,
   nil,    20,   nil,   nil,    33,     2,   nil,    20,   nil,   nil,
   nil,     2,   nil,   nil,    21,    21,    32,    27,   nil,    21,
   nil,   nil,   nil,   nil,    21,    45,    45,    20,    26,    26,
    31,   nil,    21,     4,   nil,    45,    48,   nil,    26,   nil,
   nil,   nil,   nil,    45,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,    33,   nil,     4,    20,   nil,    21,   nil,   nil,     4,
   nil,   nil,   nil,    24,    27,    25,    33,    45,    21,    20,
   nil,    33,   nil,     2,    20,   nil,   nil,    33,   nil,    45,
    20,    49,    26,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
    49,    49,   nil,     4,   nil,    27,   nil,   nil,   nil,    27,
    27,    24,   nil,    25,   nil,    21,   nil,   nil,   nil,   nil,
   nil,    33,   nil,   nil,    20,   nil,    45,     4,   nil,     4,
    21,   nil,    27,    27,   nil,    33,    33,   nil,    20,    20,
   nil,    45,     2,     2,   nil,    33,   nil,    33,    20,   nil,
    20,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    24,   nil,
    25,   nil,    23,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
    27,    27,   nil,    22,   nil,   nil,   nil,   nil,   nil,   nil,
    27,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    27,    24,
   nil,    25,   nil,    24,    24,    25,    25,   nil,   nil,   nil,
    23,   nil,    47,   nil,   nil,   nil,   nil,    22,    22,   nil,
   nil,    22,    27,   nil,   nil,   nil,    24,   nil,    25,    47,
    47,   nil,   nil,   nil,    27,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,    23,   nil,   nil,
   nil,   nil,   nil,   nil,    24,    24,    25,    25,    22,   nil,
    47,    27,   nil,    47,    24,   nil,    25,   nil,   nil,   nil,
   nil,   nil,    24,    47,    25,   nil,    27,   nil,    23,    22,
   nil,   nil,    23,    23,   nil,   nil,   nil,   nil,   nil,    22,
   nil,   nil,   nil,    22,    22,   nil,    24,   nil,    25,   nil,
   nil,   nil,   nil,   nil,   nil,    23,   nil,   nil,    24,   nil,
    25,   nil,   nil,   nil,   nil,   nil,    22,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,    47,    47,    47,    47,
    47,    47,    47,    47,    47,    47,    47,   nil,    47,    47,
    47,   nil,   nil,    23,    23,    24,   nil,    25,   nil,   nil,
   nil,   nil,   nil,    23,    22,    22,   nil,   nil,   nil,    22,
    24,    23,    25,   nil,    22,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,    22,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,    23,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,    22,    23,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    22,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,    23,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,    22,   nil,   nil,   nil,    23,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
    22 ]

racc_goto_pointer = [
   nil,    36,     7,    30,   -18,    53,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    -5,  -104,
     3,     0,   330,   319,   230,   232,    14,   146,    14,   -37,
  -112,   -40,  -100,     0,   -17,   nil,    33,   -15,  -156,   nil,
   nil,   nil,  -160,   -86,   nil,    11,   -77,   356,   -34,   -16,
   nil,  -141,   -15,  -239,  -206,  -114,  -133,   nil,  -125,   -89,
  -132,  -162,    29,   -43,    19,    47,    18,     5,   -91,   -90,
  -148,   -30 ]

racc_goto_default = [
   nil,   nil,   nil,   125,    25,    29,    32,     2,     5,     8,
    10,    12,    14,    18,    21,    24,    28,    31,   nil,    53,
    76,    78,    79,    81,    83,    85,    86,    89,    30,   nil,
   nil,   nil,   nil,    59,   nil,    17,   nil,   nil,   127,   199,
   120,   121,   nil,   nil,   167,    80,    82,   nil,   107,    88,
   108,   104,   nil,   186,   nil,   nil,   nil,   238,    68,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil ]

racc_token_table = {
 false => 0,
 Object.new => 1,
 :LBRACK => 2,
 :DQTEXT => 3,
 :SQTEXT => 4,
 :RBRACK => 5,
 :LBRACE => 6,
 :RBRACE => 7,
 :SYMBOL => 8,
 :FARROW => 9,
 :COMMA => 10,
 :TRUE => 11,
 :FALSE => 12,
 :EQUALS => 13,
 :APPENDS => 14,
 :LESSEQUAL => 15,
 :NOTEQUAL => 16,
 :DOT => 17,
 :COLON => 18,
 :LLCOLLECT => 19,
 :RRCOLLECT => 20,
 :QMARK => 21,
 :LPAREN => 22,
 :RPAREN => 23,
 :ISEQUAL => 24,
 :GREATEREQUAL => 25,
 :GREATERTHAN => 26,
 :LESSTHAN => 27,
 :IF => 28,
 :ELSE => 29,
 :IMPORT => 30,
 :DEFINE => 31,
 :ELSIF => 32,
 :VARIABLE => 33,
 :CLASS => 34,
 :INHERITS => 35,
 :NODE => 36,
 :BOOLEAN => 37,
 :NAME => 38,
 :SEMIC => 39,
 :CASE => 40,
 :DEFAULT => 41,
 :AT => 42,
 :LCOLLECT => 43,
 :RCOLLECT => 44,
 :CLASSNAME => 45,
 :CLASSREF => 46,
 :NOT => 47,
 :OR => 48,
 :AND => 49,
 :UNDEF => 50,
 :PARROW => 51,
 :PLUS => 52,
 :MINUS => 53,
 :TIMES => 54,
 :DIV => 55,
 :LSHIFT => 56,
 :RSHIFT => 57,
 :UMINUS => 58 }

racc_use_result_var = true

racc_nt_base = 59

Racc_arg = [
 racc_action_table,
 racc_action_check,
 racc_action_default,
 racc_action_pointer,
 racc_goto_table,
 racc_goto_check,
 racc_goto_default,
 racc_goto_pointer,
 racc_nt_base,
 racc_reduce_table,
 racc_token_table,
 racc_shift_n,
 racc_reduce_n,
 racc_use_result_var ]

Racc_token_to_s_table = [
'$end',
'error',
'LBRACK',
'DQTEXT',
'SQTEXT',
'RBRACK',
'LBRACE',
'RBRACE',
'SYMBOL',
'FARROW',
'COMMA',
'TRUE',
'FALSE',
'EQUALS',
'APPENDS',
'LESSEQUAL',
'NOTEQUAL',
'DOT',
'COLON',
'LLCOLLECT',
'RRCOLLECT',
'QMARK',
'LPAREN',
'RPAREN',
'ISEQUAL',
'GREATEREQUAL',
'GREATERTHAN',
'LESSTHAN',
'IF',
'ELSE',
'IMPORT',
'DEFINE',
'ELSIF',
'VARIABLE',
'CLASS',
'INHERITS',
'NODE',
'BOOLEAN',
'NAME',
'SEMIC',
'CASE',
'DEFAULT',
'AT',
'LCOLLECT',
'RCOLLECT',
'CLASSNAME',
'CLASSREF',
'NOT',
'OR',
'AND',
'UNDEF',
'PARROW',
'PLUS',
'MINUS',
'TIMES',
'DIV',
'LSHIFT',
'RSHIFT',
'UMINUS',
'$start',
'program',
'statements',
'nil',
'statement',
'resource',
'virtualresource',
'collection',
'assignment',
'casestatement',
'ifstatement',
'import',
'fstatement',
'definition',
'hostclass',
'nodedef',
'resourceoverride',
'append',
'funcvalues',
'namestring',
'resourceref',
'name',
'variable',
'type',
'boolean',
'funcrvalue',
'selector',
'quotedtext',
'classname',
'resourceinstances',
'endsemi',
'params',
'endcomma',
'classref',
'anyparams',
'at',
'collectrhand',
'collstatements',
'collstatement',
'colljoin',
'collexpr',
'colllval',
'simplervalue',
'resourceinst',
'resourcename',
'undef',
'array',
'expression',
'param',
'rvalue',
'addparam',
'anyparam',
'rvalues',
'comma',
'else',
'caseopts',
'caseopt',
'casevalues',
'selectlhand',
'svalues',
'selectval',
'sintvalues',
'qtexts',
'argumentlist',
'classparent',
'hostnames',
'nodeparent',
'hostname',
'nothing',
'arguments',
'argument',
'classnameordefault']

Racc_debug_parser = false

##### racc system variables end #####

 # reduce 0 omitted

module_eval <<'.,.,', 'grammar.ra', 42
  def _reduce_1( val, _values, result )
    if val[0]
        # Make sure we always return an array.
        if val[0].is_a?(AST::ASTArray)
            if val[0].children.empty?
                result = nil
            else
                result = val[0]
            end
        else
            result = aryfy(val[0])
        end
    else
        result = nil
    end
   result
  end
.,.,

 # reduce 2 omitted

 # reduce 3 omitted

module_eval <<'.,.,', 'grammar.ra', 58
  def _reduce_4( val, _values, result )
    if val[0] and val[1]
        if val[0].instance_of?(AST::ASTArray)
            val[0].push(val[1])
            result = val[0]
        else
            result = ast AST::ASTArray, :children => [val[0],val[1]]
        end
    elsif obj = (val[0] || val[1])
        result = obj
    else result = nil
    end
   result
  end
.,.,

 # reduce 5 omitted

 # reduce 6 omitted

 # reduce 7 omitted

 # reduce 8 omitted

 # reduce 9 omitted

 # reduce 10 omitted

 # reduce 11 omitted

 # reduce 12 omitted

 # reduce 13 omitted

 # reduce 14 omitted

 # reduce 15 omitted

 # reduce 16 omitted

 # reduce 17 omitted

module_eval <<'.,.,', 'grammar.ra', 82
  def _reduce_18( val, _values, result )
    args = aryfy(val[2])
    result = ast AST::Function,
        :name => val[0][:value],
        :line => val[0][:line],
        :arguments => args,
        :ftype => :statement
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 90
  def _reduce_19( val, _values, result )
    args = aryfy(val[2])
    result = ast AST::Function,
        :name => val[0][:value],
        :line => val[0][:line],
        :arguments => args,
        :ftype => :statement
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 96
  def _reduce_20( val, _values, result )
    result = ast AST::Function,
        :name => val[0][:value],
        :line => val[0][:line],
        :arguments => AST::ASTArray.new({}),
        :ftype => :statement
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 104
  def _reduce_21( val, _values, result )
    args = aryfy(val[1])
    result = ast AST::Function,
        :name => val[0][:value],
        :line => val[0][:line],
        :arguments => args,
        :ftype => :statement
   result
  end
.,.,

 # reduce 22 omitted

 # reduce 23 omitted

module_eval <<'.,.,', 'grammar.ra', 112
  def _reduce_24( val, _values, result )
    result = aryfy(val[0], val[2])
    result.line = @lexer.line
    result.file = @lexer.file
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 121
  def _reduce_25( val, _values, result )
    unless val[0].is_a?(AST::ASTArray)
        val[0] = aryfy(val[0])
    end

    val[0].push(val[2])

    result = val[0]
   result
  end
.,.,

 # reduce 26 omitted

 # reduce 27 omitted

 # reduce 28 omitted

 # reduce 29 omitted

 # reduce 30 omitted

 # reduce 31 omitted

 # reduce 32 omitted

module_eval <<'.,.,', 'grammar.ra', 134
  def _reduce_33( val, _values, result )
                    result = ast AST::Name, :value => val[0][:value]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 156
  def _reduce_34( val, _values, result )
    @lexer.commentpop
    array = val[2]
    if array.instance_of?(AST::ResourceInstance)
        array = [array]
    end
    result = ast AST::ASTArray

    # this iterates across each specified resourceinstance
    array.each { |instance|
        unless instance.instance_of?(AST::ResourceInstance)
            raise Puppet::Dev, "Got something that isn't an instance"
        end
        # now, i need to somehow differentiate between those things with
        # arrays in their names, and normal things
        result.push ast(AST::Resource,
            :type => val[0],
            :title => instance[0],
            :params => instance[1])
    }
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 159
  def _reduce_35( val, _values, result )
    # This is a deprecated syntax.
    error "All resource specifications require names"
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 162
  def _reduce_36( val, _values, result )
    # a defaults setting for a type
    result = ast(AST::ResourceDefaults, :type => val[0], :params => val[2])
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 168
  def _reduce_37( val, _values, result )
    @lexer.commentpop
    result = ast AST::ResourceOverride, :object => val[0], :params => val[2]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 195
  def _reduce_38( val, _values, result )
    type = val[0]

    if (type == :exported and ! Puppet[:storeconfigs]) and ! Puppet[:parseonly]
        Puppet.warning addcontext("You cannot collect without storeconfigs being set")
    end

    if val[1].is_a? AST::ResourceDefaults
        error "Defaults are not virtualizable"
    end

    method = type.to_s + "="

    # Just mark our resources as exported and pass them through.
    if val[1].instance_of?(AST::ASTArray)
        val[1].each do |obj|
            obj.send(method, true)
        end
    else
        val[1].send(method, true)
    end

    result = val[1]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 196
  def _reduce_39( val, _values, result )
 result = :virtual
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 197
  def _reduce_40( val, _values, result )
 result = :exported
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 221
  def _reduce_41( val, _values, result )
    if val[0] =~ /^[a-z]/
        Puppet.warning addcontext("Collection names must now be capitalized")
    end
    type = val[0].downcase
    args = {:type => type}

    if val[1].is_a?(AST::CollExpr)
        args[:query] = val[1]
        args[:query].type = type
        args[:form] = args[:query].form
    else
        args[:form] = val[1]
    end
    if args[:form] == :exported and ! Puppet[:storeconfigs] and ! Puppet[:parseonly]
        Puppet.warning addcontext("You cannot collect exported resources without storeconfigs being set; the collection will be ignored")
    end
    args[:override] = val[3]
    result = ast AST::Collection, args
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 240
  def _reduce_42( val, _values, result )
    if val[0] =~ /^[a-z]/
        Puppet.warning addcontext("Collection names must now be capitalized")
    end
    type = val[0].downcase
    args = {:type => type }

    if val[1].is_a?(AST::CollExpr)
        args[:query] = val[1]
        args[:query].type = type
        args[:form] = args[:query].form
    else
        args[:form] = val[1]
    end
    if args[:form] == :exported and ! Puppet[:storeconfigs] and ! Puppet[:parseonly]
        Puppet.warning addcontext("You cannot collect exported resources without storeconfigs being set; the collection will be ignored")
    end
    result = ast AST::Collection, args
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 250
  def _reduce_43( val, _values, result )
    if val[1]
        result = val[1]
        result.form = :virtual
    else
        result = :virtual
    end
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 258
  def _reduce_44( val, _values, result )
    if val[1]
        result = val[1]
        result.form = :exported
    else
        result = :exported
    end
   result
  end
.,.,

 # reduce 45 omitted

 # reduce 46 omitted

module_eval <<'.,.,', 'grammar.ra', 266
  def _reduce_47( val, _values, result )
    result = ast AST::CollExpr, :test1 => val[0], :oper => val[1], :test2 => val[2]
   result
  end
.,.,

 # reduce 48 omitted

module_eval <<'.,.,', 'grammar.ra', 272
  def _reduce_49( val, _values, result )
    result = val[1]
    result.parens = true
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 273
  def _reduce_50( val, _values, result )
 result=val[0][:value]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 274
  def _reduce_51( val, _values, result )
 result=val[0][:value]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 281
  def _reduce_52( val, _values, result )
    result = ast AST::CollExpr, :test1 => val[0], :oper => val[1][:value], :test2 => val[2]
    #result = ast AST::CollExpr
    #result.push *val
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 286
  def _reduce_53( val, _values, result )
    result = ast AST::CollExpr, :test1 => val[0], :oper => val[1][:value], :test2 => val[2]
    #result = ast AST::CollExpr
    #result.push *val
   result
  end
.,.,

 # reduce 54 omitted

 # reduce 55 omitted

module_eval <<'.,.,', 'grammar.ra', 293
  def _reduce_56( val, _values, result )
    result = ast AST::ResourceInstance, :children => [val[0],val[2]]
   result
  end
.,.,

 # reduce 57 omitted

module_eval <<'.,.,', 'grammar.ra', 303
  def _reduce_58( val, _values, result )
    if val[0].instance_of?(AST::ResourceInstance)
        result = ast AST::ASTArray, :children => [val[0],val[2]]
    else
        val[0].push val[2]
        result = val[0]
    end
   result
  end
.,.,

 # reduce 59 omitted

 # reduce 60 omitted

module_eval <<'.,.,', 'grammar.ra', 310
  def _reduce_61( val, _values, result )
    result = ast AST::Undef, :value => :undef
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 314
  def _reduce_62( val, _values, result )
    result = ast AST::Name, :value => val[0][:value], :line => val[0][:line]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 318
  def _reduce_63( val, _values, result )
    result = ast AST::Type, :value => val[0][:value], :line => val[0][:line]
   result
  end
.,.,

 # reduce 64 omitted

 # reduce 65 omitted

 # reduce 66 omitted

 # reduce 67 omitted

 # reduce 68 omitted

 # reduce 69 omitted

module_eval <<'.,.,', 'grammar.ra', 334
  def _reduce_70( val, _values, result )
    if val[0][:value] =~ /::/
        raise Puppet::ParseError, "Cannot assign to variables in other namespaces"
    end
    # this is distinct from referencing a variable
    variable = ast AST::Name, :value => val[0][:value], :line => val[0][:line]
    result = ast AST::VarDef, :name => variable, :value => val[2], :line => val[0][:line]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 339
  def _reduce_71( val, _values, result )
    variable = ast AST::Name, :value => val[0][:value], :line => val[0][:line]
    result = ast AST::VarDef, :name => variable, :value => val[2], :append => true, :line => val[0][:line]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 344
  def _reduce_72( val, _values, result )
    result = ast AST::ASTArray
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 344
  def _reduce_73( val, _values, result )
 result = val[0]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 353
  def _reduce_74( val, _values, result )
    if val[0].instance_of?(AST::ASTArray)
        val[0].push(val[2])
        result = val[0]
    else
        result = ast AST::ASTArray, :children => [val[0],val[2]]
    end
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 357
  def _reduce_75( val, _values, result )
    result = ast AST::ResourceParam, :param => val[0][:value], :line => val[0][:line], :value => val[2]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 362
  def _reduce_76( val, _values, result )
    result = ast AST::ResourceParam, :param => val[0][:value], :line => val[0][:line], :value => val[2],
                                     :add => true
   result
  end
.,.,

 # reduce 77 omitted

 # reduce 78 omitted

module_eval <<'.,.,', 'grammar.ra', 370
  def _reduce_79( val, _values, result )
    result = ast AST::ASTArray
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 370
  def _reduce_80( val, _values, result )
 result = val[0]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 379
  def _reduce_81( val, _values, result )
    if val[0].instance_of?(AST::ASTArray)
        val[0].push(val[2])
        result = val[0]
    else
        result = ast AST::ASTArray, :children => [val[0],val[2]]
    end
   result
  end
.,.,

 # reduce 82 omitted

module_eval <<'.,.,', 'grammar.ra', 388
  def _reduce_83( val, _values, result )
    if val[0].instance_of?(AST::ASTArray)
        result = val[0].push(val[2])
    else
        result = ast AST::ASTArray, :children => [val[0],val[2]]
    end
   result
  end
.,.,

 # reduce 84 omitted

 # reduce 85 omitted

 # reduce 86 omitted

 # reduce 87 omitted

 # reduce 88 omitted

 # reduce 89 omitted

 # reduce 90 omitted

 # reduce 91 omitted

 # reduce 92 omitted

 # reduce 93 omitted

 # reduce 94 omitted

 # reduce 95 omitted

 # reduce 96 omitted

 # reduce 97 omitted

 # reduce 98 omitted

 # reduce 99 omitted

module_eval <<'.,.,', 'grammar.ra', 415
  def _reduce_100( val, _values, result )
    args = aryfy(val[2])
    result = ast AST::Function,
        :name => val[0][:value], :line => val[0][:line],
        :arguments => args,
        :ftype => :rvalue
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 420
  def _reduce_101( val, _values, result )
    result = ast AST::Function,
        :name => val[0][:value], :line => val[0][:line],
        :arguments => AST::ASTArray.new({}),
        :ftype => :rvalue
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 424
  def _reduce_102( val, _values, result )
    result = ast AST::String, :value => val[0][:value], :line => val[0][:line]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 426
  def _reduce_103( val, _values, result )
    result = ast AST::FlatString, :value => val[0][:value], :line => val[0][:line]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 430
  def _reduce_104( val, _values, result )
    result = ast AST::Boolean, :value => val[0][:value], :line => val[0][:line]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 435
  def _reduce_105( val, _values, result )
    Puppet.warning addcontext("Deprecation notice:  Resource references should now be capitalized")
    result = ast AST::ResourceReference, :type => val[0][:value], :line => val[0][:line], :title => val[2]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 437
  def _reduce_106( val, _values, result )
    result = ast AST::ResourceReference, :type => val[0], :title => val[2]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 451
  def _reduce_107( val, _values, result )
    @lexer.commentpop
    args = {
        :test => val[1],
        :statements => val[3]
    }

    if val[5]
        args[:else] = val[5]
    end

    result = ast AST::IfStatement, args
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 464
  def _reduce_108( val, _values, result )
    @lexer.commentpop
    args = {
        :test => val[1],
        :statements => ast(AST::Nop)
    }

    if val[4]
        args[:else] = val[4]
    end

    result = ast AST::IfStatement, args
   result
  end
.,.,

 # reduce 109 omitted

module_eval <<'.,.,', 'grammar.ra', 470
  def _reduce_110( val, _values, result )
    @lexer.commentpop
    result = ast AST::Else, :statements => val[2]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 474
  def _reduce_111( val, _values, result )
    @lexer.commentpop
    result = ast AST::Else, :statements => ast(AST::Nop)
   result
  end
.,.,

 # reduce 112 omitted

module_eval <<'.,.,', 'grammar.ra', 491
  def _reduce_113( val, _values, result )
    result = ast AST::ArithmeticOperator, :operator => val[1][:value], :lval => val[0], :rval => val[2]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 494
  def _reduce_114( val, _values, result )
    result = ast AST::ArithmeticOperator, :operator => val[1][:value], :lval => val[0], :rval => val[2]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 497
  def _reduce_115( val, _values, result )
    result = ast AST::ArithmeticOperator, :operator => val[1][:value], :lval => val[0], :rval => val[2]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 500
  def _reduce_116( val, _values, result )
    result = ast AST::ArithmeticOperator, :operator => val[1][:value], :lval => val[0], :rval => val[2]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 503
  def _reduce_117( val, _values, result )
    result = ast AST::ArithmeticOperator, :operator => val[1][:value], :lval => val[0], :rval => val[2]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 506
  def _reduce_118( val, _values, result )
    result = ast AST::ArithmeticOperator, :operator => val[1][:value], :lval => val[0], :rval => val[2]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 509
  def _reduce_119( val, _values, result )
    result = ast AST::Minus, :value => val[1]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 512
  def _reduce_120( val, _values, result )
    result = ast AST::ComparisonOperator, :operator => val[1][:value], :lval => val[0], :rval => val[2]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 515
  def _reduce_121( val, _values, result )
    result = ast AST::ComparisonOperator, :operator => val[1][:value], :lval => val[0], :rval => val[2]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 518
  def _reduce_122( val, _values, result )
    result = ast AST::ComparisonOperator, :operator => val[1][:value], :lval => val[0], :rval => val[2]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 521
  def _reduce_123( val, _values, result )
    result = ast AST::ComparisonOperator, :operator => val[1][:value], :lval => val[0], :rval => val[2]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 524
  def _reduce_124( val, _values, result )
    result = ast AST::ComparisonOperator, :operator => val[1][:value], :lval => val[0], :rval => val[2]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 527
  def _reduce_125( val, _values, result )
    result = ast AST::ComparisonOperator, :operator => val[1][:value], :lval => val[0], :rval => val[2]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 530
  def _reduce_126( val, _values, result )
    result = ast AST::Not, :value => val[1]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 533
  def _reduce_127( val, _values, result )
    result = ast AST::BooleanOperator, :operator => val[1][:value], :lval => val[0], :rval => val[2]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 536
  def _reduce_128( val, _values, result )
    result = ast AST::BooleanOperator, :operator => val[1][:value], :lval => val[0], :rval => val[2]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 539
  def _reduce_129( val, _values, result )
    result = val[1]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 548
  def _reduce_130( val, _values, result )
    @lexer.commentpop
    options = val[3]
    unless options.instance_of?(AST::ASTArray)
        options = ast AST::ASTArray, :children => [val[3]]
    end
    result = ast AST::CaseStatement, :test => val[1], :options => options
   result
  end
.,.,

 # reduce 131 omitted

module_eval <<'.,.,', 'grammar.ra', 558
  def _reduce_132( val, _values, result )
    if val[0].instance_of?(AST::ASTArray)
        val[0].push val[1]
        result = val[0]
    else
        result = ast AST::ASTArray, :children => [val[0], val[1]]
    end
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 563
  def _reduce_133( val, _values, result )
    @lexer.commentpop
    result = ast AST::CaseOpt, :value => val[0], :statements => val[3]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 569
  def _reduce_134( val, _values, result )
    @lexer.commentpop
    result = ast(AST::CaseOpt,
        :value => val[0],
        :statements => ast(AST::ASTArray)
    )
   result
  end
.,.,

 # reduce 135 omitted

module_eval <<'.,.,', 'grammar.ra', 579
  def _reduce_136( val, _values, result )
    if val[0].instance_of?(AST::ASTArray)
        val[0].push(val[2])
        result = val[0]
    else
        result = ast AST::ASTArray, :children => [val[0],val[2]]
    end
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 583
  def _reduce_137( val, _values, result )
    result = ast AST::Selector, :param => val[0], :values => val[2]
   result
  end
.,.,

 # reduce 138 omitted

module_eval <<'.,.,', 'grammar.ra', 589
  def _reduce_139( val, _values, result )
    @lexer.commentpop
    result = val[1]
   result
  end
.,.,

 # reduce 140 omitted

module_eval <<'.,.,', 'grammar.ra', 599
  def _reduce_141( val, _values, result )
    if val[0].instance_of?(AST::ASTArray)
        val[0].push(val[2])
        result = val[0]
    else
        result = ast AST::ASTArray, :children => [val[0],val[2]]
    end
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 603
  def _reduce_142( val, _values, result )
    result = ast AST::ResourceParam, :param => val[0], :value => val[2]
   result
  end
.,.,

 # reduce 143 omitted

 # reduce 144 omitted

 # reduce 145 omitted

 # reduce 146 omitted

 # reduce 147 omitted

 # reduce 148 omitted

 # reduce 149 omitted

module_eval <<'.,.,', 'grammar.ra', 614
  def _reduce_150( val, _values, result )
    result = ast AST::Default, :value => val[0][:value], :line => val[0][:line]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 616
  def _reduce_151( val, _values, result )
 result = [val[0].value]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 620
  def _reduce_152( val, _values, result )
    results = val[0] << val[2].value
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 628
  def _reduce_153( val, _values, result )
    val[1].each do |file|
        import(file)
    end

    result = AST::ASTArray.new(:children => [])
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 639
  def _reduce_154( val, _values, result )
    @lexer.commentpop
    newdefine classname(val[1]), :arguments => val[2], :code => val[4], :line => val[0][:line]
    @lexer.indefine = false
    result = nil

#}           | DEFINE NAME argumentlist parent LBRACE RBRACE {
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 644
  def _reduce_155( val, _values, result )
    @lexer.commentpop
    newdefine classname(val[1]), :arguments => val[2], :line => val[0][:line]
    @lexer.indefine = false
    result = nil
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 653
  def _reduce_156( val, _values, result )
    @lexer.commentpop
    # Our class gets defined in the parent namespace, not our own.
    @lexer.namepop
    newclass classname(val[1]), :code => val[4], :parent => val[2], :line => val[0][:line]
    result = nil
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 659
  def _reduce_157( val, _values, result )
    @lexer.commentpop
    # Our class gets defined in the parent namespace, not our own.
    @lexer.namepop
    newclass classname(val[1]), :parent => val[2], :line => val[0][:line]
    result = nil
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 665
  def _reduce_158( val, _values, result )
    @lexer.commentpop
    newnode val[1], :parent => val[2], :code => val[4], :line => val[0][:line]
    result = nil
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 669
  def _reduce_159( val, _values, result )
    @lexer.commentpop
    newnode val[1], :parent => val[2], :line => val[0][:line]
    result = nil
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 670
  def _reduce_160( val, _values, result )
 result = val[0][:value]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 672
  def _reduce_161( val, _values, result )
 result = val[0][:value]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 673
  def _reduce_162( val, _values, result )
 result = val[0][:value]
   result
  end
.,.,

 # reduce 163 omitted

module_eval <<'.,.,', 'grammar.ra', 683
  def _reduce_164( val, _values, result )
    result = val[0]
    result = [result] unless result.is_a?(Array)
    result << val[2][:value]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 684
  def _reduce_165( val, _values, result )
 result = val[0][:value]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 685
  def _reduce_166( val, _values, result )
 result = val[0][:value]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 686
  def _reduce_167( val, _values, result )
 result = val[0][:value]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 687
  def _reduce_168( val, _values, result )
 result = val[0][:value]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 692
  def _reduce_169( val, _values, result )
    result = nil
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 696
  def _reduce_170( val, _values, result )
    result = ast AST::ASTArray, :children => []
   result
  end
.,.,

 # reduce 171 omitted

module_eval <<'.,.,', 'grammar.ra', 701
  def _reduce_172( val, _values, result )
    result = nil
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 705
  def _reduce_173( val, _values, result )
    result = val[1]
    result = [result] unless result[0].is_a?(Array)
   result
  end
.,.,

 # reduce 174 omitted

module_eval <<'.,.,', 'grammar.ra', 712
  def _reduce_175( val, _values, result )
    result = val[0]
    result = [result] unless result[0].is_a?(Array)
    result << val[2]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 717
  def _reduce_176( val, _values, result )
    Puppet.warning addcontext("Deprecation notice: must now include '$' in prototype")
    result = [val[0][:value], val[2]]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 721
  def _reduce_177( val, _values, result )
    Puppet.warning addcontext("Deprecation notice: must now include '$' in prototype")
    result = [val[0][:value]]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 723
  def _reduce_178( val, _values, result )
    result = [val[0][:value], val[2]]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 725
  def _reduce_179( val, _values, result )
    result = [val[0][:value]]
   result
  end
.,.,

 # reduce 180 omitted

module_eval <<'.,.,', 'grammar.ra', 730
  def _reduce_181( val, _values, result )
    result = val[1]
   result
  end
.,.,

 # reduce 182 omitted

module_eval <<'.,.,', 'grammar.ra', 735
  def _reduce_183( val, _values, result )
    result = val[1]
   result
  end
.,.,

 # reduce 184 omitted

 # reduce 185 omitted

module_eval <<'.,.,', 'grammar.ra', 741
  def _reduce_186( val, _values, result )
    result = ast AST::Variable, :value => val[0][:value], :line => val[0][:line]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 749
  def _reduce_187( val, _values, result )
    if val[1].instance_of?(AST::ASTArray)
        result = val[1]
    else
        result = ast AST::ASTArray, :children => [val[1]]
    end
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 756
  def _reduce_188( val, _values, result )
    if val[1].instance_of?(AST::ASTArray)
        result = val[1]
    else
        result = ast AST::ASTArray, :children => [val[1]]
    end
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 758
  def _reduce_189( val, _values, result )
    result = ast AST::ASTArray
   result
  end
.,.,

 # reduce 190 omitted

 # reduce 191 omitted

 # reduce 192 omitted

module_eval <<'.,.,', 'grammar.ra', 763
  def _reduce_193( val, _values, result )
 result = nil
   result
  end
.,.,

 def _reduce_none( val, _values, result )
  result
 end

    end   # class Parser

  end   # module Parser

end   # module Puppet
