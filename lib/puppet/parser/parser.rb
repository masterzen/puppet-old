#
# DO NOT MODIFY!!!!
# This file is automatically generated by racc 1.4.5
# from racc grammer file "grammar.ra".
#

require 'racc/parser'


require 'puppet'
require 'puppet/util/loadedfile'
require 'puppet/parser/lexer'
require 'puppet/parser/ast'
#require 'puppet/parser/interpreter'

module Puppet
    class ParseError < Puppet::Error; end
    class ImportError < Racc::ParseError; end
    class AlreadyImportedError < ImportError; end
end

Puppet[:typecheck] = true
Puppet[:paramcheck] = true


module Puppet

  module Parser

    class Parser < Racc::Parser

module_eval <<'..end grammar.ra modeval..idf5ced460e1', 'grammar.ra', 732

# It got too annoying having code in a file that needs to be compiled.
require 'puppet/parser/parser_support'

# Make emacs happy
# Local Variables:
# mode: ruby
# End:

# $Id$

..end grammar.ra modeval..idf5ced460e1

##### racc 1.4.5 generates ###

racc_reduce_table = [
 0, 0, :racc_error,
 1, 60, :_reduce_1,
 1, 60, :_reduce_none,
 1, 61, :_reduce_none,
 2, 61, :_reduce_4,
 1, 63, :_reduce_none,
 1, 63, :_reduce_none,
 1, 63, :_reduce_none,
 1, 63, :_reduce_none,
 1, 63, :_reduce_none,
 1, 63, :_reduce_none,
 1, 63, :_reduce_none,
 1, 63, :_reduce_none,
 1, 63, :_reduce_none,
 1, 63, :_reduce_none,
 1, 63, :_reduce_none,
 1, 63, :_reduce_none,
 1, 63, :_reduce_none,
 4, 71, :_reduce_18,
 3, 71, :_reduce_19,
 2, 71, :_reduce_20,
 1, 77, :_reduce_none,
 1, 77, :_reduce_none,
 1, 78, :_reduce_none,
 3, 78, :_reduce_24,
 1, 80, :_reduce_none,
 1, 80, :_reduce_none,
 1, 80, :_reduce_none,
 1, 80, :_reduce_none,
 1, 80, :_reduce_none,
 1, 80, :_reduce_none,
 1, 80, :_reduce_none,
 1, 80, :_reduce_32,
 1, 79, :_reduce_none,
 3, 79, :_reduce_34,
 5, 64, :_reduce_35,
 5, 64, :_reduce_36,
 5, 64, :_reduce_37,
 5, 75, :_reduce_38,
 2, 65, :_reduce_39,
 1, 96, :_reduce_40,
 2, 96, :_reduce_41,
 2, 66, :_reduce_42,
 3, 97, :_reduce_43,
 3, 97, :_reduce_44,
 1, 98, :_reduce_none,
 1, 98, :_reduce_none,
 3, 98, :_reduce_47,
 1, 99, :_reduce_none,
 3, 99, :_reduce_49,
 1, 100, :_reduce_none,
 1, 100, :_reduce_none,
 3, 101, :_reduce_52,
 3, 101, :_reduce_53,
 1, 102, :_reduce_none,
 1, 102, :_reduce_none,
 4, 104, :_reduce_56,
 1, 90, :_reduce_none,
 3, 90, :_reduce_58,
 0, 91, :_reduce_none,
 1, 91, :_reduce_none,
 1, 106, :_reduce_61,
 1, 81, :_reduce_62,
 1, 83, :_reduce_63,
 1, 105, :_reduce_none,
 1, 105, :_reduce_none,
 1, 105, :_reduce_none,
 1, 105, :_reduce_none,
 1, 105, :_reduce_none,
 1, 105, :_reduce_none,
 3, 67, :_reduce_70,
 3, 76, :_reduce_71,
 0, 92, :_reduce_72,
 1, 92, :_reduce_73,
 3, 92, :_reduce_74,
 3, 109, :_reduce_75,
 3, 111, :_reduce_76,
 1, 112, :_reduce_none,
 1, 112, :_reduce_none,
 0, 95, :_reduce_79,
 1, 95, :_reduce_80,
 3, 95, :_reduce_81,
 1, 113, :_reduce_none,
 3, 113, :_reduce_83,
 1, 103, :_reduce_none,
 1, 103, :_reduce_none,
 1, 103, :_reduce_none,
 1, 103, :_reduce_none,
 1, 103, :_reduce_none,
 1, 103, :_reduce_none,
 1, 110, :_reduce_none,
 1, 110, :_reduce_none,
 1, 110, :_reduce_none,
 1, 110, :_reduce_none,
 1, 110, :_reduce_none,
 1, 110, :_reduce_none,
 1, 110, :_reduce_none,
 1, 110, :_reduce_none,
 1, 110, :_reduce_none,
 1, 110, :_reduce_none,
 4, 85, :_reduce_100,
 3, 85, :_reduce_101,
 1, 87, :_reduce_102,
 1, 87, :_reduce_103,
 1, 84, :_reduce_104,
 4, 88, :_reduce_105,
 4, 88, :_reduce_106,
 6, 69, :_reduce_107,
 5, 69, :_reduce_108,
 0, 115, :_reduce_none,
 4, 115, :_reduce_110,
 3, 115, :_reduce_111,
 1, 108, :_reduce_none,
 3, 108, :_reduce_113,
 3, 108, :_reduce_114,
 3, 108, :_reduce_115,
 3, 108, :_reduce_116,
 3, 108, :_reduce_117,
 3, 108, :_reduce_118,
 2, 108, :_reduce_119,
 3, 108, :_reduce_120,
 3, 108, :_reduce_121,
 3, 108, :_reduce_122,
 3, 108, :_reduce_123,
 3, 108, :_reduce_124,
 3, 108, :_reduce_125,
 2, 108, :_reduce_126,
 3, 108, :_reduce_127,
 3, 108, :_reduce_128,
 3, 108, :_reduce_129,
 5, 68, :_reduce_130,
 1, 116, :_reduce_none,
 2, 116, :_reduce_132,
 5, 117, :_reduce_133,
 4, 117, :_reduce_134,
 1, 118, :_reduce_none,
 3, 118, :_reduce_136,
 3, 86, :_reduce_137,
 1, 120, :_reduce_none,
 4, 120, :_reduce_139,
 1, 122, :_reduce_none,
 3, 122, :_reduce_141,
 3, 121, :_reduce_142,
 1, 119, :_reduce_none,
 1, 119, :_reduce_none,
 1, 119, :_reduce_none,
 1, 119, :_reduce_none,
 1, 119, :_reduce_none,
 1, 119, :_reduce_none,
 1, 119, :_reduce_none,
 1, 119, :_reduce_150,
 1, 123, :_reduce_151,
 3, 123, :_reduce_152,
 2, 70, :_reduce_153,
 6, 72, :_reduce_154,
 5, 72, :_reduce_155,
 6, 73, :_reduce_156,
 5, 73, :_reduce_157,
 6, 74, :_reduce_158,
 5, 74, :_reduce_159,
 1, 94, :_reduce_none,
 1, 89, :_reduce_none,
 1, 89, :_reduce_none,
 1, 126, :_reduce_none,
 3, 126, :_reduce_164,
 1, 128, :_reduce_none,
 1, 128, :_reduce_none,
 1, 128, :_reduce_none,
 1, 128, :_reduce_none,
 0, 62, :_reduce_169,
 0, 129, :_reduce_170,
 1, 124, :_reduce_none,
 3, 124, :_reduce_172,
 3, 124, :_reduce_173,
 1, 130, :_reduce_none,
 3, 130, :_reduce_175,
 3, 131, :_reduce_176,
 1, 131, :_reduce_177,
 3, 131, :_reduce_178,
 1, 131, :_reduce_179,
 1, 127, :_reduce_none,
 2, 127, :_reduce_181,
 1, 125, :_reduce_none,
 2, 125, :_reduce_183,
 1, 132, :_reduce_none,
 1, 132, :_reduce_none,
 1, 82, :_reduce_186,
 3, 107, :_reduce_187,
 2, 107, :_reduce_188,
 1, 114, :_reduce_none,
 1, 114, :_reduce_none,
 0, 93, :_reduce_none,
 1, 93, :_reduce_192 ]

racc_reduce_n = 193

racc_shift_n = 317

racc_action_table = [
    75,    54,    57,   273,   178,    39,    40,   201,    88,   238,
    51,   178,    89,   213,   245,     8,   265,   198,   199,   246,
    72,    75,    54,    57,   136,    90,    39,    40,   236,   237,
   136,    45,    39,    40,   129,    56,    59,   236,   237,    66,
    41,    72,   154,    44,    52,    76,   177,   162,    62,    92,
   146,    84,    45,    75,    54,    57,    56,    59,    45,   126,
    66,    41,   250,   167,    44,    52,    76,    41,  -146,    62,
    44,  -143,    84,    72,    75,    54,    57,   291,   156,   157,
   158,   144,   145,   147,    45,   234,   253,   286,    56,    59,
   290,   162,    66,   233,    72,   285,    37,    52,    76,   158,
   144,    62,    45,     4,    84,    45,   154,   167,    37,    56,
    59,   155,   162,    66,   146,     4,     8,    37,    52,    76,
   150,   154,    62,    45,     4,    84,   158,   144,   167,   146,
   148,   151,   153,   105,   230,    75,    54,    57,   198,   199,
    33,    34,   156,   157,   158,   144,   145,   147,   156,   157,
   158,   144,   138,   149,   152,    72,   154,   156,   157,   158,
   144,   145,   147,   257,   146,   162,    45,    75,    54,    57,
    56,    59,   245,  -145,    66,    37,    45,   246,   183,    52,
    76,   167,     4,    62,    54,    57,    84,    72,    75,    54,
    57,   259,   156,   157,   158,   144,   145,   147,    45,   161,
   239,   161,    56,    59,   236,   237,    66,   137,    72,   154,
   136,    52,    76,   198,   299,    62,  -147,   146,    84,    45,
    75,    54,    57,    56,    59,   197,    51,    66,  -144,   198,
   199,  -148,    52,    76,    54,    57,    62,   268,   178,    84,
    72,    75,    54,    57,   188,   156,   157,   158,   144,   145,
   147,    45,  -149,  -144,    88,    56,    59,  -146,  -148,    66,
  -143,    72,   135,  -147,    52,    76,  -160,   271,    62,  -145,
   161,    84,    45,    75,    54,    57,    56,    59,   272,   172,
    66,   156,   157,   158,   144,    52,    76,   132,   173,    62,
    89,   108,    84,    72,    75,    54,    57,   156,   157,   158,
   144,   145,   147,   174,    45,   287,   288,   289,    56,    59,
   180,   105,    66,   100,    72,   188,   184,    52,    76,   186,
  -143,    62,   271,   302,    84,    45,    75,    54,    57,    56,
    59,  -143,  -146,    66,  -144,  -148,  -145,   303,    52,    76,
   188,  -146,    62,    71,   193,    84,    72,    75,    54,    57,
   156,   157,   158,   144,   145,   147,   191,    45,    38,   310,
  -192,    56,    59,  -145,    35,    66,   189,    72,  -144,   nil,
    52,    76,   nil,   nil,    62,   nil,   nil,    84,    45,    75,
    54,    57,    56,    59,   nil,   nil,    66,   nil,   nil,   nil,
   nil,    52,    76,   nil,   nil,    62,   nil,   nil,    84,    72,
    75,    54,    57,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
    45,   nil,   nil,   nil,    56,    59,   nil,   nil,    66,   nil,
    72,   nil,   nil,    52,    76,   nil,   nil,    62,   nil,   nil,
    84,    45,    75,    54,    57,    56,    59,   nil,   nil,    66,
   nil,   nil,   nil,   nil,    52,    76,   nil,   nil,    62,   nil,
   nil,    84,    72,    75,    54,    57,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,    45,   nil,   nil,   nil,    56,    59,   nil,
   nil,    66,   nil,    72,   nil,   nil,    52,    76,   nil,   nil,
    62,   nil,   nil,    84,    45,    75,    54,    57,    56,    59,
   nil,   nil,    66,   nil,   nil,   nil,   nil,    52,    76,   nil,
   nil,    62,   nil,   nil,    84,    72,    75,    54,    57,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,    45,    75,    54,    57,
    56,    59,   nil,   nil,    66,   nil,    72,   nil,   nil,    52,
    76,   nil,   nil,    62,   nil,   nil,    84,    45,    75,    54,
    57,    56,    59,   nil,   nil,    66,   nil,   nil,    45,   nil,
    52,    76,    56,   116,    62,   nil,    66,    84,    72,   nil,
   nil,   111,    75,    54,    57,    62,   nil,   nil,   nil,    45,
   nil,   nil,   nil,    56,    59,   nil,   nil,    66,    75,    54,
    57,   141,    52,    76,   nil,   nil,    62,   nil,   nil,    84,
   nil,   nil,   nil,    45,    75,    54,    57,    56,    59,   nil,
   nil,    66,   nil,   nil,   nil,   nil,    52,   nil,   nil,    45,
    62,   nil,   nil,    56,    59,   nil,   nil,    66,    75,    54,
    57,   nil,    52,   nil,   nil,    45,    62,   nil,   nil,    56,
    59,   nil,   nil,    66,    75,    54,    57,   nil,    52,   nil,
   nil,   nil,    62,   nil,    75,    54,    57,   nil,   nil,    45,
    75,    54,    57,    56,    59,   nil,   nil,    66,   nil,   nil,
   nil,   nil,    52,   nil,   nil,    45,    62,   nil,   nil,    56,
    59,   nil,   nil,    66,   nil,    45,   nil,   nil,    52,    56,
   195,    45,    62,    66,   nil,    56,    59,   nil,   111,    66,
   nil,   nil,    62,   nil,    52,    75,    54,    57,    62,   nil,
   nil,    51,    54,    57,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,    75,    54,    57,   nil,   nil,   nil,    75,    54,    57,
   nil,    48,   nil,   nil,   nil,   nil,    45,    75,    54,    57,
    56,    59,    45,   nil,    66,   nil,    56,    59,   nil,    52,
    66,   nil,    45,    62,    49,    52,    56,    59,    45,    62,
    66,   nil,    56,    59,   nil,    52,    66,   nil,    45,    62,
   nil,    52,    56,    59,   nil,    62,    66,    54,    57,    54,
    57,    52,   nil,   nil,   nil,    62,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,    54,    57,    54,    57,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,    45,   nil,    45,
   nil,    56,   195,    56,   195,    66,   nil,    66,    54,    57,
   111,    49,   111,    45,    62,    45,    62,    56,   195,    56,
   195,    66,   nil,    66,   nil,   nil,   111,   nil,   111,   nil,
    62,   nil,    62,    54,    57,    54,    57,   284,    45,   nil,
   nil,   nil,    56,   195,   nil,   nil,    66,   nil,   nil,    54,
    57,   111,   208,   nil,   nil,    62,    54,    57,   nil,   nil,
   nil,   nil,   nil,    45,   nil,    45,   nil,    56,   195,    56,
   195,    66,   nil,    66,   nil,   nil,   111,   nil,   111,    45,
    62,   nil,    62,    56,   195,   nil,    45,    66,    54,    57,
    56,   195,   111,   nil,    66,   nil,    62,   nil,   nil,   111,
   nil,   nil,   nil,    62,    54,    57,   nil,   nil,   131,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    45,   nil,
   nil,   nil,    56,    59,   203,   nil,    66,   nil,   nil,   nil,
    49,    52,   nil,   nil,    45,    62,   nil,   nil,    56,    59,
   nil,   nil,    66,   150,   154,   nil,    49,    52,   nil,   nil,
   nil,    62,   146,   148,   151,   153,   150,   154,   nil,   nil,
   nil,   nil,   nil,   nil,   212,   146,   148,   151,   153,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   156,   157,   158,   144,   145,   147,   nil,   nil,   nil,   149,
   152,   150,   154,   156,   157,   158,   144,   145,   147,   nil,
   146,   148,   151,   153,   150,   154,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   146,   148,   151,   153,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   149,   152,   nil,   nil,   156,   157,
   158,   144,   145,   147,   nil,   nil,   296,   nil,   152,   150,
   154,   156,   157,   158,   144,   145,   147,   nil,   146,   148,
   151,   153,   nil,   nil,   nil,   nil,   nil,    16,   nil,    23,
    27,   294,     1,     5,   nil,    10,   nil,    13,   nil,    20,
   nil,    28,   149,   152,     4,     8,   156,   157,   158,   144,
   145,   147,    16,   293,    23,    27,   nil,     1,     5,   nil,
    10,   nil,    13,   nil,    20,   nil,    28,   nil,   nil,     4,
     8,   nil,   269,   nil,    16,   nil,    23,    27,   nil,     1,
     5,   nil,    10,   nil,    13,   nil,    20,   nil,    28,   nil,
   nil,     4,     8,    16,   226,    23,    27,   nil,     1,     5,
   nil,    10,   nil,    13,   nil,    20,   nil,    28,   nil,   nil,
     4,     8,   nil,   308,   nil,    16,   nil,    23,    27,   nil,
     1,     5,   nil,    10,   nil,    13,   nil,    20,   nil,    28,
   nil,   nil,     4,     8,    16,   312,    23,    27,   nil,     1,
     5,   nil,    10,   nil,    13,   nil,    20,   nil,    28,   nil,
   nil,     4,     8,   nil,   314,   nil,    16,   nil,    23,    27,
   nil,     1,     5,   nil,    10,   nil,    13,   nil,    20,   nil,
    28,   nil,   nil,     4,     8,    16,   263,    23,    27,   nil,
     1,     5,   nil,    10,   nil,    13,   nil,    20,   nil,    28,
   nil,   nil,     4,     8,   nil,   315,   nil,    16,   nil,    23,
    27,   nil,     1,     5,   nil,    10,   nil,    13,   nil,    20,
   nil,    28,   nil,   nil,     4,     8,    16,   256,    23,    27,
   nil,     1,     5,   nil,    10,   nil,    13,   nil,    20,   nil,
    28,   nil,   nil,     4,     8,   nil,   316,   nil,    16,   nil,
    23,    27,   nil,     1,     5,   nil,    10,   nil,    13,   nil,
    20,   nil,    28,   nil,   nil,     4,     8,    16,   nil,    23,
    27,   nil,     1,     5,   nil,    10,   nil,    13,   nil,    20,
   nil,    28,   nil,   nil,     4,     8,    16,   nil,    23,    27,
   nil,     1,     5,   nil,    10,   nil,    13,   nil,    20,   nil,
    28,   nil,   nil,     4,     8,    16,   nil,    23,    27,   nil,
     1,     5,   nil,    10,   nil,    13,   nil,    20,   nil,    28,
   nil,   nil,     4,     8 ]

racc_action_check = [
   158,   158,   158,   232,   105,   129,   129,   135,    17,   170,
    59,   116,    17,   140,   174,   135,   202,   140,   140,   174,
   158,    84,    84,    84,   116,    17,    10,    10,   232,   232,
    59,   158,   126,   126,    42,   158,   158,   170,   170,   158,
   129,    84,   221,   129,   158,   158,   105,   162,   158,    17,
   221,   158,    84,   144,   144,   144,    84,    84,   162,    42,
    84,    10,   175,   162,    10,    84,    84,   126,    78,    84,
   126,    77,    84,   144,   145,   145,   145,   248,   221,   221,
   221,   221,   221,   221,   144,   165,   179,   242,   144,   144,
   248,    92,   144,   165,   145,   242,     5,   144,   144,   227,
   227,   144,    92,     5,   144,   145,   223,    92,    24,   145,
   145,    85,    90,   145,   223,    24,    24,    27,   145,   145,
    85,    85,   145,    90,    27,   145,   228,   228,    90,    85,
    85,    85,    85,   180,   159,   146,   146,   146,   159,   159,
     1,     1,   223,   223,   223,   223,   223,   223,   217,   217,
   217,   217,    71,    85,    85,   146,   218,    85,    85,    85,
    85,    85,    85,   185,   218,   235,   146,   157,   157,   157,
   146,   146,   291,    70,   146,   108,   235,   291,   108,   146,
   146,   235,   108,   146,    23,    23,   146,   157,   154,   154,
   154,   187,   218,   218,   218,   218,   218,   218,   157,   188,
   171,   189,   157,   157,   171,   171,   157,    68,   154,   220,
   195,   157,   157,   267,   267,   157,    67,   220,   157,   154,
    16,    16,    16,   154,   154,   134,   201,   154,    79,   134,
   134,    65,   154,   154,   173,   173,   154,   209,   161,   154,
    16,   147,   147,   147,   160,   220,   220,   220,   220,   220,
   220,    16,    80,    63,    61,    16,    16,    60,    81,    16,
    58,   147,    53,    82,    16,    16,    52,   226,    16,    87,
    89,    16,   147,   153,   153,   153,   147,   147,   231,    94,
   147,   215,   215,   215,   215,   147,   147,    50,    95,   147,
    97,    36,   147,   153,   152,   152,   152,   224,   224,   224,
   224,   224,   224,    99,   153,   245,   246,   247,   153,   153,
   106,    35,   153,    28,   152,   261,   109,   153,   153,   112,
   113,   153,   269,   271,   153,   152,    76,    76,    76,   152,
   152,   274,   276,   152,   277,   278,   280,   285,   152,   152,
   114,   115,   152,    15,   130,   152,    76,   151,   151,   151,
   216,   216,   216,   216,   216,   216,   127,    76,     6,   298,
   299,    76,    76,   125,     2,    76,   119,   151,   118,   nil,
    76,    76,   nil,   nil,    76,   nil,   nil,    76,   151,   148,
   148,   148,   151,   151,   nil,   nil,   151,   nil,   nil,   nil,
   nil,   151,   151,   nil,   nil,   151,   nil,   nil,   151,   148,
   149,   149,   149,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   148,   nil,   nil,   nil,   148,   148,   nil,   nil,   148,   nil,
   149,   nil,   nil,   148,   148,   nil,   nil,   148,   nil,   nil,
   148,   149,    72,    72,    72,   149,   149,   nil,   nil,   149,
   nil,   nil,   nil,   nil,   149,   149,   nil,   nil,   149,   nil,
   nil,   149,    72,    34,    34,    34,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,    72,   nil,   nil,   nil,    72,    72,   nil,
   nil,    72,   nil,    34,   nil,   nil,    72,    72,   nil,   nil,
    72,   nil,   nil,    72,    34,   150,   150,   150,    34,    34,
   nil,   nil,    34,   nil,   nil,   nil,   nil,    34,    34,   nil,
   nil,    34,   nil,   nil,    34,   150,   156,   156,   156,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   150,    38,    38,    38,
   150,   150,   nil,   nil,   150,   nil,   156,   nil,   nil,   150,
   150,   nil,   nil,   150,   nil,   nil,   150,   156,    33,    33,
    33,   156,   156,   nil,   nil,   156,   nil,   nil,    38,   nil,
   156,   156,    38,    38,   156,   nil,    38,   156,    33,   nil,
   nil,    38,   196,   196,   196,    38,   nil,   nil,   nil,    33,
   nil,   nil,   nil,    33,    33,   nil,   nil,    33,    75,    75,
    75,    75,    33,    33,   nil,   nil,    33,   nil,   nil,    33,
   nil,   nil,   nil,   196,    51,    51,    51,   196,   196,   nil,
   nil,   196,   nil,   nil,   nil,   nil,   196,   nil,   nil,    75,
   196,   nil,   nil,    75,    75,   nil,   nil,    75,   268,   268,
   268,   nil,    75,   nil,   nil,    51,    75,   nil,   nil,    51,
    51,   nil,   nil,    51,    20,    20,    20,   nil,    51,   nil,
   nil,   nil,    51,   nil,   186,   186,   186,   nil,   nil,   268,
   287,   287,   287,   268,   268,   nil,   nil,   268,   nil,   nil,
   nil,   nil,   268,   nil,   nil,    20,   268,   nil,   nil,    20,
    20,   nil,   nil,    20,   nil,   186,   nil,   nil,    20,   186,
   186,   287,    20,   186,   nil,   287,   287,   nil,   186,   287,
   nil,   nil,   186,   nil,   287,   288,   288,   288,   287,   nil,
   nil,    13,    13,    13,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   178,   178,   178,   nil,   nil,   nil,   177,   177,   177,
   nil,    13,   nil,   nil,   nil,   nil,   288,    88,    88,    88,
   288,   288,    13,   nil,   288,   nil,    13,    13,   nil,   288,
    13,   nil,   178,   288,    13,    13,   178,   178,   177,    13,
   178,   nil,   177,   177,   nil,   178,   177,   nil,    88,   178,
   nil,   177,    88,    88,   nil,   177,    88,   208,   208,   132,
   132,    88,   nil,   nil,   nil,    88,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   233,   233,   234,   234,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   208,   nil,   132,
   nil,   208,   208,   132,   132,   208,   nil,   132,   286,   286,
   208,   132,   132,   233,   208,   234,   132,   233,   233,   234,
   234,   233,   nil,   234,   nil,   nil,   233,   nil,   234,   nil,
   233,   nil,   234,   240,   240,   297,   297,   240,   286,   nil,
   nil,   nil,   286,   286,   nil,   nil,   286,   nil,   nil,   137,
   137,   286,   137,   nil,   nil,   286,   172,   172,   nil,   nil,
   nil,   nil,   nil,   240,   nil,   297,   nil,   240,   240,   297,
   297,   240,   nil,   297,   nil,   nil,   240,   nil,   297,   137,
   240,   nil,   297,   137,   137,   nil,   172,   137,    48,    48,
   172,   172,   137,   nil,   172,   nil,   137,   nil,   nil,   172,
   nil,   nil,   nil,   172,   136,   136,   nil,   nil,    48,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    48,   nil,
   nil,   nil,    48,    48,   136,   nil,    48,   nil,   nil,   nil,
    48,    48,   nil,   nil,   136,    48,   nil,   nil,   136,   136,
   nil,   nil,   136,   222,   222,   nil,   136,   136,   nil,   nil,
   nil,   136,   222,   222,   222,   222,   139,   139,   nil,   nil,
   nil,   nil,   nil,   nil,   139,   139,   139,   139,   139,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   222,   222,   222,   222,   222,   222,   nil,   nil,   nil,   139,
   139,   102,   102,   139,   139,   139,   139,   139,   139,   nil,
   102,   102,   102,   102,   219,   219,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   219,   219,   219,   219,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   102,   102,   nil,   nil,   102,   102,
   102,   102,   102,   102,   nil,   nil,   262,   nil,   219,   101,
   101,   219,   219,   219,   219,   219,   219,   nil,   101,   101,
   101,   101,   nil,   nil,   nil,   nil,   nil,   262,   nil,   262,
   262,   255,   262,   262,   nil,   262,   nil,   262,   nil,   262,
   nil,   262,   101,   101,   262,   262,   101,   101,   101,   101,
   101,   101,   255,   250,   255,   255,   nil,   255,   255,   nil,
   255,   nil,   255,   nil,   255,   nil,   255,   nil,   nil,   255,
   255,   nil,   225,   nil,   250,   nil,   250,   250,   nil,   250,
   250,   nil,   250,   nil,   250,   nil,   250,   nil,   250,   nil,
   nil,   250,   250,   225,   155,   225,   225,   nil,   225,   225,
   nil,   225,   nil,   225,   nil,   225,   nil,   225,   nil,   nil,
   225,   225,   nil,   292,   nil,   155,   nil,   155,   155,   nil,
   155,   155,   nil,   155,   nil,   155,   nil,   155,   nil,   155,
   nil,   nil,   155,   155,   292,   302,   292,   292,   nil,   292,
   292,   nil,   292,   nil,   292,   nil,   292,   nil,   292,   nil,
   nil,   292,   292,   nil,   303,   nil,   302,   nil,   302,   302,
   nil,   302,   302,   nil,   302,   nil,   302,   nil,   302,   nil,
   302,   nil,   nil,   302,   302,   303,   191,   303,   303,   nil,
   303,   303,   nil,   303,   nil,   303,   nil,   303,   nil,   303,
   nil,   nil,   303,   303,   nil,   311,   nil,   191,   nil,   191,
   191,   nil,   191,   191,   nil,   191,   nil,   191,   nil,   191,
   nil,   191,   nil,   nil,   191,   191,   311,   184,   311,   311,
   nil,   311,   311,   nil,   311,   nil,   311,   nil,   311,   nil,
   311,   nil,   nil,   311,   311,   nil,   313,   nil,   184,   nil,
   184,   184,   nil,   184,   184,   nil,   184,   nil,   184,   nil,
   184,   nil,   184,   nil,   nil,   184,   184,   313,   nil,   313,
   313,   nil,   313,   313,   nil,   313,   nil,   313,   nil,   313,
   nil,   313,   nil,   nil,   313,   313,     0,   nil,     0,     0,
   nil,     0,     0,   nil,     0,   nil,     0,   nil,     0,   nil,
     0,   nil,   nil,     0,     0,    19,   nil,    19,    19,   nil,
    19,    19,   nil,    19,   nil,    19,   nil,    19,   nil,    19,
   nil,   nil,    19,    19 ]

racc_action_pointer = [
  1278,   127,   358,   nil,   nil,    58,   352,   nil,   nil,   nil,
    23,   nil,   nil,   699,   nil,   343,   218,     6,   nil,  1297,
   632,   nil,   nil,   181,    70,   nil,   nil,    79,   271,   nil,
   nil,   nil,   nil,   536,   451,   273,   256,   nil,   515,   nil,
   nil,   nil,    24,   nil,   nil,   nil,   nil,   nil,   885,   nil,
   277,   592,   264,   252,   nil,   nil,   nil,   nil,   239,     8,
   236,   252,   nil,   232,   nil,   210,   nil,   195,   186,   nil,
   152,   152,   430,   nil,   nil,   576,   324,    50,    47,   207,
   231,   237,   242,   nil,    19,   105,   nil,   248,   725,   232,
    90,   nil,    69,   nil,   273,   278,   nil,   284,   nil,   281,
   nil,  1024,   976,   nil,   nil,    -5,   300,   nil,   137,   310,
   nil,   nil,   280,   299,   330,   320,     2,   nil,   347,   348,
   nil,   nil,   nil,   nil,   nil,   342,    29,   350,   nil,     2,
   321,   nil,   766,   nil,   220,   -31,   901,   846,   nil,   941,
     8,   nil,   nil,   nil,    51,    72,   133,   239,   377,   398,
   483,   345,   292,   271,   186,  1117,   504,   165,    -2,   129,
   234,   229,    25,   nil,   nil,    69,   nil,   nil,   nil,   nil,
   -11,   156,   853,   231,   -19,    56,   nil,   715,   709,    79,
    95,   nil,   nil,   nil,  1240,   156,   642,   184,   161,   163,
   nil,  1199,   nil,   nil,   nil,   188,   560,   nil,   nil,   nil,
   nil,   224,    -7,   nil,   nil,   nil,   nil,   nil,   764,   228,
   nil,   nil,   nil,   nil,   nil,   229,   298,    96,   140,   989,
   193,    26,   928,    90,   245,  1095,   238,    45,    72,   nil,
   nil,   271,   -20,   780,   782,   143,   nil,   nil,   nil,   nil,
   830,   nil,    77,   nil,   nil,   292,   293,   284,    67,   nil,
  1076,   nil,   nil,   nil,   nil,  1054,   nil,   nil,   nil,   nil,
   nil,   305,  1029,   nil,   nil,   nil,   nil,   204,   616,   293,
   nil,   317,   nil,   nil,   310,   nil,   311,   313,   314,   nil,
   315,   nil,   nil,   nil,   nil,   331,   805,   648,   693,   nil,
   nil,   139,  1136,   nil,   nil,   nil,   nil,   832,   352,   353,
   nil,   nil,  1158,  1177,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,  1218,   nil,  1259,   nil,   nil,   nil ]

racc_action_default = [
  -169,  -193,  -193,    -7,  -162,  -193,  -193,    -8,  -160,    -9,
  -193,   -10,   -11,  -161,   -12,  -193,  -193,  -193,   -13,    -1,
  -193,   -14,    -2,  -193,  -193,   -15,    -3,  -193,   -40,   -16,
    -5,   -17,    -6,  -193,  -193,   -79,  -169,  -161,   -72,  -167,
  -166,  -165,  -169,  -163,  -168,  -186,   -33,   -20,  -193,   -32,
   -21,  -193,   -63,   -22,  -102,   -23,  -104,  -103,   -25,   -62,
   -26,  -193,   -61,   -27,  -149,   -28,  -150,   -29,  -193,   -30,
   -31,  -193,  -193,  -112,   -97,  -193,  -193,   -91,   -95,   -92,
   -99,   -93,   -98,   -96,  -193,  -193,   -94,   -90,  -193,   -72,
  -169,   -42,  -169,    -4,  -193,  -153,  -151,  -193,   -39,  -169,
   -41,   -70,   -71,   -78,   -80,  -193,  -191,   -77,  -193,  -193,
  -182,   -63,   -59,   -65,  -191,   -68,   -62,   -57,   -66,  -193,
  -148,  -147,   -69,   -67,   -73,   -64,  -193,  -193,  -180,  -193,
  -193,   -19,  -193,   -82,  -193,  -193,  -193,  -193,   317,  -193,
  -193,  -188,  -126,  -119,  -193,  -193,  -193,  -193,  -193,  -193,
  -193,  -193,  -193,  -193,  -193,  -193,  -193,  -193,  -193,  -193,
  -191,  -193,  -169,   -46,   -48,  -193,   -55,   -62,   -54,   -45,
  -193,  -193,  -193,  -193,  -170,  -193,  -171,  -193,  -193,  -193,
  -192,  -183,  -184,  -185,  -193,  -193,   -60,  -193,  -192,   -72,
  -181,  -193,  -164,   -18,   -24,   -62,  -193,  -105,  -189,  -190,
   -34,  -193,  -193,  -101,  -138,  -143,  -146,  -144,  -193,  -193,
  -145,  -137,  -129,  -187,  -115,  -117,  -121,  -118,  -123,  -128,
  -125,  -122,  -127,  -124,  -120,  -193,  -109,  -113,  -114,  -116,
  -106,  -193,  -193,  -193,  -193,  -193,   -51,   -50,   -44,   -43,
  -193,  -131,  -193,  -135,  -152,  -179,  -177,  -193,  -193,  -174,
  -193,   -76,   -75,   -38,   -81,  -193,  -157,   -35,   -58,   -36,
   -74,  -191,  -193,  -159,   -83,  -100,  -140,  -191,  -193,  -109,
  -108,  -193,   -37,   -49,   -85,   -52,   -89,   -86,   -87,   -88,
   -84,   -53,   -47,  -132,  -130,  -193,  -193,  -193,  -193,  -172,
  -173,  -193,  -193,  -155,  -156,   -56,  -158,  -193,  -193,  -190,
  -142,  -107,  -193,  -193,  -136,  -178,  -176,  -175,  -154,  -141,
  -139,  -193,  -111,  -193,  -134,  -110,  -133 ]

racc_goto_table = [
     2,   179,    93,    17,   209,    43,    19,   204,    47,   187,
   249,   122,   104,    46,    36,    70,    22,   114,   107,     2,
   241,   170,    17,   171,   117,    96,   270,    97,    15,   134,
   275,   281,   282,   297,    91,   240,    99,   106,   185,   243,
   125,   211,   112,   130,   267,    95,    64,   175,    46,   109,
    70,    42,   110,   140,   127,   231,   194,   247,   128,    67,
   248,    98,   181,   nil,   nil,   nil,   159,   nil,   160,   301,
    69,    64,   nil,   nil,   nil,   209,   nil,   nil,   266,   nil,
   nil,    64,   nil,   nil,   121,   nil,   nil,   nil,   283,   nil,
   nil,   nil,   nil,   232,    67,   123,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,    69,   nil,   243,   nil,   nil,
   nil,    94,   nil,   nil,   nil,   176,   nil,   182,   nil,   nil,
   nil,   190,   nil,   nil,   192,    65,   nil,   307,   nil,   nil,
   nil,   202,   nil,   nil,    70,   200,    46,   nil,    70,   210,
   nil,   nil,   133,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   120,   nil,   nil,   304,   nil,     2,   295,   254,    17,   122,
    65,   225,   298,   107,   209,    64,   133,   309,   261,    64,
    64,   260,   258,   nil,   210,   244,   nil,   nil,    67,   133,
   nil,   nil,    67,   121,     2,   nil,   nil,    17,   125,    69,
   255,     2,   nil,    69,    17,   nil,   nil,   262,   nil,    60,
   nil,   nil,    63,   nil,   nil,    64,   nil,   nil,    93,   nil,
   210,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   121,    64,
   nil,   nil,   nil,   nil,   115,     2,   nil,   118,    17,   nil,
   nil,   nil,   121,   nil,    60,   280,   280,    63,    93,   nil,
   nil,    64,   210,   123,    65,    93,   nil,   nil,    65,   120,
     2,   nil,   nil,    17,   121,     2,   292,   nil,    17,   nil,
   nil,   nil,     2,   nil,   nil,    17,    64,    64,   251,   252,
   nil,   nil,   nil,    64,   nil,    93,   168,   nil,   168,   121,
   121,   nil,   nil,   nil,   120,   nil,   121,   264,   210,   nil,
   279,   279,     2,   nil,    93,    17,    93,   nil,   120,   210,
   nil,   nil,     2,     2,   nil,    17,    17,   nil,   311,   313,
   nil,     2,    58,     2,    17,   nil,    17,    85,    60,    64,
   120,    63,    60,   206,   nil,    63,   207,   nil,   nil,   nil,
    64,   nil,   121,   nil,   101,   102,   nil,   113,   nil,   nil,
   nil,   nil,   nil,   121,   nil,   278,   278,    58,   168,   nil,
   nil,   nil,   120,   nil,   nil,   nil,   nil,   nil,   206,   300,
   nil,   207,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   115,   139,   nil,   118,   nil,   142,   305,   306,
   nil,   nil,   nil,   nil,   nil,   143,   nil,   nil,   nil,   166,
   nil,   166,   nil,   nil,   206,   nil,   nil,   207,   120,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   120,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   276,
   276,   168,   277,   277,   nil,   nil,   206,   nil,   nil,   207,
   nil,    58,   nil,   nil,   nil,    58,   205,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   214,   215,   216,   217,   218,
   219,   220,   221,   222,   223,   224,   nil,   227,   228,   229,
   nil,   166,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   205,   206,   nil,   nil,   207,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   206,   nil,   113,   207,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   205,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   274,   274,   166,   nil,   nil,   nil,   nil,   205,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   205,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   205 ]

racc_goto_check = [
    29,    34,     4,    35,    60,    69,     2,    62,    18,    34,
    72,    48,    53,    29,    30,    28,     3,    33,    50,    29,
    58,    39,    35,    39,    45,    28,    56,    35,     1,    54,
    44,    44,    40,    55,    38,    57,    30,    36,    32,    60,
    28,    61,    31,    18,    63,    64,    47,    65,    29,    66,
    28,    67,     3,    54,    68,    34,    21,    70,     3,    26,
    71,     5,    73,   nil,   nil,   nil,    54,   nil,    33,    56,
    27,    47,   nil,   nil,   nil,    60,   nil,   nil,    62,   nil,
   nil,    47,   nil,   nil,    26,   nil,   nil,   nil,    58,   nil,
   nil,   nil,   nil,    39,    26,    27,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,    27,   nil,    60,   nil,   nil,
   nil,    51,   nil,   nil,   nil,     3,   nil,    30,   nil,   nil,
   nil,    69,   nil,   nil,    69,    25,   nil,    72,   nil,   nil,
   nil,    18,   nil,   nil,    28,    29,    29,   nil,    28,    28,
   nil,   nil,    51,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
    25,   nil,   nil,    60,   nil,    29,    34,    53,    35,    48,
    25,     2,    34,    50,    60,    47,    51,    62,    33,    47,
    47,    50,    45,   nil,    28,    28,   nil,   nil,    26,    51,
   nil,   nil,    26,    26,    29,   nil,   nil,    35,    28,    27,
     2,    29,   nil,    27,    35,   nil,   nil,     2,   nil,    23,
   nil,   nil,    24,   nil,   nil,    47,   nil,   nil,     4,   nil,
    28,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    26,    47,
   nil,   nil,   nil,   nil,    23,    29,   nil,    24,    35,   nil,
   nil,   nil,    26,   nil,    23,    28,    28,    24,     4,   nil,
   nil,    47,    28,    27,    25,     4,   nil,   nil,    25,    25,
    29,   nil,   nil,    35,    26,    29,     2,   nil,    35,   nil,
   nil,   nil,    29,   nil,   nil,    35,    47,    47,    51,    51,
   nil,   nil,   nil,    47,   nil,     4,    23,   nil,    23,    26,
    26,   nil,   nil,   nil,    25,   nil,    26,    51,    28,   nil,
    27,    27,    29,   nil,     4,    35,     4,   nil,    25,    28,
   nil,   nil,    29,    29,   nil,    35,    35,   nil,     2,     2,
   nil,    29,    22,    29,    35,   nil,    35,    49,    23,    47,
    25,    24,    23,    23,   nil,    24,    24,   nil,   nil,   nil,
    47,   nil,    26,   nil,    49,    49,   nil,    22,   nil,   nil,
   nil,   nil,   nil,    26,   nil,    25,    25,    22,    23,   nil,
   nil,   nil,    25,   nil,   nil,   nil,   nil,   nil,    23,    51,
   nil,    24,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,    23,    49,   nil,    24,   nil,    49,    51,    51,
   nil,   nil,   nil,   nil,   nil,    49,   nil,   nil,   nil,    22,
   nil,    22,   nil,   nil,    23,   nil,   nil,    24,    25,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    25,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    23,
    23,    23,    24,    24,   nil,   nil,    23,   nil,   nil,    24,
   nil,    22,   nil,   nil,   nil,    22,    22,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,    49,    49,    49,    49,    49,
    49,    49,    49,    49,    49,    49,   nil,    49,    49,    49,
   nil,    22,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,    22,    23,   nil,   nil,    24,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,    23,   nil,    22,    24,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,    22,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,    22,    22,    22,   nil,   nil,   nil,   nil,    22,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,    22,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,    22 ]

racc_goto_pointer = [
   nil,    28,     6,    16,   -17,    37,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    -5,   nil,
   nil,   -76,   299,   186,   189,   112,    46,    57,     2,     0,
     9,     4,   -74,   -21,  -105,     3,     2,   nil,    17,   -69,
  -203,   nil,   nil,   nil,  -203,   -14,   nil,    33,   -27,   301,
   -17,    91,   nil,   -23,   -22,  -234,  -200,  -137,  -152,   nil,
  -133,   -96,  -130,  -164,    22,   -52,    13,    41,    12,    -5,
  -117,  -114,  -164,   -46 ]

racc_goto_default = [
   nil,   nil,   nil,   169,    26,    30,    32,     3,     7,     9,
    11,    12,    14,    18,    21,    25,    29,    31,   nil,    50,
    53,    55,    77,    78,    79,    81,    82,    86,    87,    74,
     6,   nil,   nil,   nil,   nil,    61,   nil,    24,   nil,   nil,
   163,   235,   164,   165,   nil,   nil,   119,    80,    83,   nil,
   124,    73,   103,   nil,   nil,   196,   nil,   nil,   nil,   242,
    68,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil ]

racc_token_table = {
 false => 0,
 Object.new => 1,
 :LBRACK => 2,
 :DQTEXT => 3,
 :SQTEXT => 4,
 :RBRACK => 5,
 :LBRACE => 6,
 :RBRACE => 7,
 :SYMBOL => 8,
 :FARROW => 9,
 :COMMA => 10,
 :TRUE => 11,
 :FALSE => 12,
 :EQUALS => 13,
 :APPENDS => 14,
 :LESSEQUAL => 15,
 :NOTEQUAL => 16,
 :DOT => 17,
 :COLON => 18,
 :LLCOLLECT => 19,
 :RRCOLLECT => 20,
 :QMARK => 21,
 :LPAREN => 22,
 :RPAREN => 23,
 :ISEQUAL => 24,
 :GREATEREQUAL => 25,
 :GREATERTHAN => 26,
 :LESSTHAN => 27,
 :IF => 28,
 :ELSE => 29,
 :IMPORT => 30,
 :DEFINE => 31,
 :ELSIF => 32,
 :VARIABLE => 33,
 :CLASS => 34,
 :INHERITS => 35,
 :NODE => 36,
 :BOOLEAN => 37,
 :NAME => 38,
 :SEMIC => 39,
 :CASE => 40,
 :DEFAULT => 41,
 :AT => 42,
 :LCOLLECT => 43,
 :RCOLLECT => 44,
 :CLASSNAME => 45,
 :CLASSREF => 46,
 :NOT => 47,
 :OR => 48,
 :AND => 49,
 :UNDEF => 50,
 :PARROW => 51,
 :PLUS => 52,
 :MINUS => 53,
 :TIMES => 54,
 :DIV => 55,
 :LSHIFT => 56,
 :RSHIFT => 57,
 :UMINUS => 58 }

racc_use_result_var = true

racc_nt_base = 59

Racc_arg = [
 racc_action_table,
 racc_action_check,
 racc_action_default,
 racc_action_pointer,
 racc_goto_table,
 racc_goto_check,
 racc_goto_default,
 racc_goto_pointer,
 racc_nt_base,
 racc_reduce_table,
 racc_token_table,
 racc_shift_n,
 racc_reduce_n,
 racc_use_result_var ]

Racc_token_to_s_table = [
'$end',
'error',
'LBRACK',
'DQTEXT',
'SQTEXT',
'RBRACK',
'LBRACE',
'RBRACE',
'SYMBOL',
'FARROW',
'COMMA',
'TRUE',
'FALSE',
'EQUALS',
'APPENDS',
'LESSEQUAL',
'NOTEQUAL',
'DOT',
'COLON',
'LLCOLLECT',
'RRCOLLECT',
'QMARK',
'LPAREN',
'RPAREN',
'ISEQUAL',
'GREATEREQUAL',
'GREATERTHAN',
'LESSTHAN',
'IF',
'ELSE',
'IMPORT',
'DEFINE',
'ELSIF',
'VARIABLE',
'CLASS',
'INHERITS',
'NODE',
'BOOLEAN',
'NAME',
'SEMIC',
'CASE',
'DEFAULT',
'AT',
'LCOLLECT',
'RCOLLECT',
'CLASSNAME',
'CLASSREF',
'NOT',
'OR',
'AND',
'UNDEF',
'PARROW',
'PLUS',
'MINUS',
'TIMES',
'DIV',
'LSHIFT',
'RSHIFT',
'UMINUS',
'$start',
'program',
'statements',
'nil',
'statement',
'resource',
'virtualresource',
'collection',
'assignment',
'casestatement',
'ifstatement',
'import',
'fstatement',
'definition',
'hostclass',
'nodedef',
'resourceoverride',
'append',
'funcvalues',
'namestrings',
'resourcerefs',
'namestring',
'name',
'variable',
'type',
'boolean',
'funcrvalue',
'selector',
'quotedtext',
'resourceref',
'classname',
'resourceinstances',
'endsemi',
'params',
'endcomma',
'classref',
'anyparams',
'at',
'collectrhand',
'collstatements',
'collstatement',
'colljoin',
'collexpr',
'colllval',
'simplervalue',
'resourceinst',
'resourcename',
'undef',
'array',
'expression',
'param',
'rvalue',
'addparam',
'anyparam',
'rvalues',
'comma',
'else',
'caseopts',
'caseopt',
'casevalues',
'selectlhand',
'svalues',
'selectval',
'sintvalues',
'qtexts',
'argumentlist',
'classparent',
'hostnames',
'nodeparent',
'hostname',
'nothing',
'arguments',
'argument',
'classnameordefault']

Racc_debug_parser = false

##### racc system variables end #####

 # reduce 0 omitted

module_eval <<'.,.,', 'grammar.ra', 42
  def _reduce_1( val, _values, result )
    if val[0]
        # Make sure we always return an array.
        if val[0].is_a?(AST::ASTArray)
            if val[0].children.empty?
                result = nil
            else
                result = val[0]
            end
        else
            result = aryfy(val[0])
        end
    else
        result = nil
    end
   result
  end
.,.,

 # reduce 2 omitted

 # reduce 3 omitted

module_eval <<'.,.,', 'grammar.ra', 58
  def _reduce_4( val, _values, result )
    if val[0] and val[1]
        if val[0].instance_of?(AST::ASTArray)
            val[0].push(val[1])
            result = val[0]
        else
            result = ast AST::ASTArray, :children => [val[0],val[1]]
        end
    elsif obj = (val[0] || val[1])
        result = obj
    else result = nil
    end
   result
  end
.,.,

 # reduce 5 omitted

 # reduce 6 omitted

 # reduce 7 omitted

 # reduce 8 omitted

 # reduce 9 omitted

 # reduce 10 omitted

 # reduce 11 omitted

 # reduce 12 omitted

 # reduce 13 omitted

 # reduce 14 omitted

 # reduce 15 omitted

 # reduce 16 omitted

 # reduce 17 omitted

module_eval <<'.,.,', 'grammar.ra', 81
  def _reduce_18( val, _values, result )
    args = aryfy(val[2])
    result = ast AST::Function,
        :name => val[0],
        :arguments => args,
        :ftype => :statement
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 87
  def _reduce_19( val, _values, result )
    result = ast AST::Function,
        :name => val[0],
        :arguments => AST::ASTArray.new({}),
        :ftype => :statement
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 94
  def _reduce_20( val, _values, result )
    args = aryfy(val[1])
    result = ast AST::Function,
        :name => val[0],
        :arguments => args,
        :ftype => :statement
   result
  end
.,.,

 # reduce 21 omitted

 # reduce 22 omitted

 # reduce 23 omitted

module_eval <<'.,.,', 'grammar.ra', 104
  def _reduce_24( val, _values, result )
    result = aryfy(val[0], val[2])
    result.line = @lexer.line
    result.file = @lexer.file
   result
  end
.,.,

 # reduce 25 omitted

 # reduce 26 omitted

 # reduce 27 omitted

 # reduce 28 omitted

 # reduce 29 omitted

 # reduce 30 omitted

 # reduce 31 omitted

module_eval <<'.,.,', 'grammar.ra', 117
  def _reduce_32( val, _values, result )
                    result = ast AST::Name, :value => val[0]
   result
  end
.,.,

 # reduce 33 omitted

module_eval <<'.,.,', 'grammar.ra', 128
  def _reduce_34( val, _values, result )
    unless val[0].is_a?(AST::ASTArray)
        val[0] = aryfy(val[0])
    end

    val[0].push(val[2])

    result = val[0]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 149
  def _reduce_35( val, _values, result )
    array = val[2]
    if array.instance_of?(AST::ResourceInstance)
        array = [array]
    end
    result = ast AST::ASTArray

    # this iterates across each specified resourceinstance
    array.each { |instance|
        unless instance.instance_of?(AST::ResourceInstance)
            raise Puppet::Dev, "Got something that isn't an instance"
        end
        # now, i need to somehow differentiate between those things with
        # arrays in their names, and normal things
        result.push ast(AST::Resource,
            :type => val[0],
            :title => instance[0],
            :params => instance[1])
    }
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 152
  def _reduce_36( val, _values, result )
    # This is a deprecated syntax.
    error "All resource specifications require names"
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 155
  def _reduce_37( val, _values, result )
    # a defaults setting for a type
    result = ast(AST::ResourceDefaults, :type => val[0], :params => val[2])
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 160
  def _reduce_38( val, _values, result )
    result = ast AST::ResourceOverride, :object => val[0], :params => val[2]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 187
  def _reduce_39( val, _values, result )
    type = val[0]

    if (type == :exported and ! Puppet[:storeconfigs]) and ! Puppet[:parseonly]
        Puppet.warning addcontext("You cannot collect without storeconfigs being set")
    end

    if val[1].is_a? AST::ResourceDefaults
        error "Defaults are not virtualizable"
    end

    method = type.to_s + "="

    # Just mark our resources as exported and pass them through.
    if val[1].instance_of?(AST::ASTArray)
        val[1].each do |obj|
            obj.send(method, true)
        end
    else
        val[1].send(method, true)
    end

    result = val[1]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 188
  def _reduce_40( val, _values, result )
 result = :virtual
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 189
  def _reduce_41( val, _values, result )
 result = :exported
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 212
  def _reduce_42( val, _values, result )
    if val[0] =~ /^[a-z]/
        Puppet.warning addcontext("Collection names must now be capitalized")
    end
    type = val[0].downcase
    args = {:type => type}

    if val[1].is_a?(AST::CollExpr)
        args[:query] = val[1]
        args[:query].type = type
        args[:form] = args[:query].form
    else
        args[:form] = val[1]
    end
    if args[:form] == :exported and ! Puppet[:storeconfigs] and ! Puppet[:parseonly]
        Puppet.warning addcontext("You cannot collect exported resources without storeconfigs being set; the collection will be ignored")
    end
    result = ast AST::Collection, args
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 222
  def _reduce_43( val, _values, result )
    if val[1]
        result = val[1]
        result.form = :virtual
    else
        result = :virtual
    end
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 230
  def _reduce_44( val, _values, result )
    if val[1]
        result = val[1]
        result.form = :exported
    else
        result = :exported
    end
   result
  end
.,.,

 # reduce 45 omitted

 # reduce 46 omitted

module_eval <<'.,.,', 'grammar.ra', 238
  def _reduce_47( val, _values, result )
    result = ast AST::CollExpr, :test1 => val[0], :oper => val[1], :test2 => val[2]
   result
  end
.,.,

 # reduce 48 omitted

module_eval <<'.,.,', 'grammar.ra', 244
  def _reduce_49( val, _values, result )
    result = val[1]
    result.parens = true
   result
  end
.,.,

 # reduce 50 omitted

 # reduce 51 omitted

module_eval <<'.,.,', 'grammar.ra', 252
  def _reduce_52( val, _values, result )
    result = ast AST::CollExpr, :test1 => val[0], :oper => val[1], :test2 => val[2]
    #result = ast AST::CollExpr
    #result.push *val
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 257
  def _reduce_53( val, _values, result )
    result = ast AST::CollExpr, :test1 => val[0], :oper => val[1], :test2 => val[2]
    #result = ast AST::CollExpr
    #result.push *val
   result
  end
.,.,

 # reduce 54 omitted

 # reduce 55 omitted

module_eval <<'.,.,', 'grammar.ra', 264
  def _reduce_56( val, _values, result )
    result = ast AST::ResourceInstance, :children => [val[0],val[2]]
   result
  end
.,.,

 # reduce 57 omitted

module_eval <<'.,.,', 'grammar.ra', 274
  def _reduce_58( val, _values, result )
    if val[0].instance_of?(AST::ResourceInstance)
        result = ast AST::ASTArray, :children => [val[0],val[2]]
    else
        val[0].push val[2]
        result = val[0]
    end
   result
  end
.,.,

 # reduce 59 omitted

 # reduce 60 omitted

module_eval <<'.,.,', 'grammar.ra', 281
  def _reduce_61( val, _values, result )
    result = ast AST::Undef, :value => :undef
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 285
  def _reduce_62( val, _values, result )
    result = ast AST::Name, :value => val[0]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 289
  def _reduce_63( val, _values, result )
    result = ast AST::Type, :value => val[0]
   result
  end
.,.,

 # reduce 64 omitted

 # reduce 65 omitted

 # reduce 66 omitted

 # reduce 67 omitted

 # reduce 68 omitted

 # reduce 69 omitted

module_eval <<'.,.,', 'grammar.ra', 305
  def _reduce_70( val, _values, result )
    if val[0] =~ /::/
        raise Puppet::ParseError, "Cannot assign to variables in other namespaces"
    end
    # this is distinct from referencing a variable
    variable = ast AST::Name, :value => val[0]
    result = ast AST::VarDef, :name => variable, :value => val[2]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 310
  def _reduce_71( val, _values, result )
    variable = ast AST::Name, :value => val[0]
    result = ast AST::VarDef, :name => variable, :value => val[2], :append => true
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 315
  def _reduce_72( val, _values, result )
    result = ast AST::ASTArray
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 315
  def _reduce_73( val, _values, result )
 result = val[0]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 324
  def _reduce_74( val, _values, result )
    if val[0].instance_of?(AST::ASTArray)
        val[0].push(val[2])
        result = val[0]
    else
        result = ast AST::ASTArray, :children => [val[0],val[2]]
    end
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 328
  def _reduce_75( val, _values, result )
    result = ast AST::ResourceParam, :param => val[0], :value => val[2]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 333
  def _reduce_76( val, _values, result )
    result = ast AST::ResourceParam, :param => val[0], :value => val[2],
                                     :add => true
   result
  end
.,.,

 # reduce 77 omitted

 # reduce 78 omitted

module_eval <<'.,.,', 'grammar.ra', 341
  def _reduce_79( val, _values, result )
    result = ast AST::ASTArray
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 341
  def _reduce_80( val, _values, result )
 result = val[0]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 350
  def _reduce_81( val, _values, result )
    if val[0].instance_of?(AST::ASTArray)
        val[0].push(val[2])
        result = val[0]
    else
        result = ast AST::ASTArray, :children => [val[0],val[2]]
    end
   result
  end
.,.,

 # reduce 82 omitted

module_eval <<'.,.,', 'grammar.ra', 359
  def _reduce_83( val, _values, result )
    if val[0].instance_of?(AST::ASTArray)
        result = val[0].push(val[2])
    else
        result = ast AST::ASTArray, :children => [val[0],val[2]]
    end
   result
  end
.,.,

 # reduce 84 omitted

 # reduce 85 omitted

 # reduce 86 omitted

 # reduce 87 omitted

 # reduce 88 omitted

 # reduce 89 omitted

 # reduce 90 omitted

 # reduce 91 omitted

 # reduce 92 omitted

 # reduce 93 omitted

 # reduce 94 omitted

 # reduce 95 omitted

 # reduce 96 omitted

 # reduce 97 omitted

 # reduce 98 omitted

 # reduce 99 omitted

module_eval <<'.,.,', 'grammar.ra', 386
  def _reduce_100( val, _values, result )
    args = aryfy(val[2])
    result = ast AST::Function,
        :name => val[0],
        :arguments => args,
        :ftype => :rvalue
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 391
  def _reduce_101( val, _values, result )
    result = ast AST::Function,
        :name => val[0],
        :arguments => AST::ASTArray.new({}),
        :ftype => :rvalue
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 395
  def _reduce_102( val, _values, result )
    result = ast AST::String, :value => val[0]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 397
  def _reduce_103( val, _values, result )
    result = ast AST::FlatString, :value => val[0]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 401
  def _reduce_104( val, _values, result )
    result = ast AST::Boolean, :value => val[0]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 406
  def _reduce_105( val, _values, result )
    Puppet.warning addcontext("Deprecation notice:  Resource references should now be capitalized")
    result = ast AST::ResourceReference, :type => val[0], :title => val[2]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 408
  def _reduce_106( val, _values, result )
    result = ast AST::ResourceReference, :type => val[0], :title => val[2]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 421
  def _reduce_107( val, _values, result )
    args = {
        :test => val[1],
        :statements => val[3]
    }

    if val[5]
        args[:else] = val[5]
    end

    result = ast AST::IfStatement, args
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 433
  def _reduce_108( val, _values, result )
    args = {
        :test => val[1],
        :statements => ast(AST::Nop)
    }

    if val[4]
        args[:else] = val[4]
    end

    result = ast AST::IfStatement, args
   result
  end
.,.,

 # reduce 109 omitted

module_eval <<'.,.,', 'grammar.ra', 438
  def _reduce_110( val, _values, result )
    result = ast AST::Else, :statements => val[2]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 441
  def _reduce_111( val, _values, result )
    result = ast AST::Else, :statements => ast(AST::Nop)
   result
  end
.,.,

 # reduce 112 omitted

module_eval <<'.,.,', 'grammar.ra', 458
  def _reduce_113( val, _values, result )
    result = ast AST::ArithmeticOperator, :operator => val[1], :lval => val[0], :rval => val[2]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 461
  def _reduce_114( val, _values, result )
    result = ast AST::ArithmeticOperator, :operator => val[1], :lval => val[0], :rval => val[2]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 464
  def _reduce_115( val, _values, result )
    result = ast AST::ArithmeticOperator, :operator => val[1], :lval => val[0], :rval => val[2]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 467
  def _reduce_116( val, _values, result )
    result = ast AST::ArithmeticOperator, :operator => val[1], :lval => val[0], :rval => val[2]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 470
  def _reduce_117( val, _values, result )
    result = ast AST::ArithmeticOperator, :operator => val[1], :lval => val[0], :rval => val[2]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 473
  def _reduce_118( val, _values, result )
    result = ast AST::ArithmeticOperator, :operator => val[1], :lval => val[0], :rval => val[2]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 476
  def _reduce_119( val, _values, result )
    result = ast AST::Minus, :value => val[1]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 479
  def _reduce_120( val, _values, result )
    result = ast AST::ComparisonOperator, :operator => val[1], :lval => val[0], :rval => val[2]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 482
  def _reduce_121( val, _values, result )
    result = ast AST::ComparisonOperator, :operator => val[1], :lval => val[0], :rval => val[2]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 485
  def _reduce_122( val, _values, result )
    result = ast AST::ComparisonOperator, :operator => val[1], :lval => val[0], :rval => val[2]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 488
  def _reduce_123( val, _values, result )
    result = ast AST::ComparisonOperator, :operator => val[1], :lval => val[0], :rval => val[2]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 491
  def _reduce_124( val, _values, result )
    result = ast AST::ComparisonOperator, :operator => val[1], :lval => val[0], :rval => val[2]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 494
  def _reduce_125( val, _values, result )
    result = ast AST::ComparisonOperator, :operator => val[1], :lval => val[0], :rval => val[2]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 497
  def _reduce_126( val, _values, result )
    result = ast AST::Not, :value => val[1]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 500
  def _reduce_127( val, _values, result )
    result = ast AST::BooleanOperator, :operator => val[1], :lval => val[0], :rval => val[2]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 503
  def _reduce_128( val, _values, result )
    result = ast AST::BooleanOperator, :operator => val[1], :lval => val[0], :rval => val[2]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 506
  def _reduce_129( val, _values, result )
    result = val[1]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 514
  def _reduce_130( val, _values, result )
    options = val[3]
    unless options.instance_of?(AST::ASTArray)
        options = ast AST::ASTArray, :children => [val[3]]
    end
    result = ast AST::CaseStatement, :test => val[1], :options => options
   result
  end
.,.,

 # reduce 131 omitted

module_eval <<'.,.,', 'grammar.ra', 524
  def _reduce_132( val, _values, result )
    if val[0].instance_of?(AST::ASTArray)
        val[0].push val[1]
        result = val[0]
    else
        result = ast AST::ASTArray, :children => [val[0], val[1]]
    end
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 528
  def _reduce_133( val, _values, result )
    result = ast AST::CaseOpt, :value => val[0], :statements => val[3]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 533
  def _reduce_134( val, _values, result )
    result = ast(AST::CaseOpt,
        :value => val[0],
        :statements => ast(AST::ASTArray)
    )
   result
  end
.,.,

 # reduce 135 omitted

module_eval <<'.,.,', 'grammar.ra', 543
  def _reduce_136( val, _values, result )
    if val[0].instance_of?(AST::ASTArray)
        val[0].push(val[2])
        result = val[0]
    else
        result = ast AST::ASTArray, :children => [val[0],val[2]]
    end
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 547
  def _reduce_137( val, _values, result )
    result = ast AST::Selector, :param => val[0], :values => val[2]
   result
  end
.,.,

 # reduce 138 omitted

module_eval <<'.,.,', 'grammar.ra', 549
  def _reduce_139( val, _values, result )
 result = val[1]
   result
  end
.,.,

 # reduce 140 omitted

module_eval <<'.,.,', 'grammar.ra', 560
  def _reduce_141( val, _values, result )
    if val[0].instance_of?(AST::ASTArray)
        val[0].push(val[2])
        result = val[0]
    else
        result = ast AST::ASTArray, :children => [val[0],val[2]]
    end
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 564
  def _reduce_142( val, _values, result )
    result = ast AST::ResourceParam, :param => val[0], :value => val[2]
   result
  end
.,.,

 # reduce 143 omitted

 # reduce 144 omitted

 # reduce 145 omitted

 # reduce 146 omitted

 # reduce 147 omitted

 # reduce 148 omitted

 # reduce 149 omitted

module_eval <<'.,.,', 'grammar.ra', 575
  def _reduce_150( val, _values, result )
    result = ast AST::Default, :value => val[0]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 577
  def _reduce_151( val, _values, result )
 result = [val[0].value]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 581
  def _reduce_152( val, _values, result )
    results = val[0] << val[2].value
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 589
  def _reduce_153( val, _values, result )
    val[1].each do |file|
        import(file)
    end

    result = AST::ASTArray.new(:children => [])
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 599
  def _reduce_154( val, _values, result )
    newdefine classname(val[1]), :arguments => val[2], :code => val[4]
    @lexer.indefine = false
    result = nil

#}           | DEFINE NAME argumentlist parent LBRACE RBRACE {
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 603
  def _reduce_155( val, _values, result )
    newdefine classname(val[1]), :arguments => val[2]
    @lexer.indefine = false
    result = nil
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 611
  def _reduce_156( val, _values, result )
    # Our class gets defined in the parent namespace, not our own.
    @lexer.namepop
    newclass classname(val[1]), :code => val[4], :parent => val[2]
    result = nil
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 616
  def _reduce_157( val, _values, result )
    # Our class gets defined in the parent namespace, not our own.
    @lexer.namepop
    newclass classname(val[1]), :parent => val[2]
    result = nil
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 621
  def _reduce_158( val, _values, result )
    newnode val[1], :parent => val[2], :code => val[4]
    result = nil
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 624
  def _reduce_159( val, _values, result )
    newnode val[1], :parent => val[2]
    result = nil
   result
  end
.,.,

 # reduce 160 omitted

 # reduce 161 omitted

 # reduce 162 omitted

 # reduce 163 omitted

module_eval <<'.,.,', 'grammar.ra', 638
  def _reduce_164( val, _values, result )
    result = val[0]
    result = [result] unless result.is_a?(Array)
    result << val[2]
   result
  end
.,.,

 # reduce 165 omitted

 # reduce 166 omitted

 # reduce 167 omitted

 # reduce 168 omitted

module_eval <<'.,.,', 'grammar.ra', 647
  def _reduce_169( val, _values, result )
    result = nil
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 651
  def _reduce_170( val, _values, result )
    result = ast AST::ASTArray, :children => []
   result
  end
.,.,

 # reduce 171 omitted

module_eval <<'.,.,', 'grammar.ra', 656
  def _reduce_172( val, _values, result )
    result = nil
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 660
  def _reduce_173( val, _values, result )
    result = val[1]
    result = [result] unless result[0].is_a?(Array)
   result
  end
.,.,

 # reduce 174 omitted

module_eval <<'.,.,', 'grammar.ra', 667
  def _reduce_175( val, _values, result )
    result = val[0]
    result = [result] unless result[0].is_a?(Array)
    result << val[2]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 672
  def _reduce_176( val, _values, result )
    Puppet.warning addcontext("Deprecation notice: must now include '$' in prototype")
    result = [val[0], val[2]]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 676
  def _reduce_177( val, _values, result )
    Puppet.warning addcontext("Deprecation notice: must now include '$' in prototype")
    result = [val[0]]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 678
  def _reduce_178( val, _values, result )
    result = [val[0], val[2]]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 680
  def _reduce_179( val, _values, result )
    result = [val[0]]
   result
  end
.,.,

 # reduce 180 omitted

module_eval <<'.,.,', 'grammar.ra', 685
  def _reduce_181( val, _values, result )
    result = val[1]
   result
  end
.,.,

 # reduce 182 omitted

module_eval <<'.,.,', 'grammar.ra', 690
  def _reduce_183( val, _values, result )
    result = val[1]
   result
  end
.,.,

 # reduce 184 omitted

 # reduce 185 omitted

module_eval <<'.,.,', 'grammar.ra', 696
  def _reduce_186( val, _values, result )
    result = ast AST::Variable, :value => val[0]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 704
  def _reduce_187( val, _values, result )
    if val[1].instance_of?(AST::ASTArray)
        result = val[1]
    else
        result = ast AST::ASTArray, :children => [val[1]]
    end
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 706
  def _reduce_188( val, _values, result )
    result = ast AST::ASTArray
   result
  end
.,.,

 # reduce 189 omitted

 # reduce 190 omitted

 # reduce 191 omitted

module_eval <<'.,.,', 'grammar.ra', 711
  def _reduce_192( val, _values, result )
 result = nil
   result
  end
.,.,

 def _reduce_none( val, _values, result )
  result
 end

    end   # class Parser

  end   # module Parser

end   # module Puppet
