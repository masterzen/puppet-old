#
# DO NOT MODIFY!!!!
# This file is automatically generated by racc 1.4.5
# from racc grammer file "grammar.ra".
#

require 'racc/parser'


require 'puppet'
require 'puppet/util/loadedfile'
require 'puppet/parser/lexer'
require 'puppet/parser/ast'
#require 'puppet/parser/interpreter'

module Puppet
    class ParseError < Puppet::Error; end
    class ImportError < Racc::ParseError; end
    class AlreadyImportedError < ImportError; end
end

Puppet[:typecheck] = true
Puppet[:paramcheck] = true


module Puppet

  module Parser

    class Parser < Racc::Parser

module_eval <<'..end grammar.ra modeval..id57592b0044', 'grammar.ra', 689

# It got too annoying having code in a file that needs to be compiled.
require 'puppet/parser/parser_support'

# Make emacs happy
# Local Variables:
# mode: ruby
# End:

# $Id$

..end grammar.ra modeval..id57592b0044

##### racc 1.4.5 generates ###

racc_reduce_table = [
 0, 0, :racc_error,
 1, 60, :_reduce_1,
 1, 60, :_reduce_none,
 1, 61, :_reduce_none,
 2, 61, :_reduce_4,
 1, 63, :_reduce_none,
 1, 63, :_reduce_none,
 1, 63, :_reduce_none,
 1, 63, :_reduce_none,
 1, 63, :_reduce_none,
 1, 63, :_reduce_none,
 1, 63, :_reduce_none,
 1, 63, :_reduce_none,
 1, 63, :_reduce_none,
 1, 63, :_reduce_none,
 1, 63, :_reduce_none,
 1, 63, :_reduce_none,
 1, 63, :_reduce_none,
 4, 71, :_reduce_18,
 3, 71, :_reduce_19,
 2, 71, :_reduce_20,
 1, 77, :_reduce_none,
 1, 77, :_reduce_none,
 1, 78, :_reduce_none,
 3, 78, :_reduce_24,
 1, 80, :_reduce_none,
 1, 80, :_reduce_none,
 1, 80, :_reduce_none,
 1, 80, :_reduce_none,
 1, 80, :_reduce_none,
 1, 80, :_reduce_none,
 1, 80, :_reduce_none,
 1, 80, :_reduce_32,
 1, 79, :_reduce_none,
 3, 79, :_reduce_34,
 5, 64, :_reduce_35,
 5, 64, :_reduce_36,
 5, 64, :_reduce_37,
 5, 75, :_reduce_38,
 2, 65, :_reduce_39,
 1, 96, :_reduce_40,
 2, 96, :_reduce_41,
 2, 66, :_reduce_42,
 3, 97, :_reduce_43,
 3, 97, :_reduce_44,
 1, 98, :_reduce_none,
 1, 98, :_reduce_none,
 3, 98, :_reduce_47,
 1, 99, :_reduce_none,
 3, 99, :_reduce_49,
 1, 100, :_reduce_none,
 1, 100, :_reduce_none,
 3, 101, :_reduce_52,
 3, 101, :_reduce_53,
 1, 102, :_reduce_none,
 1, 102, :_reduce_none,
 4, 104, :_reduce_56,
 1, 90, :_reduce_none,
 3, 90, :_reduce_58,
 0, 91, :_reduce_none,
 1, 91, :_reduce_none,
 1, 106, :_reduce_61,
 1, 81, :_reduce_62,
 1, 83, :_reduce_63,
 1, 105, :_reduce_none,
 1, 105, :_reduce_none,
 1, 105, :_reduce_none,
 1, 105, :_reduce_none,
 1, 105, :_reduce_none,
 1, 105, :_reduce_none,
 3, 67, :_reduce_70,
 3, 76, :_reduce_71,
 0, 92, :_reduce_72,
 1, 92, :_reduce_73,
 3, 92, :_reduce_74,
 3, 109, :_reduce_75,
 3, 111, :_reduce_76,
 1, 112, :_reduce_none,
 1, 112, :_reduce_none,
 0, 95, :_reduce_79,
 1, 95, :_reduce_80,
 3, 95, :_reduce_81,
 1, 113, :_reduce_none,
 3, 113, :_reduce_83,
 1, 103, :_reduce_none,
 1, 103, :_reduce_none,
 1, 103, :_reduce_none,
 1, 103, :_reduce_none,
 1, 103, :_reduce_none,
 1, 103, :_reduce_none,
 1, 110, :_reduce_none,
 1, 110, :_reduce_none,
 1, 110, :_reduce_none,
 1, 110, :_reduce_none,
 1, 110, :_reduce_none,
 1, 110, :_reduce_none,
 1, 110, :_reduce_none,
 1, 110, :_reduce_none,
 1, 110, :_reduce_none,
 1, 110, :_reduce_none,
 4, 85, :_reduce_100,
 3, 85, :_reduce_101,
 1, 87, :_reduce_102,
 1, 87, :_reduce_103,
 1, 84, :_reduce_104,
 4, 88, :_reduce_105,
 4, 88, :_reduce_106,
 6, 69, :_reduce_107,
 0, 115, :_reduce_none,
 4, 115, :_reduce_109,
 1, 116, :_reduce_none,
 3, 116, :_reduce_111,
 1, 108, :_reduce_none,
 1, 108, :_reduce_none,
 1, 108, :_reduce_none,
 1, 108, :_reduce_none,
 1, 108, :_reduce_none,
 2, 108, :_reduce_117,
 3, 120, :_reduce_118,
 1, 121, :_reduce_none,
 1, 121, :_reduce_none,
 1, 121, :_reduce_none,
 1, 121, :_reduce_none,
 1, 121, :_reduce_none,
 1, 121, :_reduce_none,
 3, 117, :_reduce_125,
 1, 122, :_reduce_none,
 1, 122, :_reduce_none,
 3, 118, :_reduce_128,
 1, 123, :_reduce_none,
 1, 123, :_reduce_none,
 1, 123, :_reduce_none,
 1, 123, :_reduce_none,
 1, 123, :_reduce_none,
 1, 123, :_reduce_none,
 2, 119, :_reduce_135,
 5, 68, :_reduce_136,
 1, 124, :_reduce_none,
 2, 124, :_reduce_138,
 5, 125, :_reduce_139,
 4, 125, :_reduce_140,
 1, 126, :_reduce_none,
 3, 126, :_reduce_142,
 3, 86, :_reduce_143,
 1, 128, :_reduce_none,
 4, 128, :_reduce_145,
 1, 130, :_reduce_none,
 3, 130, :_reduce_147,
 3, 129, :_reduce_148,
 1, 127, :_reduce_none,
 1, 127, :_reduce_none,
 1, 127, :_reduce_none,
 1, 127, :_reduce_none,
 1, 127, :_reduce_none,
 1, 127, :_reduce_none,
 1, 127, :_reduce_none,
 1, 127, :_reduce_156,
 1, 131, :_reduce_157,
 3, 131, :_reduce_158,
 2, 70, :_reduce_159,
 6, 72, :_reduce_160,
 5, 72, :_reduce_161,
 6, 73, :_reduce_162,
 5, 73, :_reduce_163,
 6, 74, :_reduce_164,
 5, 74, :_reduce_165,
 1, 94, :_reduce_none,
 1, 89, :_reduce_none,
 1, 89, :_reduce_none,
 1, 134, :_reduce_none,
 3, 134, :_reduce_170,
 1, 136, :_reduce_none,
 1, 136, :_reduce_none,
 1, 136, :_reduce_none,
 1, 136, :_reduce_none,
 0, 62, :_reduce_175,
 0, 137, :_reduce_176,
 1, 132, :_reduce_none,
 3, 132, :_reduce_178,
 3, 132, :_reduce_179,
 1, 138, :_reduce_none,
 3, 138, :_reduce_181,
 3, 139, :_reduce_182,
 1, 139, :_reduce_183,
 3, 139, :_reduce_184,
 1, 139, :_reduce_185,
 1, 135, :_reduce_none,
 2, 135, :_reduce_187,
 1, 133, :_reduce_none,
 2, 133, :_reduce_189,
 1, 140, :_reduce_none,
 1, 140, :_reduce_none,
 1, 82, :_reduce_192,
 3, 107, :_reduce_193,
 2, 107, :_reduce_194,
 1, 114, :_reduce_none,
 1, 114, :_reduce_none,
 0, 93, :_reduce_none,
 1, 93, :_reduce_198 ]

racc_reduce_n = 199

racc_shift_n = 311

racc_action_table = [
    75,    54,    57,   267,   186,    40,    41,    37,    93,   234,
    51,   186,    94,   241,     4,     8,   140,   134,   242,   217,
    72,    75,    54,    57,   140,    95,    40,    41,   232,   233,
   140,    45,    40,    41,  -149,    56,    59,   232,   233,    67,
    43,    72,   131,    44,    52,    76,   185,   170,    63,    97,
  -151,    87,    45,    75,    54,    57,    56,    59,    45,  -153,
    67,    43,  -154,   175,    44,    52,    76,    43,   285,    63,
    44,   170,    87,    72,    75,    54,    57,   206,   280,   170,
   170,   284,    45,   188,    45,     8,   279,   175,    56,    59,
    45,    45,    67,    37,    72,   175,   175,    52,    76,   226,
     4,    63,   196,   230,    87,    45,    75,    54,    57,    56,
    59,   229,   186,    67,    37,   241,    37,   191,    52,    76,
   242,     4,    63,     4,  -150,    87,    72,    75,    54,    57,
   219,    54,    57,   204,   220,   221,   182,    45,  -152,   235,
  -150,    56,    59,   232,   233,    67,   201,    72,   220,   294,
    52,    76,    33,    34,    63,    54,    57,    87,    45,    75,
    54,    57,    56,    59,   189,   246,    67,    93,   141,   249,
   110,    52,    76,  -152,   253,    63,    94,   255,    87,    72,
    75,    54,    57,   169,   169,  -149,   142,    51,   260,   261,
    45,    75,    54,    57,    56,    59,   139,  -166,    67,   137,
    72,   266,   181,    52,    76,   180,   114,    63,   169,   110,
    87,    45,    75,    54,    57,    56,    59,   199,   281,    67,
   282,   283,    45,  -155,    52,    76,    56,    59,    63,   105,
    67,    87,    72,  -149,   196,    52,    75,    54,    57,    63,
  -151,   197,  -150,    45,   296,  -149,  -152,    56,    59,  -150,
  -154,    67,    75,    54,    57,  -151,    52,    76,   297,  -151,
    63,    71,   166,    87,   194,    38,  -152,    45,    75,    54,
    57,    56,    59,   304,  -198,    67,   305,    35,  -154,   196,
    52,  -153,   nil,    45,    63,   nil,   nil,    56,    59,   nil,
   nil,    67,    75,    54,    57,   nil,    52,   nil,   nil,    45,
    63,   nil,   nil,    56,    59,   nil,   nil,    67,    75,    54,
    57,   nil,    52,   nil,   nil,   nil,    63,   nil,    75,    54,
    57,   nil,   nil,    45,   nil,   nil,   nil,    56,    59,   nil,
   nil,    67,    75,    54,    57,   nil,    52,   nil,   nil,    45,
    63,   nil,   nil,    56,    59,   nil,   nil,    67,   nil,    45,
   nil,   nil,    52,    56,   203,   nil,    63,    67,    51,    54,
    57,   nil,   116,    45,   nil,   nil,    63,    56,    59,   nil,
   nil,    67,    75,    54,    57,   146,    52,   nil,    48,   nil,
    63,   nil,    75,    54,    57,   nil,   nil,   nil,   nil,    45,
   nil,   nil,   nil,    56,    59,   nil,   nil,    67,    75,    54,
    57,    49,    52,    45,   nil,   nil,    63,    56,    59,    54,
    57,    67,   nil,    45,   nil,   nil,    52,    56,    59,   nil,
    63,    67,    75,    54,    57,   nil,    52,   nil,   nil,    45,
    63,   nil,   nil,    56,   121,   nil,   nil,    67,   nil,    45,
   nil,   nil,   116,    56,   203,   nil,    63,    67,    54,    57,
    54,    57,   116,    45,   nil,   nil,    63,    56,    59,   nil,
   nil,    67,   nil,   nil,    54,    57,    52,   nil,   136,   nil,
    63,    54,    57,   nil,   nil,   278,   nil,   nil,    45,   nil,
    45,   nil,    56,    59,    56,   203,    67,   nil,    67,   nil,
    49,    52,   nil,   116,    45,    63,   nil,    63,    56,   203,
   nil,    45,    67,    54,    57,    56,   203,   116,   nil,    67,
   nil,    63,   nil,   nil,   116,   nil,   nil,   nil,    63,    54,
    57,    54,    57,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,    45,   nil,   nil,   nil,    56,   203,   208,
   nil,    67,   nil,    54,    57,    49,   116,   nil,   nil,    45,
    63,    45,   nil,    56,    59,    56,   203,    67,   nil,    67,
   nil,    49,    52,   nil,   116,   nil,    63,   nil,    63,    54,
    57,   nil,   213,    45,   nil,    54,    57,    56,   203,   nil,
   nil,    67,   nil,   nil,   nil,   nil,   116,   nil,   nil,   nil,
    63,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    45,
   nil,   nil,   nil,    56,   203,    45,   309,    67,   nil,    56,
   203,   nil,   116,    67,   156,   160,    63,   nil,   116,   nil,
   nil,   nil,    63,   152,   155,   157,   159,    16,   nil,    23,
    27,   nil,     1,     5,   nil,    10,   252,    13,   nil,    20,
   nil,    28,   nil,   nil,     4,     8,   nil,   158,   161,   nil,
   nil,   162,   163,   164,   148,   151,   154,    16,   307,    23,
    27,   nil,     1,     5,   nil,    10,   nil,    13,   nil,    20,
   nil,    28,   nil,   nil,     4,     8,   nil,   288,   nil,    16,
   nil,    23,    27,   nil,     1,     5,   nil,    10,   nil,    13,
   nil,    20,   nil,    28,   nil,   nil,     4,     8,    16,   287,
    23,    27,   nil,     1,     5,   nil,    10,   nil,    13,   nil,
    20,   nil,    28,   nil,   nil,     4,     8,   nil,   259,   nil,
    16,   nil,    23,    27,   nil,     1,     5,   nil,    10,   nil,
    13,   nil,    20,   nil,    28,   nil,   nil,     4,     8,    16,
   302,    23,    27,   nil,     1,     5,   nil,    10,   nil,    13,
   nil,    20,   nil,    28,   nil,   nil,     4,     8,   nil,   290,
   nil,    16,   nil,    23,    27,   nil,     1,     5,   nil,    10,
   nil,    13,   nil,    20,   nil,    28,   nil,   nil,     4,     8,
    16,   265,    23,    27,   nil,     1,     5,   nil,    10,   nil,
    13,   nil,    20,   nil,    28,   nil,   nil,     4,     8,   nil,
   310,   nil,    16,   nil,    23,    27,   nil,     1,     5,   nil,
    10,   nil,    13,   nil,    20,   nil,    28,   nil,   nil,     4,
     8,    16,   nil,    23,    27,   nil,     1,     5,   nil,    10,
   nil,    13,   nil,    20,   nil,    28,   nil,   nil,     4,     8,
    16,   nil,    23,    27,   nil,     1,     5,   nil,    10,   nil,
    13,   nil,    20,   nil,    28,   nil,   nil,     4,     8,    16,
   nil,    23,    27,   nil,     1,     5,   nil,    10,   nil,    13,
   nil,    20,   nil,    28,   nil,   nil,     4,     8,    16,   nil,
    23,    27,   nil,     1,     5,   nil,    10,   nil,    13,   nil,
    20,   nil,    28,   nil,   nil,     4,     8,    16,   nil,    23,
    27,   nil,     1,     5,   nil,    10,   nil,    13,   nil,    20,
   nil,    28,   nil,   nil,     4,     8 ]

racc_action_check = [
   153,   153,   153,   228,   110,   131,   131,    24,    17,   178,
    59,   121,    17,   285,    24,    24,   203,    39,   285,   143,
   153,    76,    76,    76,   121,    17,   134,   134,   228,   228,
    59,   153,    10,    10,    77,   153,   153,   178,   178,   153,
   131,    76,    39,   131,   153,   153,   110,    95,   153,    17,
    70,   153,    76,    87,    87,    87,    76,    76,    95,    68,
    76,   134,    66,    95,   134,    76,    76,    10,   244,    76,
    10,   170,    76,    87,    72,    72,    72,   139,   238,    97,
   231,   244,   170,   111,    87,   139,   238,   170,    87,    87,
    97,   231,    87,     5,    72,    97,   231,    87,    87,   167,
     5,    87,   168,   173,    87,    72,   149,   149,   149,    72,
    72,   173,   169,    72,   114,   182,    27,   114,    72,    72,
   182,   114,    72,    27,    80,    72,   149,    34,    34,    34,
   145,   181,   181,   138,   145,   145,   104,   149,    78,   179,
    64,   149,   149,   179,   179,   149,   135,    34,   263,   263,
   149,   149,     1,     1,   149,    23,    23,   149,    34,    33,
    33,    33,    34,    34,   113,   183,    34,    62,    61,   187,
   188,    34,    34,    60,   193,    34,   102,   195,    34,    33,
   150,   150,   150,   196,   197,    58,    71,   206,   207,   212,
    33,   218,   218,   218,    33,    33,    53,    52,    33,    50,
   150,   227,   100,    33,    33,    99,    36,    33,    94,    35,
    33,   150,    16,    16,    16,   150,   150,   132,   241,   150,
   242,   243,   218,    82,   150,   150,   218,   218,   150,    28,
   218,   150,    16,   118,   257,   218,   281,   281,   281,   218,
   130,   124,   123,    16,   265,   268,   270,    16,    16,   271,
   272,    16,    20,    20,    20,   274,    16,    16,   279,    92,
    16,    15,    89,    16,   117,     6,   120,   281,   261,   261,
   261,   281,   281,   293,   294,   281,   296,     2,    83,   119,
   281,    85,   nil,    20,   281,   nil,   nil,    20,    20,   nil,
   nil,    20,   185,   185,   185,   nil,    20,   nil,   nil,   261,
    20,   nil,   nil,   261,   261,   nil,   nil,   261,   186,   186,
   186,   nil,   261,   nil,   nil,   nil,   261,   nil,   194,   194,
   194,   nil,   nil,   185,   nil,   nil,   nil,   185,   185,   nil,
   nil,   185,   282,   282,   282,   nil,   185,   nil,   nil,   186,
   185,   nil,   nil,   186,   186,   nil,   nil,   186,   nil,   194,
   nil,   nil,   186,   194,   194,   nil,   186,   194,    13,    13,
    13,   nil,   194,   282,   nil,   nil,   194,   282,   282,   nil,
   nil,   282,    75,    75,    75,    75,   282,   nil,    13,   nil,
   282,   nil,    51,    51,    51,   nil,   nil,   nil,   nil,    13,
   nil,   nil,   nil,    13,    13,   nil,   nil,    13,    38,    38,
    38,    13,    13,    75,   nil,   nil,    13,    75,    75,   229,
   229,    75,   nil,    51,   nil,   nil,    75,    51,    51,   nil,
    75,    51,    93,    93,    93,   nil,    51,   nil,   nil,    38,
    51,   nil,   nil,    38,    38,   nil,   nil,    38,   nil,   229,
   nil,   nil,    38,   229,   229,   nil,    38,   229,    48,    48,
   230,   230,   229,    93,   nil,   nil,   229,    93,    93,   nil,
   nil,    93,   nil,   nil,   213,   213,    93,   nil,    48,   nil,
    93,   236,   236,   nil,   nil,   236,   nil,   nil,    48,   nil,
   230,   nil,    48,    48,   230,   230,    48,   nil,   230,   nil,
    48,    48,   nil,   230,   213,    48,   nil,   230,   213,   213,
   nil,   236,   213,   137,   137,   236,   236,   213,   nil,   236,
   nil,   213,   nil,   nil,   236,   nil,   nil,   nil,   236,   140,
   140,   292,   292,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   137,   nil,   nil,   nil,   137,   137,   140,
   nil,   137,   nil,   180,   180,   137,   137,   nil,   nil,   140,
   137,   292,   nil,   140,   140,   292,   292,   140,   nil,   292,
   nil,   140,   140,   nil,   292,   nil,   140,   nil,   292,   141,
   141,   nil,   141,   180,   nil,   280,   280,   180,   180,   nil,
   nil,   180,   nil,   nil,   nil,   nil,   180,   nil,   nil,   nil,
   180,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   141,
   nil,   nil,   nil,   141,   141,   280,   306,   141,   nil,   280,
   280,   nil,   141,   280,    79,    79,   141,   nil,   280,   nil,
   nil,   nil,   280,    79,    79,    79,    79,   306,   nil,   306,
   306,   nil,   306,   306,   nil,   306,   189,   306,   nil,   306,
   nil,   306,   nil,   nil,   306,   306,   nil,    79,    79,   nil,
   nil,    79,    79,    79,    79,    79,    79,   189,   297,   189,
   189,   nil,   189,   189,   nil,   189,   nil,   189,   nil,   189,
   nil,   189,   nil,   nil,   189,   189,   nil,   251,   nil,   297,
   nil,   297,   297,   nil,   297,   297,   nil,   297,   nil,   297,
   nil,   297,   nil,   297,   nil,   nil,   297,   297,   251,   246,
   251,   251,   nil,   251,   251,   nil,   251,   nil,   251,   nil,
   251,   nil,   251,   nil,   nil,   251,   251,   nil,   199,   nil,
   246,   nil,   246,   246,   nil,   246,   246,   nil,   246,   nil,
   246,   nil,   246,   nil,   246,   nil,   nil,   246,   246,   199,
   286,   199,   199,   nil,   199,   199,   nil,   199,   nil,   199,
   nil,   199,   nil,   199,   nil,   nil,   199,   199,   nil,   258,
   nil,   286,   nil,   286,   286,   nil,   286,   286,   nil,   286,
   nil,   286,   nil,   286,   nil,   286,   nil,   nil,   286,   286,
   258,   225,   258,   258,   nil,   258,   258,   nil,   258,   nil,
   258,   nil,   258,   nil,   258,   nil,   nil,   258,   258,   nil,
   308,   nil,   225,   nil,   225,   225,   nil,   225,   225,   nil,
   225,   nil,   225,   nil,   225,   nil,   225,   nil,   nil,   225,
   225,   308,   nil,   308,   308,   nil,   308,   308,   nil,   308,
   nil,   308,   nil,   308,   nil,   308,   nil,   nil,   308,   308,
   166,   nil,   166,   166,   nil,   166,   166,   nil,   166,   nil,
   166,   nil,   166,   nil,   166,   nil,   nil,   166,   166,   305,
   nil,   305,   305,   nil,   305,   305,   nil,   305,   nil,   305,
   nil,   305,   nil,   305,   nil,   nil,   305,   305,     0,   nil,
     0,     0,   nil,     0,     0,   nil,     0,   nil,     0,   nil,
     0,   nil,     0,   nil,   nil,     0,     0,    19,   nil,    19,
    19,   nil,    19,    19,   nil,    19,   nil,    19,   nil,    19,
   nil,    19,   nil,   nil,    19,    19 ]

racc_action_pointer = [
   850,   139,   271,   nil,   nil,    55,   259,   nil,   nil,   nil,
    29,   nil,   nil,   356,   nil,   261,   210,     6,   nil,   869,
   250,   nil,   nil,   152,   -31,   nil,   nil,    78,   187,   nil,
   nil,   nil,   nil,   157,   125,   171,   171,   nil,   396,     7,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   445,   nil,
   189,   380,   195,   186,   nil,   nil,   nil,   nil,   164,     8,
   152,   147,   165,   nil,   119,   nil,    41,   nil,    38,   nil,
    29,   186,    72,   nil,   nil,   370,    19,    13,   117,   599,
   103,   nil,   202,   257,   nil,   260,   nil,    51,   nil,   256,
   nil,   nil,   238,   420,   170,    25,   nil,    57,   nil,   199,
   192,   nil,   170,   nil,   114,   nil,   nil,   nil,   nil,   nil,
    -5,    73,   nil,   158,    76,   nil,   nil,   225,   212,   269,
   245,     2,   nil,   221,   223,   nil,   nil,   nil,   nil,   nil,
   219,     2,   211,   nil,    23,   123,   nil,   500,   128,    39,
   516,   566,   nil,    -4,   nil,   125,   nil,   nil,   nil,   104,
   178,   nil,   nil,    -2,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   812,    94,    92,   103,
    49,   nil,   nil,    87,   nil,   nil,   nil,   nil,   -11,    95,
   540,   128,    82,   159,   nil,   290,   306,   162,   132,   629,
   nil,   nil,   nil,   167,   316,   170,   145,   146,   nil,   711,
   nil,   nil,   nil,    -6,   nil,   nil,   185,   165,   nil,   nil,
   nil,   nil,   180,   461,   nil,   nil,   nil,   nil,   189,   nil,
   nil,   nil,   nil,   nil,   nil,   774,   nil,   194,   -20,   406,
   447,    58,   nil,   nil,   nil,   nil,   468,   nil,    68,   nil,
   nil,   205,   207,   198,    58,   nil,   692,   nil,   nil,   nil,
   nil,   670,   nil,   nil,   nil,   nil,   nil,   224,   752,   nil,
   nil,   266,   nil,   139,   nil,   215,   nil,   nil,   224,   nil,
   225,   228,   229,   nil,   234,   nil,   nil,   nil,   nil,   252,
   572,   234,   330,   nil,   nil,   -20,   733,   nil,   nil,   nil,
   nil,   nil,   518,   266,   267,   nil,   270,   651,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   831,   599,   nil,   793,   nil,
   nil ]

racc_action_default = [
  -175,  -199,  -199,    -7,  -168,  -199,  -199,    -8,  -166,    -9,
  -199,   -10,   -11,  -167,   -12,  -199,  -199,  -199,   -13,    -1,
  -199,   -14,    -2,  -199,  -199,   -15,    -3,  -199,   -40,   -16,
    -5,   -17,    -6,  -199,  -199,   -79,  -175,  -167,   -72,  -175,
  -173,  -172,  -169,  -171,  -174,  -192,   -33,   -20,  -199,   -32,
   -21,  -199,   -63,   -22,  -102,   -23,  -104,  -103,   -25,   -62,
   -26,  -199,  -199,   -61,   -27,  -155,   -28,  -156,   -29,   -30,
   -31,  -199,  -199,  -110,   -97,  -199,  -199,   -91,   -95,  -112,
   -92,  -113,   -99,   -93,  -114,   -98,   -96,  -199,  -115,  -199,
   -94,  -116,   -90,  -199,   -72,  -175,   -42,  -175,    -4,  -199,
  -159,  -157,  -199,   -39,  -175,   -41,   -70,   -71,   -78,   -80,
  -199,  -197,   -77,  -199,  -199,  -188,   -63,   -59,   -65,  -197,
   -68,   -62,   -57,   -66,  -199,  -154,  -153,   -69,   -67,   -73,
   -64,  -199,  -199,  -186,  -199,  -199,   -19,  -199,  -199,  -199,
  -199,  -199,   311,  -199,   -82,  -199,  -194,  -135,  -122,  -199,
  -199,  -123,  -129,  -199,  -124,  -131,  -134,  -132,  -126,  -133,
  -130,  -127,  -119,  -120,  -121,  -117,  -199,  -199,  -197,  -199,
  -175,   -46,   -48,  -199,   -55,   -62,   -54,   -45,  -199,  -199,
  -199,  -199,  -176,  -199,  -177,  -199,  -199,  -199,  -198,  -199,
  -190,  -191,  -189,  -199,   -60,  -199,  -198,   -72,  -187,  -199,
  -170,   -18,   -24,   -62,  -105,   -34,  -199,  -199,  -101,  -149,
  -152,  -150,  -199,  -199,  -143,  -144,  -151,  -111,  -199,  -193,
  -195,  -196,  -118,  -125,  -128,  -199,  -106,  -199,  -199,  -199,
  -199,  -199,   -51,   -50,   -44,   -43,  -199,  -137,  -199,  -141,
  -158,  -185,  -183,  -199,  -199,  -180,  -199,   -76,   -75,   -38,
   -81,  -199,  -163,   -35,   -58,   -36,   -74,  -197,  -199,  -165,
  -100,  -199,  -146,  -197,   -83,  -108,   -37,   -49,   -85,   -52,
   -89,   -86,   -87,   -88,   -84,   -53,   -47,  -138,  -136,  -199,
  -199,  -199,  -199,  -178,  -179,  -199,  -199,  -161,  -162,   -56,
  -164,  -148,  -199,  -199,  -196,  -107,  -199,  -199,  -142,  -184,
  -182,  -181,  -160,  -147,  -145,  -199,  -199,  -140,  -199,  -139,
  -109 ]

racc_goto_table = [
     2,   112,    19,   127,    17,    98,   119,   122,   109,   215,
    47,    42,    99,    46,    36,   218,   245,    65,   237,     2,
    22,   187,   178,    17,   179,    69,   269,   275,   102,   195,
   212,    15,   276,   145,    96,   295,   104,   149,   150,   153,
   236,   111,    65,   138,   193,   135,   214,    70,    46,   117,
   128,   263,    65,   100,   183,   113,   115,   101,    39,   133,
    69,   132,   168,   202,   243,   244,   103,   144,   192,   239,
   nil,    89,   130,   nil,   277,   nil,   nil,   nil,   227,   nil,
   nil,   262,    70,   nil,   nil,   167,   nil,   nil,   106,   107,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   228,   nil,   nil,
   nil,   nil,   212,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   301,
   nil,   nil,   nil,   190,   184,   239,   nil,   143,   nil,   nil,
   nil,   147,   198,   292,   nil,   200,   nil,   207,   nil,   205,
    46,    65,   165,   nil,    65,    65,   nil,   nil,   nil,    69,
   nil,    68,    69,   nil,   112,   nil,   nil,   nil,   nil,   127,
   303,   250,   256,   254,   nil,   257,     2,   289,   225,   298,
    17,    70,   nil,   293,    70,   216,   126,   247,   248,   nil,
   nil,   212,   nil,   nil,    65,   nil,    68,   nil,   nil,     2,
   nil,   251,   nil,    17,   nil,   nil,   nil,    66,    65,     2,
   nil,   258,   nil,    17,   222,   223,   128,   nil,   224,   nil,
   264,    98,   nil,   nil,   216,   240,   nil,    65,   nil,   nil,
   nil,   nil,   125,   nil,   nil,     2,   nil,   nil,   130,    17,
   nil,    58,    66,    65,    65,   nil,   nil,    98,   nil,   nil,
    65,   273,   273,   nil,    98,   nil,     2,   216,   286,   nil,
    17,     2,    60,   291,   nil,    17,   118,   nil,     2,   nil,
   nil,   nil,    17,   274,   274,   nil,    58,   nil,   nil,   nil,
   216,   nil,    98,   299,   300,    68,   nil,   120,    68,   126,
   nil,   nil,   nil,   nil,    65,   nil,     2,    60,   nil,   nil,
    17,   nil,    98,   nil,    98,   nil,    65,     2,   nil,   306,
   nil,    17,   nil,   nil,   nil,     2,     2,   308,     2,    17,
    17,   nil,    17,   174,   216,   174,   nil,   nil,   126,   nil,
   nil,    66,   nil,   nil,    66,   125,   216,   nil,   nil,   nil,
   nil,   nil,   126,   nil,   176,    64,   176,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   126,   nil,   nil,   nil,    58,   nil,   nil,    58,   209,
   123,   nil,   nil,   nil,   125,   nil,   nil,   126,   126,   nil,
    64,   nil,   nil,   nil,   126,   nil,    60,   nil,   125,    60,
   210,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   174,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   125,   209,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   176,
   nil,   nil,   118,   272,   272,   nil,   nil,   nil,   126,   210,
   125,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   126,   209,   nil,   120,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   268,   268,   174,
   nil,   nil,   210,   nil,   209,   nil,   nil,   nil,   nil,    64,
   nil,   nil,    64,   211,   125,   nil,   nil,   nil,   270,   270,
   176,   nil,   nil,   nil,   nil,   210,   125,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   209,   nil,
   nil,   nil,   211,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   209,   nil,   nil,   nil,   nil,   nil,   123,   nil,   nil,   210,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   210,   nil,   nil,   nil,   211,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   271,   271,   nil,   nil,   nil,   nil,   nil,   211,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   211,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   211 ]

racc_goto_check = [
    29,    50,     2,    48,    35,     4,    33,    45,    53,    70,
    18,    77,    51,    29,    30,    55,    80,    47,    66,    29,
     3,    34,    39,    35,    39,    27,    44,    44,    35,    34,
    68,     1,    40,    54,    38,    56,    30,    62,    63,    64,
    65,    36,    47,    51,    32,    18,    69,    28,    29,    31,
    27,    71,    47,    72,    73,    74,     3,    28,    75,     3,
    27,    76,    33,    21,    78,    79,     5,    51,    81,    68,
   nil,    49,    28,   nil,    66,   nil,   nil,   nil,    34,   nil,
   nil,    70,    28,   nil,   nil,    51,   nil,   nil,    49,    49,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,    39,   nil,   nil,
   nil,   nil,    68,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    80,
   nil,   nil,   nil,    30,     3,    68,   nil,    49,   nil,   nil,
   nil,    49,    77,    55,   nil,    77,   nil,    18,   nil,    29,
    29,    47,    49,   nil,    47,    47,   nil,   nil,   nil,    27,
   nil,    26,    27,   nil,    50,   nil,   nil,   nil,   nil,    48,
    70,    53,    50,    45,   nil,    33,    29,    34,     2,    68,
    35,    28,   nil,    34,    28,    28,    26,    51,    51,   nil,
   nil,    68,   nil,   nil,    47,   nil,    26,   nil,   nil,    29,
   nil,     2,   nil,    35,   nil,   nil,   nil,    25,    47,    29,
   nil,     2,   nil,    35,    49,    49,    27,   nil,    49,   nil,
    51,     4,   nil,   nil,    28,    28,   nil,    47,   nil,   nil,
   nil,   nil,    25,   nil,   nil,    29,   nil,   nil,    28,    35,
   nil,    22,    25,    47,    47,   nil,   nil,     4,   nil,   nil,
    47,    27,    27,   nil,     4,   nil,    29,    28,     2,   nil,
    35,    29,    23,    51,   nil,    35,    22,   nil,    29,   nil,
   nil,   nil,    35,    28,    28,   nil,    22,   nil,   nil,   nil,
    28,   nil,     4,    51,    51,    26,   nil,    23,    26,    26,
   nil,   nil,   nil,   nil,    47,   nil,    29,    23,   nil,   nil,
    35,   nil,     4,   nil,     4,   nil,    47,    29,   nil,     2,
   nil,    35,   nil,   nil,   nil,    29,    29,     2,    29,    35,
    35,   nil,    35,    22,    28,    22,   nil,   nil,    26,   nil,
   nil,    25,   nil,   nil,    25,    25,    28,   nil,   nil,   nil,
   nil,   nil,    26,   nil,    23,    24,    23,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,    26,   nil,   nil,   nil,    22,   nil,   nil,    22,    22,
    24,   nil,   nil,   nil,    25,   nil,   nil,    26,    26,   nil,
    24,   nil,   nil,   nil,    26,   nil,    23,   nil,    25,    23,
    23,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    22,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,    25,    22,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    23,
   nil,   nil,    22,    25,    25,   nil,   nil,   nil,    26,    23,
    25,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
    26,    22,   nil,    23,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,    22,    22,    22,
   nil,   nil,    23,   nil,    22,   nil,   nil,   nil,   nil,    24,
   nil,   nil,    24,    24,    25,   nil,   nil,   nil,    23,    23,
    23,   nil,   nil,   nil,   nil,    23,    25,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    22,   nil,
   nil,   nil,    24,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
    22,   nil,   nil,   nil,   nil,   nil,    24,   nil,   nil,    23,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,    23,   nil,   nil,   nil,    24,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,    24,    24,   nil,   nil,   nil,   nil,   nil,    24,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,    24,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,    24 ]

racc_goto_pointer = [
   nil,    31,     2,    20,   -14,    42,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    -3,   nil,
   nil,   -74,   218,   239,   322,   184,   138,    12,    34,     0,
     9,    11,   -73,   -32,   -90,     4,     6,   nil,    17,   -73,
  -199,   nil,   nil,   nil,  -203,   -31,   nil,     4,   -35,    55,
   -34,    -8,   nil,   -27,   -42,  -130,  -230,   nil,   nil,   nil,
   nil,   nil,   -42,   -41,   -40,  -140,  -162,   nil,  -111,   -95,
  -132,  -162,    30,   -50,    19,    48,    22,     1,  -118,  -117,
  -166,   -46 ]

racc_goto_default = [
   nil,   nil,   nil,   177,    26,    30,    32,     3,     7,     9,
    11,    12,    14,    18,    21,    25,    29,    31,   nil,    50,
    53,    55,    77,    78,    80,    83,    85,    90,    92,    74,
     6,   nil,   nil,   nil,   nil,    62,   nil,    24,   nil,   nil,
   171,   231,   172,   173,   nil,   nil,   124,    82,    86,   nil,
   129,    73,   108,   nil,   nil,   nil,   nil,    79,    81,    84,
    88,    91,   nil,   nil,   nil,   nil,   nil,   238,    61,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil ]

racc_token_table = {
 false => 0,
 Object.new => 1,
 :LBRACK => 2,
 :DQTEXT => 3,
 :SQTEXT => 4,
 :RBRACK => 5,
 :LBRACE => 6,
 :RBRACE => 7,
 :SYMBOL => 8,
 :FARROW => 9,
 :COMMA => 10,
 :TRUE => 11,
 :FALSE => 12,
 :EQUALS => 13,
 :APPENDS => 14,
 :LESSEQUAL => 15,
 :NOTEQUAL => 16,
 :DOT => 17,
 :COLON => 18,
 :LLCOLLECT => 19,
 :RRCOLLECT => 20,
 :QMARK => 21,
 :LPAREN => 22,
 :RPAREN => 23,
 :ISEQUAL => 24,
 :GREATEREQUAL => 25,
 :GREATERTHAN => 26,
 :LESSTHAN => 27,
 :IF => 28,
 :ELSE => 29,
 :IMPORT => 30,
 :DEFINE => 31,
 :ELSIF => 32,
 :VARIABLE => 33,
 :CLASS => 34,
 :INHERITS => 35,
 :NODE => 36,
 :BOOLEAN => 37,
 :NAME => 38,
 :SEMIC => 39,
 :CASE => 40,
 :DEFAULT => 41,
 :AT => 42,
 :LCOLLECT => 43,
 :RCOLLECT => 44,
 :CLASSNAME => 45,
 :CLASSREF => 46,
 :NOT => 47,
 :OR => 48,
 :AND => 49,
 :UNDEF => 50,
 :PARROW => 51,
 :PLUS => 52,
 :MINUS => 53,
 :TIMES => 54,
 :DIV => 55,
 :LSHIFT => 56,
 :RSHIFT => 57,
 :UMINUS => 58 }

racc_use_result_var = true

racc_nt_base = 59

Racc_arg = [
 racc_action_table,
 racc_action_check,
 racc_action_default,
 racc_action_pointer,
 racc_goto_table,
 racc_goto_check,
 racc_goto_default,
 racc_goto_pointer,
 racc_nt_base,
 racc_reduce_table,
 racc_token_table,
 racc_shift_n,
 racc_reduce_n,
 racc_use_result_var ]

Racc_token_to_s_table = [
'$end',
'error',
'LBRACK',
'DQTEXT',
'SQTEXT',
'RBRACK',
'LBRACE',
'RBRACE',
'SYMBOL',
'FARROW',
'COMMA',
'TRUE',
'FALSE',
'EQUALS',
'APPENDS',
'LESSEQUAL',
'NOTEQUAL',
'DOT',
'COLON',
'LLCOLLECT',
'RRCOLLECT',
'QMARK',
'LPAREN',
'RPAREN',
'ISEQUAL',
'GREATEREQUAL',
'GREATERTHAN',
'LESSTHAN',
'IF',
'ELSE',
'IMPORT',
'DEFINE',
'ELSIF',
'VARIABLE',
'CLASS',
'INHERITS',
'NODE',
'BOOLEAN',
'NAME',
'SEMIC',
'CASE',
'DEFAULT',
'AT',
'LCOLLECT',
'RCOLLECT',
'CLASSNAME',
'CLASSREF',
'NOT',
'OR',
'AND',
'UNDEF',
'PARROW',
'PLUS',
'MINUS',
'TIMES',
'DIV',
'LSHIFT',
'RSHIFT',
'UMINUS',
'$start',
'program',
'statements',
'nil',
'statement',
'resource',
'virtualresource',
'collection',
'assignment',
'casestatement',
'ifstatement',
'import',
'fstatement',
'definition',
'hostclass',
'nodedef',
'resourceoverride',
'append',
'funcvalues',
'namestrings',
'resourcerefs',
'namestring',
'name',
'variable',
'type',
'boolean',
'funcrvalue',
'selector',
'quotedtext',
'resourceref',
'classname',
'resourceinstances',
'endsemi',
'params',
'endcomma',
'classref',
'anyparams',
'at',
'collectrhand',
'collstatements',
'collstatement',
'colljoin',
'collexpr',
'colllval',
'simplervalue',
'resourceinst',
'resourcename',
'undef',
'array',
'expression',
'param',
'rvalue',
'addparam',
'anyparam',
'rvalues',
'comma',
'else',
'term',
'booleanexpr',
'comparison',
'notexpr',
'arithexpr',
'arithop',
'booleanop',
'comparisonop',
'caseopts',
'caseopt',
'casevalues',
'selectlhand',
'svalues',
'selectval',
'sintvalues',
'qtexts',
'argumentlist',
'classparent',
'hostnames',
'nodeparent',
'hostname',
'nothing',
'arguments',
'argument',
'classnameordefault']

Racc_debug_parser = true

##### racc system variables end #####

 # reduce 0 omitted

module_eval <<'.,.,', 'grammar.ra', 42
  def _reduce_1( val, _values, result )
    if val[0]
        # Make sure we always return an array.
        if val[0].is_a?(AST::ASTArray)
            if val[0].children.empty?
                result = nil
            else
                result = val[0]
            end
        else
            result = aryfy(val[0])
        end
    else
        result = nil
    end
   result
  end
.,.,

 # reduce 2 omitted

 # reduce 3 omitted

module_eval <<'.,.,', 'grammar.ra', 58
  def _reduce_4( val, _values, result )
    if val[0] and val[1]
        if val[0].instance_of?(AST::ASTArray)
            val[0].push(val[1])
            result = val[0]
        else
            result = ast AST::ASTArray, :children => [val[0],val[1]]
        end
    elsif obj = (val[0] || val[1])
        result = obj
    else result = nil
    end
   result
  end
.,.,

 # reduce 5 omitted

 # reduce 6 omitted

 # reduce 7 omitted

 # reduce 8 omitted

 # reduce 9 omitted

 # reduce 10 omitted

 # reduce 11 omitted

 # reduce 12 omitted

 # reduce 13 omitted

 # reduce 14 omitted

 # reduce 15 omitted

 # reduce 16 omitted

 # reduce 17 omitted

module_eval <<'.,.,', 'grammar.ra', 81
  def _reduce_18( val, _values, result )
    args = aryfy(val[2])
    result = ast AST::Function,
        :name => val[0],
        :arguments => args,
        :ftype => :statement
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 87
  def _reduce_19( val, _values, result )
    result = ast AST::Function,
        :name => val[0],
        :arguments => AST::ASTArray.new({}),
        :ftype => :statement
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 94
  def _reduce_20( val, _values, result )
    args = aryfy(val[1])
    result = ast AST::Function,
        :name => val[0],
        :arguments => args,
        :ftype => :statement
   result
  end
.,.,

 # reduce 21 omitted

 # reduce 22 omitted

 # reduce 23 omitted

module_eval <<'.,.,', 'grammar.ra', 104
  def _reduce_24( val, _values, result )
    result = aryfy(val[0], val[2])
    result.line = @lexer.line
    result.file = @lexer.file
   result
  end
.,.,

 # reduce 25 omitted

 # reduce 26 omitted

 # reduce 27 omitted

 # reduce 28 omitted

 # reduce 29 omitted

 # reduce 30 omitted

 # reduce 31 omitted

module_eval <<'.,.,', 'grammar.ra', 117
  def _reduce_32( val, _values, result )
                    result = ast AST::Name, :value => val[0]
   result
  end
.,.,

 # reduce 33 omitted

module_eval <<'.,.,', 'grammar.ra', 128
  def _reduce_34( val, _values, result )
    unless val[0].is_a?(AST::ASTArray)
        val[0] = aryfy(val[0])
    end

    val[0].push(val[2])

    result = val[0]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 149
  def _reduce_35( val, _values, result )
    array = val[2]
    if array.instance_of?(AST::ResourceInstance)
        array = [array]
    end
    result = ast AST::ASTArray

    # this iterates across each specified resourceinstance
    array.each { |instance|
        unless instance.instance_of?(AST::ResourceInstance)
            raise Puppet::Dev, "Got something that isn't an instance"
        end
        # now, i need to somehow differentiate between those things with
        # arrays in their names, and normal things
        result.push ast(AST::Resource,
            :type => val[0],
            :title => instance[0],
            :params => instance[1])
    }
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 152
  def _reduce_36( val, _values, result )
    # This is a deprecated syntax.
    error "All resource specifications require names"
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 155
  def _reduce_37( val, _values, result )
    # a defaults setting for a type
    result = ast(AST::ResourceDefaults, :type => val[0], :params => val[2])
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 160
  def _reduce_38( val, _values, result )
    result = ast AST::ResourceOverride, :object => val[0], :params => val[2]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 187
  def _reduce_39( val, _values, result )
    type = val[0]

    if (type == :exported and ! Puppet[:storeconfigs]) and ! Puppet[:parseonly]
        Puppet.warning addcontext("You cannot collect without storeconfigs being set")
    end

    if val[1].is_a? AST::ResourceDefaults
        error "Defaults are not virtualizable"
    end

    method = type.to_s + "="

    # Just mark our resources as exported and pass them through.
    if val[1].instance_of?(AST::ASTArray)
        val[1].each do |obj|
            obj.send(method, true)
        end
    else
        val[1].send(method, true)
    end

    result = val[1]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 188
  def _reduce_40( val, _values, result )
 result = :virtual
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 189
  def _reduce_41( val, _values, result )
 result = :exported
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 212
  def _reduce_42( val, _values, result )
    if val[0] =~ /^[a-z]/
        Puppet.warning addcontext("Collection names must now be capitalized")
    end
    type = val[0].downcase
    args = {:type => type}

    if val[1].is_a?(AST::CollExpr)
        args[:query] = val[1]
        args[:query].type = type
        args[:form] = args[:query].form
    else
        args[:form] = val[1]
    end
    if args[:form] == :exported and ! Puppet[:storeconfigs] and ! Puppet[:parseonly]
        Puppet.warning addcontext("You cannot collect exported resources without storeconfigs being set; the collection will be ignored")
    end
    result = ast AST::Collection, args
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 222
  def _reduce_43( val, _values, result )
    if val[1]
        result = val[1]
        result.form = :virtual
    else
        result = :virtual
    end
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 230
  def _reduce_44( val, _values, result )
    if val[1]
        result = val[1]
        result.form = :exported
    else
        result = :exported
    end
   result
  end
.,.,

 # reduce 45 omitted

 # reduce 46 omitted

module_eval <<'.,.,', 'grammar.ra', 238
  def _reduce_47( val, _values, result )
    result = ast AST::CollExpr, :test1 => val[0], :oper => val[1], :test2 => val[2]
   result
  end
.,.,

 # reduce 48 omitted

module_eval <<'.,.,', 'grammar.ra', 244
  def _reduce_49( val, _values, result )
    result = val[1]
    result.parens = true
   result
  end
.,.,

 # reduce 50 omitted

 # reduce 51 omitted

module_eval <<'.,.,', 'grammar.ra', 252
  def _reduce_52( val, _values, result )
    result = ast AST::CollExpr, :test1 => val[0], :oper => val[1], :test2 => val[2]
    #result = ast AST::CollExpr
    #result.push *val
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 257
  def _reduce_53( val, _values, result )
    result = ast AST::CollExpr, :test1 => val[0], :oper => val[1], :test2 => val[2]
    #result = ast AST::CollExpr
    #result.push *val
   result
  end
.,.,

 # reduce 54 omitted

 # reduce 55 omitted

module_eval <<'.,.,', 'grammar.ra', 264
  def _reduce_56( val, _values, result )
    result = ast AST::ResourceInstance, :children => [val[0],val[2]]
   result
  end
.,.,

 # reduce 57 omitted

module_eval <<'.,.,', 'grammar.ra', 274
  def _reduce_58( val, _values, result )
    if val[0].instance_of?(AST::ResourceInstance)
        result = ast AST::ASTArray, :children => [val[0],val[2]]
    else
        val[0].push val[2]
        result = val[0]
    end
   result
  end
.,.,

 # reduce 59 omitted

 # reduce 60 omitted

module_eval <<'.,.,', 'grammar.ra', 281
  def _reduce_61( val, _values, result )
    result = ast AST::Undef, :value => :undef
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 285
  def _reduce_62( val, _values, result )
    result = ast AST::Name, :value => val[0]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 289
  def _reduce_63( val, _values, result )
    result = ast AST::Type, :value => val[0]
   result
  end
.,.,

 # reduce 64 omitted

 # reduce 65 omitted

 # reduce 66 omitted

 # reduce 67 omitted

 # reduce 68 omitted

 # reduce 69 omitted

module_eval <<'.,.,', 'grammar.ra', 305
  def _reduce_70( val, _values, result )
    if val[0] =~ /::/
        raise Puppet::ParseError, "Cannot assign to variables in other namespaces"
    end
    # this is distinct from referencing a variable
    variable = ast AST::Name, :value => val[0]
    result = ast AST::VarDef, :name => variable, :value => val[2]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 310
  def _reduce_71( val, _values, result )
    variable = ast AST::Name, :value => val[0]
    result = ast AST::VarDef, :name => variable, :value => val[2], :append => true
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 315
  def _reduce_72( val, _values, result )
    result = ast AST::ASTArray
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 315
  def _reduce_73( val, _values, result )
 result = val[0]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 324
  def _reduce_74( val, _values, result )
    if val[0].instance_of?(AST::ASTArray)
        val[0].push(val[2])
        result = val[0]
    else
        result = ast AST::ASTArray, :children => [val[0],val[2]]
    end
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 328
  def _reduce_75( val, _values, result )
    result = ast AST::ResourceParam, :param => val[0], :value => val[2]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 333
  def _reduce_76( val, _values, result )
    result = ast AST::ResourceParam, :param => val[0], :value => val[2],
                                     :add => true
   result
  end
.,.,

 # reduce 77 omitted

 # reduce 78 omitted

module_eval <<'.,.,', 'grammar.ra', 341
  def _reduce_79( val, _values, result )
    result = ast AST::ASTArray
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 341
  def _reduce_80( val, _values, result )
 result = val[0]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 350
  def _reduce_81( val, _values, result )
    if val[0].instance_of?(AST::ASTArray)
        val[0].push(val[2])
        result = val[0]
    else
        result = ast AST::ASTArray, :children => [val[0],val[2]]
    end
   result
  end
.,.,

 # reduce 82 omitted

module_eval <<'.,.,', 'grammar.ra', 359
  def _reduce_83( val, _values, result )
    if val[0].instance_of?(AST::ASTArray)
        result = val[0].push(val[2])
    else
        result = ast AST::ASTArray, :children => [val[0],val[2]]
    end
   result
  end
.,.,

 # reduce 84 omitted

 # reduce 85 omitted

 # reduce 86 omitted

 # reduce 87 omitted

 # reduce 88 omitted

 # reduce 89 omitted

 # reduce 90 omitted

 # reduce 91 omitted

 # reduce 92 omitted

 # reduce 93 omitted

 # reduce 94 omitted

 # reduce 95 omitted

 # reduce 96 omitted

 # reduce 97 omitted

 # reduce 98 omitted

 # reduce 99 omitted

module_eval <<'.,.,', 'grammar.ra', 386
  def _reduce_100( val, _values, result )
    args = aryfy(val[2])
    result = ast AST::Function,
        :name => val[0],
        :arguments => args,
        :ftype => :rvalue
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 391
  def _reduce_101( val, _values, result )
    result = ast AST::Function,
        :name => val[0],
        :arguments => AST::ASTArray.new({}),
        :ftype => :rvalue
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 395
  def _reduce_102( val, _values, result )
    result = ast AST::String, :value => val[0]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 397
  def _reduce_103( val, _values, result )
    result = ast AST::FlatString, :value => val[0]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 401
  def _reduce_104( val, _values, result )
    result = ast AST::Boolean, :value => val[0]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 406
  def _reduce_105( val, _values, result )
    Puppet.warning addcontext("Deprecation notice:  Resource references should now be capitalized")
    result = ast AST::ResourceReference, :type => val[0], :title => val[2]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 408
  def _reduce_106( val, _values, result )
    result = ast AST::ResourceReference, :type => val[0], :title => val[2]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 421
  def _reduce_107( val, _values, result )
    args = {
        :test => val[1],
        :statements => val[3]
    }

    if val[5]
        args[:else] = val[5]
    end

    result = ast AST::IfStatement, args
   result
  end
.,.,

 # reduce 108 omitted

module_eval <<'.,.,', 'grammar.ra', 426
  def _reduce_109( val, _values, result )
    result = ast AST::Else, :statements => val[2]
   result
  end
.,.,

 # reduce 110 omitted

module_eval <<'.,.,', 'grammar.ra', 431
  def _reduce_111( val, _values, result )
result = val[1]
   result
  end
.,.,

 # reduce 112 omitted

 # reduce 113 omitted

 # reduce 114 omitted

 # reduce 115 omitted

 # reduce 116 omitted

module_eval <<'.,.,', 'grammar.ra', 440
  def _reduce_117( val, _values, result )
    result = ast AST::Minus, :value => val[1]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 444
  def _reduce_118( val, _values, result )
    result = ast AST::ArithmeticOperator, :operator => val[1], :lval => val[0], :rval => val[2]
   result
  end
.,.,

 # reduce 119 omitted

 # reduce 120 omitted

 # reduce 121 omitted

 # reduce 122 omitted

 # reduce 123 omitted

 # reduce 124 omitted

module_eval <<'.,.,', 'grammar.ra', 450
  def _reduce_125( val, _values, result )
    result = ast AST::BooleanOperator, :operator => val[1], :lval => val[0], :rval => val[2]
   result
  end
.,.,

 # reduce 126 omitted

 # reduce 127 omitted

module_eval <<'.,.,', 'grammar.ra', 456
  def _reduce_128( val, _values, result )
    result = ast AST::ComparisonOperator, :operator => val[1], :lval => val[0], :rval => val[2]
   result
  end
.,.,

 # reduce 129 omitted

 # reduce 130 omitted

 # reduce 131 omitted

 # reduce 132 omitted

 # reduce 133 omitted

 # reduce 134 omitted

module_eval <<'.,.,', 'grammar.ra', 462
  def _reduce_135( val, _values, result )
    result = ast AST::Not, :value => val[1]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 471
  def _reduce_136( val, _values, result )
    options = val[3]
    unless options.instance_of?(AST::ASTArray)
        options = ast AST::ASTArray, :children => [val[3]]
    end
    result = ast AST::CaseStatement, :test => val[1], :options => options
   result
  end
.,.,

 # reduce 137 omitted

module_eval <<'.,.,', 'grammar.ra', 481
  def _reduce_138( val, _values, result )
    if val[0].instance_of?(AST::ASTArray)
        val[0].push val[1]
        result = val[0]
    else
        result = ast AST::ASTArray, :children => [val[0], val[1]]
    end
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 485
  def _reduce_139( val, _values, result )
    result = ast AST::CaseOpt, :value => val[0], :statements => val[3]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 490
  def _reduce_140( val, _values, result )
    result = ast(AST::CaseOpt,
        :value => val[0],
        :statements => ast(AST::ASTArray)
    )
   result
  end
.,.,

 # reduce 141 omitted

module_eval <<'.,.,', 'grammar.ra', 500
  def _reduce_142( val, _values, result )
    if val[0].instance_of?(AST::ASTArray)
        val[0].push(val[2])
        result = val[0]
    else
        result = ast AST::ASTArray, :children => [val[0],val[2]]
    end
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 504
  def _reduce_143( val, _values, result )
    result = ast AST::Selector, :param => val[0], :values => val[2]
   result
  end
.,.,

 # reduce 144 omitted

module_eval <<'.,.,', 'grammar.ra', 506
  def _reduce_145( val, _values, result )
 result = val[1]
   result
  end
.,.,

 # reduce 146 omitted

module_eval <<'.,.,', 'grammar.ra', 517
  def _reduce_147( val, _values, result )
    if val[0].instance_of?(AST::ASTArray)
        val[0].push(val[2])
        result = val[0]
    else
        result = ast AST::ASTArray, :children => [val[0],val[2]]
    end
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 521
  def _reduce_148( val, _values, result )
    result = ast AST::ResourceParam, :param => val[0], :value => val[2]
   result
  end
.,.,

 # reduce 149 omitted

 # reduce 150 omitted

 # reduce 151 omitted

 # reduce 152 omitted

 # reduce 153 omitted

 # reduce 154 omitted

 # reduce 155 omitted

module_eval <<'.,.,', 'grammar.ra', 532
  def _reduce_156( val, _values, result )
    result = ast AST::Default, :value => val[0]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 534
  def _reduce_157( val, _values, result )
 result = [val[0].value]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 538
  def _reduce_158( val, _values, result )
    results = val[0] << val[2].value
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 546
  def _reduce_159( val, _values, result )
    val[1].each do |file|
        import(file)
    end

    result = AST::ASTArray.new(:children => [])
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 556
  def _reduce_160( val, _values, result )
    newdefine classname(val[1]), :arguments => val[2], :code => val[4]
    @lexer.indefine = false
    result = nil

#}           | DEFINE NAME argumentlist parent LBRACE RBRACE {
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 560
  def _reduce_161( val, _values, result )
    newdefine classname(val[1]), :arguments => val[2]
    @lexer.indefine = false
    result = nil
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 568
  def _reduce_162( val, _values, result )
    # Our class gets defined in the parent namespace, not our own.
    @lexer.namepop
    newclass classname(val[1]), :code => val[4], :parent => val[2]
    result = nil
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 573
  def _reduce_163( val, _values, result )
    # Our class gets defined in the parent namespace, not our own.
    @lexer.namepop
    newclass classname(val[1]), :parent => val[2]
    result = nil
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 578
  def _reduce_164( val, _values, result )
    newnode val[1], :parent => val[2], :code => val[4]
    result = nil
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 581
  def _reduce_165( val, _values, result )
    newnode val[1], :parent => val[2]
    result = nil
   result
  end
.,.,

 # reduce 166 omitted

 # reduce 167 omitted

 # reduce 168 omitted

 # reduce 169 omitted

module_eval <<'.,.,', 'grammar.ra', 595
  def _reduce_170( val, _values, result )
    result = val[0]
    result = [result] unless result.is_a?(Array)
    result << val[2]
   result
  end
.,.,

 # reduce 171 omitted

 # reduce 172 omitted

 # reduce 173 omitted

 # reduce 174 omitted

module_eval <<'.,.,', 'grammar.ra', 604
  def _reduce_175( val, _values, result )
    result = nil
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 608
  def _reduce_176( val, _values, result )
    result = ast AST::ASTArray, :children => []
   result
  end
.,.,

 # reduce 177 omitted

module_eval <<'.,.,', 'grammar.ra', 613
  def _reduce_178( val, _values, result )
    result = nil
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 617
  def _reduce_179( val, _values, result )
    result = val[1]
    result = [result] unless result[0].is_a?(Array)
   result
  end
.,.,

 # reduce 180 omitted

module_eval <<'.,.,', 'grammar.ra', 624
  def _reduce_181( val, _values, result )
    result = val[0]
    result = [result] unless result[0].is_a?(Array)
    result << val[2]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 629
  def _reduce_182( val, _values, result )
    Puppet.warning addcontext("Deprecation notice: must now include '$' in prototype")
    result = [val[0], val[2]]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 633
  def _reduce_183( val, _values, result )
    Puppet.warning addcontext("Deprecation notice: must now include '$' in prototype")
    result = [val[0]]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 635
  def _reduce_184( val, _values, result )
    result = [val[0], val[2]]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 637
  def _reduce_185( val, _values, result )
    result = [val[0]]
   result
  end
.,.,

 # reduce 186 omitted

module_eval <<'.,.,', 'grammar.ra', 642
  def _reduce_187( val, _values, result )
    result = val[1]
   result
  end
.,.,

 # reduce 188 omitted

module_eval <<'.,.,', 'grammar.ra', 647
  def _reduce_189( val, _values, result )
    result = val[1]
   result
  end
.,.,

 # reduce 190 omitted

 # reduce 191 omitted

module_eval <<'.,.,', 'grammar.ra', 653
  def _reduce_192( val, _values, result )
    result = ast AST::Variable, :value => val[0]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 661
  def _reduce_193( val, _values, result )
    if val[1].instance_of?(AST::ASTArray)
        result = val[1]
    else
        result = ast AST::ASTArray, :children => [val[1]]
    end
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 663
  def _reduce_194( val, _values, result )
    result = ast AST::ASTArray
   result
  end
.,.,

 # reduce 195 omitted

 # reduce 196 omitted

 # reduce 197 omitted

module_eval <<'.,.,', 'grammar.ra', 668
  def _reduce_198( val, _values, result )
 result = nil
   result
  end
.,.,

 def _reduce_none( val, _values, result )
  result
 end

    end   # class Parser

  end   # module Parser

end   # module Puppet
