#
# DO NOT MODIFY!!!!
# This file is automatically generated by racc 1.4.5
# from racc grammer file "grammar.ra".
#

require 'racc/parser'


require 'puppet'
require 'puppet/util/loadedfile'
require 'puppet/parser/lexer'
require 'puppet/parser/ast'
#require 'puppet/parser/interpreter'

module Puppet
    class ParseError < Puppet::Error; end
    class ImportError < Racc::ParseError; end
    class AlreadyImportedError < ImportError; end
end

Puppet[:typecheck] = true
Puppet[:paramcheck] = true


module Puppet

  module Parser

    class Parser < Racc::Parser

module_eval <<'..end grammar.ra modeval..id7dbe8301d1', 'grammar.ra', 644

# It got too annoying having code in a file that needs to be compiled.
require 'puppet/parser/parser_support'

# Make emacs happy
# Local Variables:
# mode: ruby
# End:

# $Id$

..end grammar.ra modeval..id7dbe8301d1

##### racc 1.4.5 generates ###

racc_reduce_table = [
 0, 0, :racc_error,
 1, 53, :_reduce_1,
 1, 53, :_reduce_none,
 1, 54, :_reduce_none,
 2, 54, :_reduce_4,
 1, 56, :_reduce_none,
 1, 56, :_reduce_none,
 1, 56, :_reduce_none,
 1, 56, :_reduce_none,
 1, 56, :_reduce_none,
 1, 56, :_reduce_none,
 1, 56, :_reduce_none,
 1, 56, :_reduce_none,
 1, 56, :_reduce_none,
 1, 56, :_reduce_none,
 1, 56, :_reduce_none,
 1, 56, :_reduce_none,
 1, 56, :_reduce_none,
 4, 64, :_reduce_18,
 3, 64, :_reduce_19,
 2, 64, :_reduce_20,
 1, 70, :_reduce_none,
 1, 70, :_reduce_none,
 1, 71, :_reduce_none,
 3, 71, :_reduce_24,
 1, 73, :_reduce_none,
 1, 73, :_reduce_none,
 1, 73, :_reduce_none,
 1, 73, :_reduce_none,
 1, 73, :_reduce_none,
 1, 73, :_reduce_none,
 1, 73, :_reduce_none,
 1, 73, :_reduce_32,
 1, 72, :_reduce_none,
 3, 72, :_reduce_34,
 5, 57, :_reduce_35,
 5, 57, :_reduce_36,
 5, 57, :_reduce_37,
 5, 68, :_reduce_38,
 2, 58, :_reduce_39,
 1, 89, :_reduce_40,
 2, 89, :_reduce_41,
 2, 59, :_reduce_42,
 3, 90, :_reduce_43,
 3, 90, :_reduce_44,
 1, 91, :_reduce_none,
 1, 91, :_reduce_none,
 3, 91, :_reduce_47,
 1, 92, :_reduce_none,
 3, 92, :_reduce_49,
 1, 93, :_reduce_none,
 1, 93, :_reduce_none,
 3, 94, :_reduce_52,
 3, 94, :_reduce_53,
 1, 95, :_reduce_none,
 1, 95, :_reduce_none,
 4, 97, :_reduce_56,
 1, 83, :_reduce_none,
 3, 83, :_reduce_58,
 0, 84, :_reduce_none,
 1, 84, :_reduce_none,
 1, 99, :_reduce_61,
 1, 74, :_reduce_62,
 1, 76, :_reduce_63,
 1, 98, :_reduce_none,
 1, 98, :_reduce_none,
 1, 98, :_reduce_none,
 1, 98, :_reduce_none,
 1, 98, :_reduce_none,
 1, 98, :_reduce_none,
 3, 60, :_reduce_70,
 3, 69, :_reduce_71,
 0, 85, :_reduce_72,
 1, 85, :_reduce_73,
 3, 85, :_reduce_74,
 3, 102, :_reduce_75,
 3, 103, :_reduce_76,
 1, 104, :_reduce_none,
 1, 104, :_reduce_none,
 0, 88, :_reduce_79,
 1, 88, :_reduce_80,
 3, 88, :_reduce_81,
 1, 105, :_reduce_none,
 3, 105, :_reduce_83,
 1, 96, :_reduce_none,
 1, 96, :_reduce_none,
 1, 96, :_reduce_none,
 1, 96, :_reduce_none,
 1, 96, :_reduce_none,
 1, 96, :_reduce_none,
 1, 101, :_reduce_none,
 1, 101, :_reduce_none,
 1, 101, :_reduce_none,
 1, 101, :_reduce_none,
 1, 101, :_reduce_none,
 1, 101, :_reduce_none,
 1, 101, :_reduce_none,
 1, 101, :_reduce_none,
 1, 101, :_reduce_none,
 1, 101, :_reduce_none,
 4, 78, :_reduce_100,
 3, 78, :_reduce_101,
 1, 80, :_reduce_102,
 1, 80, :_reduce_103,
 1, 77, :_reduce_104,
 4, 81, :_reduce_105,
 4, 81, :_reduce_106,
 6, 62, :_reduce_107,
 0, 108, :_reduce_none,
 4, 108, :_reduce_109,
 1, 107, :_reduce_none,
 5, 61, :_reduce_111,
 1, 109, :_reduce_none,
 2, 109, :_reduce_113,
 5, 110, :_reduce_114,
 4, 110, :_reduce_115,
 1, 111, :_reduce_none,
 3, 111, :_reduce_117,
 3, 79, :_reduce_118,
 1, 113, :_reduce_none,
 4, 113, :_reduce_120,
 1, 115, :_reduce_none,
 3, 115, :_reduce_122,
 3, 114, :_reduce_123,
 1, 112, :_reduce_none,
 1, 112, :_reduce_none,
 1, 112, :_reduce_none,
 1, 112, :_reduce_none,
 1, 112, :_reduce_none,
 1, 112, :_reduce_none,
 1, 112, :_reduce_none,
 1, 112, :_reduce_131,
 1, 116, :_reduce_132,
 3, 116, :_reduce_133,
 2, 63, :_reduce_134,
 6, 65, :_reduce_135,
 5, 65, :_reduce_136,
 6, 66, :_reduce_137,
 5, 66, :_reduce_138,
 6, 67, :_reduce_139,
 5, 67, :_reduce_140,
 1, 87, :_reduce_none,
 1, 82, :_reduce_none,
 1, 82, :_reduce_none,
 1, 119, :_reduce_none,
 3, 119, :_reduce_145,
 1, 121, :_reduce_none,
 1, 121, :_reduce_none,
 1, 121, :_reduce_none,
 1, 121, :_reduce_none,
 0, 55, :_reduce_150,
 0, 122, :_reduce_151,
 1, 117, :_reduce_none,
 3, 117, :_reduce_153,
 3, 117, :_reduce_154,
 1, 123, :_reduce_none,
 3, 123, :_reduce_156,
 3, 124, :_reduce_157,
 1, 124, :_reduce_158,
 3, 124, :_reduce_159,
 1, 124, :_reduce_160,
 1, 120, :_reduce_none,
 2, 120, :_reduce_162,
 1, 118, :_reduce_none,
 2, 118, :_reduce_164,
 1, 125, :_reduce_none,
 1, 125, :_reduce_none,
 1, 75, :_reduce_167,
 3, 100, :_reduce_168,
 2, 100, :_reduce_169,
 1, 106, :_reduce_none,
 1, 106, :_reduce_none,
 0, 86, :_reduce_none,
 1, 86, :_reduce_173 ]

racc_reduce_n = 174

racc_shift_n = 279

racc_action_table = [
    77,    57,    60,   246,   167,   105,    77,    57,    60,   101,
   199,   235,  -124,   167,   241,   203,    77,    57,    60,   234,
    54,    92,    77,    57,    60,    94,   131,   240,   208,   209,
   104,    47,    77,    57,    60,    59,    63,    47,    95,    68,
   131,    59,    63,   137,    55,    68,   166,    47,    65,   211,
    55,    59,   178,    47,    65,    68,  -125,    59,    63,   173,
   116,    68,    96,    47,    65,  -126,    55,    59,   119,  -128,
    65,    68,    77,    57,    60,   147,   116,   208,   209,   147,
    65,   213,    77,    57,    60,   147,    47,    40,    41,   212,
    47,   151,    54,    57,    60,   151,    47,    35,    77,    57,
    60,   151,   188,    47,     4,     9,   172,    59,    63,   199,
     9,    68,    50,    47,   203,  -125,    55,    59,    63,   204,
    65,    68,    42,    47,   205,    43,    55,    59,    63,    47,
    65,    68,    35,    59,    63,    51,    55,    68,   167,     4,
    65,   147,    55,    77,    57,    60,    65,    33,    34,    77,
    57,    60,    47,   171,    40,    41,    35,   151,  -127,    77,
    57,    60,  -129,     4,   214,    77,    57,    60,   208,   209,
    40,    41,    57,    60,    47,    77,    57,    60,    59,    63,
    47,   171,    68,  -124,    59,    63,  -130,    55,    68,    42,
    47,    65,    43,    55,    59,    63,    47,    65,    68,  -125,
    59,    63,   219,    55,    68,    42,    47,    65,    43,    55,
    59,    63,   111,    65,    68,    77,    57,    60,    92,    55,
   191,   262,  -127,    65,  -124,    77,    57,    60,   135,    57,
    60,    35,    57,    60,   159,   189,   224,   225,     4,   191,
   192,   145,    57,    60,   145,   228,    47,   131,    57,    60,
    59,    63,   127,   133,    68,   231,    47,    54,   132,    55,
    59,    63,    47,    65,    68,  -126,    59,    63,   168,    55,
    68,  -141,    47,    65,    51,    55,    59,   178,    47,    65,
    68,   238,    59,   178,   239,   116,    68,    57,    60,    65,
  -126,   116,   242,    57,    60,    65,   129,   245,  -128,   138,
  -129,   111,    94,    57,    60,  -127,   171,    91,   165,   263,
   265,    90,   163,    57,    60,   139,   140,    47,    46,    57,
    60,    59,   178,    47,  -129,    68,  -126,    59,   178,    51,
   116,    68,  -124,    47,    65,  -127,   116,    59,   178,   184,
    65,    68,  -125,    47,    57,    60,   116,    59,   178,    47,
    65,    68,    45,    59,    63,   272,   116,    68,  -173,   273,
    65,    51,    55,   160,    57,    60,    65,   179,   143,   145,
   183,    57,    60,   nil,    47,   237,   nil,   nil,    59,   178,
   nil,   nil,    68,   nil,   nil,   nil,   nil,   116,   nil,   nil,
   nil,    65,   nil,   nil,    47,   nil,   278,   nil,    59,   178,
   nil,    47,    68,   nil,   nil,    59,   178,   116,   nil,    68,
   nil,    65,   nil,   nil,   116,   257,   nil,    20,    65,    24,
    26,   nil,     1,     5,   nil,    12,   nil,    18,   nil,    22,
   nil,    27,   nil,   nil,     4,     9,    20,   243,    24,    26,
   nil,     1,     5,   nil,    12,   nil,    18,   nil,    22,   nil,
    27,   nil,   nil,     4,     9,   nil,   270,   nil,    20,   nil,
    24,    26,   nil,     1,     5,   nil,    12,   nil,    18,   nil,
    22,   nil,    27,   nil,   nil,     4,     9,    20,   233,    24,
    26,   nil,     1,     5,   nil,    12,   nil,    18,   nil,    22,
   nil,    27,   nil,   nil,     4,     9,   nil,   277,   nil,    20,
   nil,    24,    26,   nil,     1,     5,   nil,    12,   nil,    18,
   nil,    22,   nil,    27,   nil,   nil,     4,     9,    20,   274,
    24,    26,   nil,     1,     5,   nil,    12,   nil,    18,   nil,
    22,   nil,    27,   nil,   nil,     4,     9,   nil,   217,   nil,
    20,   nil,    24,    26,   nil,     1,     5,   nil,    12,   nil,
    18,   nil,    22,   nil,    27,   nil,   nil,     4,     9,    20,
   215,    24,    26,   nil,     1,     5,   nil,    12,   nil,    18,
   nil,    22,   nil,    27,   nil,   nil,     4,     9,   nil,   256,
   nil,    20,   nil,    24,    26,   nil,     1,     5,   nil,    12,
   nil,    18,   nil,    22,   nil,    27,   nil,   nil,     4,     9,
    20,   nil,    24,    26,   nil,     1,     5,   nil,    12,   nil,
    18,   nil,    22,   nil,    27,   nil,   nil,     4,     9,    20,
   nil,    24,    26,   nil,     1,     5,   nil,    12,   nil,    18,
   nil,    22,   nil,    27,   nil,   nil,     4,     9,    20,   nil,
    24,    26,   nil,     1,     5,   nil,    12,   nil,    18,   nil,
    22,   nil,    27,   nil,   nil,     4,     9,    20,   nil,    24,
    26,   nil,     1,     5,   nil,    12,   nil,    18,   nil,    22,
   nil,    27,   nil,   nil,     4,     9,    20,   nil,    24,    26,
   nil,     1,     5,   nil,    12,   nil,    18,   nil,    22,   nil,
    27,   nil,   nil,     4,     9 ]

racc_action_check = [
   228,   228,   228,   207,   111,    44,    54,    54,    54,    36,
   241,   195,    83,   119,   201,   241,   168,   168,   168,   195,
    63,    30,    92,    92,    92,    30,   119,   201,   207,   207,
    44,   228,    46,    46,    46,   228,   228,    54,    30,   228,
    63,    54,    54,    82,   228,    54,   111,   168,   228,   149,
    54,   168,   168,    92,    54,   168,    85,    92,    92,   128,
   168,    92,    30,    46,   168,    80,    92,    46,    46,    75,
    92,    46,   167,   167,   167,    95,    46,   149,   149,   147,
    46,   153,   166,   166,   166,    96,    95,   105,   105,   153,
   147,    95,    18,    18,    18,   147,    96,     6,    20,    20,
    20,    96,   133,   167,     6,     6,   126,   167,   167,   140,
   133,   167,    18,   166,   140,   125,   167,   166,   166,   142,
   167,   166,   105,    18,   144,   105,   166,    18,    18,    20,
   166,    18,     5,    20,    20,    18,    18,    20,   145,     5,
    18,   210,    20,    22,    22,    22,    20,     1,     1,   242,
   242,   242,   210,   146,    12,    12,    26,   210,   123,   238,
   238,   238,    74,    26,   156,    34,    34,    34,   156,   156,
   104,   104,   139,   139,    22,    33,    33,    33,    22,    22,
   242,   122,    22,   121,   242,   242,    73,    22,   242,    12,
   238,    22,    12,   242,   238,   238,    34,   242,   238,    72,
    34,    34,   164,   238,    34,   104,    33,   238,   104,    34,
    33,    33,   165,    34,    33,   190,   190,   190,    71,    33,
   230,   230,    70,    33,    69,    77,    77,    77,    77,    24,
    24,   101,    50,    50,   101,   136,   169,   170,   101,   136,
   136,   171,   235,   235,   172,   174,   190,   178,   138,   138,
   190,   190,    50,    66,   190,   185,    77,   188,    64,   190,
    77,    77,    50,   190,    77,    58,    50,    50,   120,    77,
    50,    55,   235,    77,    50,    50,   235,   235,   138,    50,
   235,   199,   138,   138,   200,   235,   138,   132,   132,   235,
   118,   138,   203,   260,   260,   138,    53,   206,    52,    86,
    49,    45,    38,   213,   213,    84,   227,    29,   107,   233,
   234,    27,   106,   212,   212,    88,    89,   132,    17,   131,
   131,   132,   132,   260,   248,   132,   250,   260,   260,   132,
   132,   260,   251,   213,   132,   253,   260,   213,   213,   131,
   260,   213,   254,   212,   179,   179,   213,   212,   212,   131,
   213,   212,    15,   131,   131,   261,   212,   131,   262,   263,
   212,   131,   131,   102,   129,   129,   131,   129,    91,    94,
   130,   197,   197,   nil,   179,   197,   nil,   nil,   179,   179,
   nil,   nil,   179,   nil,   nil,   nil,   nil,   179,   nil,   nil,
   nil,   179,   nil,   nil,   129,   nil,   276,   nil,   129,   129,
   nil,   197,   129,   nil,   nil,   197,   197,   129,   nil,   197,
   nil,   129,   nil,   nil,   197,   218,   nil,   276,   197,   276,
   276,   nil,   276,   276,   nil,   276,   nil,   276,   nil,   276,
   nil,   276,   nil,   nil,   276,   276,   218,   204,   218,   218,
   nil,   218,   218,   nil,   218,   nil,   218,   nil,   218,   nil,
   218,   nil,   nil,   218,   218,   nil,   244,   nil,   204,   nil,
   204,   204,   nil,   204,   204,   nil,   204,   nil,   204,   nil,
   204,   nil,   204,   nil,   nil,   204,   204,   244,   193,   244,
   244,   nil,   244,   244,   nil,   244,   nil,   244,   nil,   244,
   nil,   244,   nil,   nil,   244,   244,   nil,   275,   nil,   193,
   nil,   193,   193,   nil,   193,   193,   nil,   193,   nil,   193,
   nil,   193,   nil,   193,   nil,   nil,   193,   193,   275,   265,
   275,   275,   nil,   275,   275,   nil,   275,   nil,   275,   nil,
   275,   nil,   275,   nil,   nil,   275,   275,   nil,   163,   nil,
   265,   nil,   265,   265,   nil,   265,   265,   nil,   265,   nil,
   265,   nil,   265,   nil,   265,   nil,   nil,   265,   265,   163,
   160,   163,   163,   nil,   163,   163,   nil,   163,   nil,   163,
   nil,   163,   nil,   163,   nil,   nil,   163,   163,   nil,   216,
   nil,   160,   nil,   160,   160,   nil,   160,   160,   nil,   160,
   nil,   160,   nil,   160,   nil,   160,   nil,   nil,   160,   160,
   216,   nil,   216,   216,   nil,   216,   216,   nil,   216,   nil,
   216,   nil,   216,   nil,   216,   nil,   nil,   216,   216,   273,
   nil,   273,   273,   nil,   273,   273,   nil,   273,   nil,   273,
   nil,   273,   nil,   273,   nil,   nil,   273,   273,    32,   nil,
    32,    32,   nil,    32,    32,   nil,    32,   nil,    32,   nil,
    32,   nil,    32,   nil,   nil,    32,    32,   137,   nil,   137,
   137,   nil,   137,   137,   nil,   137,   nil,   137,   nil,   137,
   nil,   137,   nil,   nil,   137,   137,     0,   nil,     0,     0,
   nil,     0,     0,   nil,     0,   nil,     0,   nil,     0,   nil,
     0,   nil,   nil,     0,     0 ]

racc_action_pointer = [
   648,   134,   nil,   nil,   nil,    94,    59,   nil,   nil,   nil,
   nil,   nil,   151,   nil,   nil,   346,   nil,   312,    90,   nil,
    96,   nil,   141,   nil,   226,   nil,   118,   269,   nil,   307,
    19,   nil,   610,   173,   163,   nil,   -26,   nil,   296,   nil,
   nil,   nil,   nil,   nil,    -5,   263,    30,   nil,   nil,   279,
   229,   nil,   277,   275,     4,   269,   nil,   nil,   244,   nil,
   nil,   nil,   nil,    18,   248,   nil,   243,   nil,   nil,   203,
   201,   216,   178,   165,   141,    48,   nil,   223,   nil,   nil,
    44,   nil,    37,    -9,   284,    35,   293,   nil,   305,   294,
   nil,   368,    20,   nil,   331,    53,    63,   nil,   nil,   nil,
   nil,   193,   357,   nil,   167,    84,   306,   298,   nil,   nil,
   nil,    -5,   nil,   nil,   nil,   nil,   nil,   nil,   269,     4,
   229,   162,   171,   137,   nil,    94,    88,   nil,    36,   361,
   365,   316,   284,    64,   nil,   nil,   230,   629,   245,   169,
    76,   nil,   113,   nil,   119,   129,   143,    57,   nil,    29,
   nil,   nil,   nil,    65,   nil,   nil,   120,   nil,   nil,   nil,
   553,   nil,   nil,   531,   195,   174,    80,    70,    14,   229,
   230,   203,   206,   nil,   236,   nil,   nil,   nil,   225,   341,
   nil,   nil,   nil,   nil,   nil,   232,   nil,   nil,   255,   nil,
   213,   nil,   nil,   471,   nil,     1,   nil,   368,   nil,   268,
   261,     4,   nil,   279,   430,   nil,   290,   -20,   nil,   nil,
   119,   nil,   310,   300,   nil,   nil,   572,   nil,   408,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   296,    -2,   nil,
   211,   nil,   nil,   280,   304,   239,   nil,   nil,   157,   nil,
   nil,   -23,   147,   nil,   449,   nil,   nil,   nil,   303,   nil,
   305,   311,   nil,   314,   321,   nil,   nil,   nil,   nil,   nil,
   290,   348,   351,   353,   nil,   512,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   591,   nil,   490,   389,   nil,   nil ]

racc_action_default = [
  -150,  -174,   -14,    -2,  -143,  -174,  -174,   -15,    -3,  -141,
   -16,    -5,  -174,   -17,    -6,  -174,    -7,  -174,  -142,    -8,
  -174,    -9,  -174,   -10,  -174,   -11,  -174,   -40,   -12,  -174,
  -174,   -13,    -1,  -174,  -174,  -142,  -150,   -39,  -174,  -144,
  -148,  -147,  -146,  -149,  -150,   -79,   -72,  -167,  -130,   -28,
  -174,   -32,   -29,  -174,  -174,   -63,   -30,  -102,   -31,  -104,
  -103,   -33,   -20,   -62,   -21,   -61,   -22,   -23,  -131,   -25,
   -26,  -174,   -27,   -99,   -93,   -98,   -96,  -174,  -110,   -94,
   -90,   -97,  -174,   -91,   -95,   -92,  -174,  -132,  -134,  -150,
   -41,  -174,  -174,   -42,   -72,  -150,  -150,    -4,   -70,   -71,
  -163,  -174,  -174,  -161,  -174,  -174,  -174,  -172,   -77,   -78,
   -80,  -174,  -129,  -128,   -69,   -67,   -63,   -73,   -64,   -62,
   -59,   -65,  -172,   -68,   -57,   -66,  -174,   -19,  -174,  -174,
  -174,  -174,  -174,  -174,   -82,  -169,  -174,  -174,  -174,  -174,
  -151,  -152,  -174,   279,  -174,  -174,  -172,  -150,   -45,  -174,
   -46,   -62,   -48,  -174,   -55,   -54,  -174,  -164,  -165,  -166,
  -174,  -162,  -145,  -174,  -174,  -173,  -174,  -174,   -60,  -174,
  -174,  -173,   -72,   -18,  -174,  -126,  -118,  -119,   -62,  -174,
  -124,  -127,  -125,  -105,  -101,  -174,   -24,   -34,  -174,  -168,
  -174,  -170,  -171,  -174,  -112,  -174,  -116,  -174,  -133,  -160,
  -174,  -174,  -155,  -158,  -174,  -106,  -174,  -174,   -51,   -50,
  -174,   -44,  -174,  -174,   -43,  -138,  -174,  -140,  -174,   -38,
   -81,   -76,   -75,   -58,   -35,   -36,   -74,  -172,  -174,  -121,
  -172,  -100,   -83,  -108,  -174,  -174,  -113,  -111,  -174,  -153,
  -154,  -174,  -174,  -136,  -174,   -37,   -49,   -47,   -87,   -88,
   -84,   -85,   -52,   -89,   -86,   -53,  -137,  -139,   -56,  -123,
  -174,  -174,  -171,  -174,  -107,  -174,  -117,  -159,  -156,  -157,
  -135,  -122,  -120,  -174,  -115,  -174,  -174,  -114,  -109 ]

racc_goto_table = [
    30,    32,    56,   108,   174,    97,    38,   110,    52,    39,
   122,   177,    62,   196,   190,     3,   202,   114,   194,    29,
    58,   124,   149,   156,   164,   247,    87,   136,    36,    93,
   115,    82,    30,   264,    56,   197,   113,   252,   255,   170,
    52,   107,   169,   176,   128,   120,   230,    88,   118,    89,
   142,   100,    58,   102,   174,    44,   106,   186,   146,   103,
    49,   229,   200,   206,   201,    37,   157,   nil,   nil,   nil,
   nil,    61,   196,    81,   207,    81,   nil,   236,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,    81,    81,   112,   nil,
   nil,   nil,    49,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   161,   162,    61,   141,   nil,   nil,    81,   260,   nil,
   266,   nil,   nil,   nil,   nil,    56,    56,   268,    72,   113,
   nil,    52,    52,   108,   158,   185,   nil,   220,   113,   226,
    81,   175,   nil,    58,    58,   174,   227,    30,   193,   114,
   175,   198,   271,   223,   258,    81,   125,   261,   nil,   nil,
    72,   nil,   115,   nil,   nil,   nil,   nil,   nil,   113,   nil,
    30,   216,   nil,    30,   218,   nil,    97,   nil,   nil,   113,
   118,   112,   nil,    49,    49,   nil,   nil,   nil,   nil,    70,
   112,   175,   nil,   nil,    61,   nil,   187,   113,   nil,    97,
   nil,    97,   nil,    30,   nil,   nil,   249,   249,   nil,   175,
   nil,   nil,   113,   113,    30,   244,   nil,   123,   nil,   nil,
   112,    70,   nil,   nil,   250,   250,    30,    97,    30,    81,
    81,   112,   nil,   nil,   nil,   113,   nil,   nil,   nil,   182,
   nil,    72,    72,   nil,   nil,   nil,   nil,   175,   182,   112,
   nil,   nil,   nil,    81,    30,   nil,   nil,   nil,    97,    97,
   113,   nil,   nil,   nil,   248,   248,   155,   155,   nil,   nil,
   nil,   nil,   175,   nil,   nil,    30,   275,   nil,   125,    78,
   nil,    86,    69,    30,   276,    30,    30,   112,   nil,   182,
   nil,    81,    98,    99,   nil,   nil,   nil,   nil,   nil,   nil,
   181,    81,    70,    70,   nil,    81,   nil,   182,   nil,   181,
   121,   nil,   112,   130,    69,   nil,   nil,   nil,   155,    73,
   nil,    73,   254,   254,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,    73,    73,   nil,   nil,   134,   nil,   nil,   123,
   nil,   nil,   nil,   nil,   nil,   182,   nil,   nil,   nil,   nil,
   181,   144,   nil,    73,   nil,   nil,   nil,   nil,   nil,   154,
   154,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   181,   nil,
   182,   nil,   nil,   nil,   nil,   nil,    73,   nil,   nil,   nil,
   nil,   155,   nil,   253,   253,   nil,   nil,   nil,   nil,   nil,
   nil,    73,   nil,   180,   nil,    69,    69,   nil,   nil,   nil,
   nil,   nil,   180,   nil,   nil,   nil,   181,   nil,   nil,   nil,
   nil,   154,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   221,   222,   nil,   nil,   nil,
   nil,   181,   121,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   180,   nil,   nil,   nil,   nil,   nil,   232,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   180,   nil,   nil,   nil,    73,    73,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   154,   nil,   251,   251,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   259,   nil,    73,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   267,   nil,   180,
   nil,   269,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   180,   nil,   nil,    73,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,    73,   nil,   nil,
   nil,    73 ]

racc_goto_check = [
    35,     2,    27,    50,    60,     4,    35,    52,    26,    69,
    33,    62,    18,    60,    54,     3,    72,    48,    58,     1,
    28,    45,    39,    39,    34,    40,    28,    53,    30,    38,
    27,    55,    35,    56,    27,    57,    26,    44,    44,    34,
    26,    36,    32,    61,    18,    31,    63,    64,    28,    30,
    65,     3,    28,    66,    60,    67,    68,    21,    33,     3,
    25,    62,    70,    34,    71,     5,    73,   nil,   nil,   nil,
   nil,    29,    60,    29,    39,    29,   nil,    58,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,    29,    29,    25,   nil,
   nil,   nil,    25,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,    69,    69,    29,     3,   nil,   nil,    29,    54,   nil,
    60,   nil,   nil,   nil,   nil,    27,    27,    72,    24,    26,
   nil,    26,    26,    50,    30,    18,   nil,    52,    26,    50,
    29,    28,   nil,    28,    28,    60,    33,    35,     2,    48,
    28,    28,    62,    45,    34,    29,    24,    34,   nil,   nil,
    24,   nil,    27,   nil,   nil,   nil,   nil,   nil,    26,   nil,
    35,     2,   nil,    35,     2,   nil,     4,   nil,   nil,    26,
    28,    25,   nil,    25,    25,   nil,   nil,   nil,   nil,    23,
    25,    28,   nil,   nil,    29,   nil,    29,    26,   nil,     4,
   nil,     4,   nil,    35,   nil,   nil,    27,    27,   nil,    28,
   nil,   nil,    26,    26,    35,     2,   nil,    23,   nil,   nil,
    25,    23,   nil,   nil,    28,    28,    35,     4,    35,    29,
    29,    25,   nil,   nil,   nil,    26,   nil,   nil,   nil,    24,
   nil,    24,    24,   nil,   nil,   nil,   nil,    28,    24,    25,
   nil,   nil,   nil,    29,    35,   nil,   nil,   nil,     4,     4,
    26,   nil,   nil,   nil,    25,    25,    23,    23,   nil,   nil,
   nil,   nil,    28,   nil,   nil,    35,     2,   nil,    24,    49,
   nil,    49,    22,    35,     2,    35,    35,    25,   nil,    24,
   nil,    29,    49,    49,   nil,   nil,   nil,   nil,   nil,   nil,
    23,    29,    23,    23,   nil,    29,   nil,    24,   nil,    23,
    22,   nil,    25,    49,    22,   nil,   nil,   nil,    23,    47,
   nil,    47,    24,    24,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,    47,    47,   nil,   nil,    49,   nil,   nil,    23,
   nil,   nil,   nil,   nil,   nil,    24,   nil,   nil,   nil,   nil,
    23,    49,   nil,    47,   nil,   nil,   nil,   nil,   nil,    22,
    22,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    23,   nil,
    24,   nil,   nil,   nil,   nil,   nil,    47,   nil,   nil,   nil,
   nil,    23,   nil,    23,    23,   nil,   nil,   nil,   nil,   nil,
   nil,    47,   nil,    22,   nil,    22,    22,   nil,   nil,   nil,
   nil,   nil,    22,   nil,   nil,   nil,    23,   nil,   nil,   nil,
   nil,    22,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,    49,    49,   nil,   nil,   nil,
   nil,    23,    22,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,    22,   nil,   nil,   nil,   nil,   nil,    49,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,    22,   nil,   nil,   nil,    47,    47,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,    22,   nil,    22,    22,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,    49,   nil,    47,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,    49,   nil,    22,
   nil,    49,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,    22,   nil,   nil,    47,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,    47,   nil,   nil,
   nil,    47 ]

racc_goto_pointer = [
   nil,    19,     1,    15,   -27,    59,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    -6,   nil,
   nil,   -75,   254,   161,   100,    42,   -10,   -16,     2,    53,
    23,    -1,   -78,   -36,   -83,     0,    -4,   nil,    -1,   -73,
  -185,   nil,   nil,   nil,  -175,   -25,   nil,   289,   -29,   249,
   -42,   nil,   -38,   -50,  -122,    11,  -200,  -103,  -120,   nil,
  -125,   -86,  -118,  -133,    23,   -39,    17,    43,    12,    -3,
   -78,   -76,  -124,   -35 ]

racc_goto_default = [
   nil,   nil,   nil,   148,     8,    11,    14,    16,    19,    21,
    23,    25,    28,    31,     2,     7,    10,    13,   nil,    64,
    66,    67,    83,    84,    85,    74,    75,    79,    80,    15,
    17,   nil,   nil,   nil,   nil,    71,   nil,     6,   nil,   nil,
   150,   210,   152,   153,   nil,   nil,   126,    48,    76,   nil,
   117,   109,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   195,
    53,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil ]

racc_token_table = {
 false => 0,
 Object.new => 1,
 :LBRACK => 2,
 :DQTEXT => 3,
 :SQTEXT => 4,
 :RBRACK => 5,
 :LBRACE => 6,
 :RBRACE => 7,
 :SYMBOL => 8,
 :FARROW => 9,
 :COMMA => 10,
 :TRUE => 11,
 :FALSE => 12,
 :EQUALS => 13,
 :APPENDS => 14,
 :LESSEQUAL => 15,
 :NOTEQUAL => 16,
 :DOT => 17,
 :COLON => 18,
 :LLCOLLECT => 19,
 :RRCOLLECT => 20,
 :QMARK => 21,
 :LPAREN => 22,
 :RPAREN => 23,
 :ISEQUAL => 24,
 :GREATEREQUAL => 25,
 :GREATERTHAN => 26,
 :LESSTHAN => 27,
 :IF => 28,
 :ELSE => 29,
 :IMPORT => 30,
 :DEFINE => 31,
 :ELSIF => 32,
 :VARIABLE => 33,
 :CLASS => 34,
 :INHERITS => 35,
 :NODE => 36,
 :BOOLEAN => 37,
 :NAME => 38,
 :SEMIC => 39,
 :CASE => 40,
 :DEFAULT => 41,
 :AT => 42,
 :LCOLLECT => 43,
 :RCOLLECT => 44,
 :CLASSNAME => 45,
 :CLASSREF => 46,
 :NOT => 47,
 :OR => 48,
 :AND => 49,
 :UNDEF => 50,
 :PARROW => 51 }

racc_use_result_var = true

racc_nt_base = 52

Racc_arg = [
 racc_action_table,
 racc_action_check,
 racc_action_default,
 racc_action_pointer,
 racc_goto_table,
 racc_goto_check,
 racc_goto_default,
 racc_goto_pointer,
 racc_nt_base,
 racc_reduce_table,
 racc_token_table,
 racc_shift_n,
 racc_reduce_n,
 racc_use_result_var ]

Racc_token_to_s_table = [
'$end',
'error',
'LBRACK',
'DQTEXT',
'SQTEXT',
'RBRACK',
'LBRACE',
'RBRACE',
'SYMBOL',
'FARROW',
'COMMA',
'TRUE',
'FALSE',
'EQUALS',
'APPENDS',
'LESSEQUAL',
'NOTEQUAL',
'DOT',
'COLON',
'LLCOLLECT',
'RRCOLLECT',
'QMARK',
'LPAREN',
'RPAREN',
'ISEQUAL',
'GREATEREQUAL',
'GREATERTHAN',
'LESSTHAN',
'IF',
'ELSE',
'IMPORT',
'DEFINE',
'ELSIF',
'VARIABLE',
'CLASS',
'INHERITS',
'NODE',
'BOOLEAN',
'NAME',
'SEMIC',
'CASE',
'DEFAULT',
'AT',
'LCOLLECT',
'RCOLLECT',
'CLASSNAME',
'CLASSREF',
'NOT',
'OR',
'AND',
'UNDEF',
'PARROW',
'$start',
'program',
'statements',
'nil',
'statement',
'resource',
'virtualresource',
'collection',
'assignment',
'casestatement',
'ifstatement',
'import',
'fstatement',
'definition',
'hostclass',
'nodedef',
'resourceoverride',
'append',
'funcvalues',
'namestrings',
'resourcerefs',
'namestring',
'name',
'variable',
'type',
'boolean',
'funcrvalue',
'selector',
'quotedtext',
'resourceref',
'classname',
'resourceinstances',
'endsemi',
'params',
'endcomma',
'classref',
'anyparams',
'at',
'collectrhand',
'collstatements',
'collstatement',
'colljoin',
'collexpr',
'colllval',
'simplervalue',
'resourceinst',
'resourcename',
'undef',
'array',
'rvalue',
'param',
'addparam',
'anyparam',
'rvalues',
'comma',
'iftest',
'else',
'caseopts',
'caseopt',
'casevalues',
'selectlhand',
'svalues',
'selectval',
'sintvalues',
'qtexts',
'argumentlist',
'classparent',
'hostnames',
'nodeparent',
'hostname',
'nothing',
'arguments',
'argument',
'classnameordefault']

Racc_debug_parser = false

##### racc system variables end #####

 # reduce 0 omitted

module_eval <<'.,.,', 'grammar.ra', 30
  def _reduce_1( val, _values, result )
    if val[0]
        # Make sure we always return an array.
        if val[0].is_a?(AST::ASTArray)
            if val[0].children.empty?
                result = nil
            else
                result = val[0]
            end
        else
            result = aryfy(val[0])
        end
    else
        result = nil
    end
   result
  end
.,.,

 # reduce 2 omitted

 # reduce 3 omitted

module_eval <<'.,.,', 'grammar.ra', 46
  def _reduce_4( val, _values, result )
    if val[0] and val[1]
        if val[0].instance_of?(AST::ASTArray)
            val[0].push(val[1])
            result = val[0]
        else
            result = ast AST::ASTArray, :children => [val[0],val[1]]
        end
    elsif obj = (val[0] || val[1])
        result = obj
    else result = nil
    end
   result
  end
.,.,

 # reduce 5 omitted

 # reduce 6 omitted

 # reduce 7 omitted

 # reduce 8 omitted

 # reduce 9 omitted

 # reduce 10 omitted

 # reduce 11 omitted

 # reduce 12 omitted

 # reduce 13 omitted

 # reduce 14 omitted

 # reduce 15 omitted

 # reduce 16 omitted

 # reduce 17 omitted

module_eval <<'.,.,', 'grammar.ra', 69
  def _reduce_18( val, _values, result )
    args = aryfy(val[2])
    result = ast AST::Function,
        :name => val[0],
        :arguments => args,
        :ftype => :statement
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 75
  def _reduce_19( val, _values, result )
    result = ast AST::Function,
        :name => val[0],
        :arguments => AST::ASTArray.new({}),
        :ftype => :statement
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 82
  def _reduce_20( val, _values, result )
    args = aryfy(val[1])
    result = ast AST::Function,
        :name => val[0],
        :arguments => args,
        :ftype => :statement
   result
  end
.,.,

 # reduce 21 omitted

 # reduce 22 omitted

 # reduce 23 omitted

module_eval <<'.,.,', 'grammar.ra', 92
  def _reduce_24( val, _values, result )
    result = aryfy(val[0], val[2])
    result.line = @lexer.line
    result.file = @lexer.file
   result
  end
.,.,

 # reduce 25 omitted

 # reduce 26 omitted

 # reduce 27 omitted

 # reduce 28 omitted

 # reduce 29 omitted

 # reduce 30 omitted

 # reduce 31 omitted

module_eval <<'.,.,', 'grammar.ra', 105
  def _reduce_32( val, _values, result )
                    result = ast AST::Name, :value => val[0]
   result
  end
.,.,

 # reduce 33 omitted

module_eval <<'.,.,', 'grammar.ra', 116
  def _reduce_34( val, _values, result )
    unless val[0].is_a?(AST::ASTArray)
        val[0] = aryfy(val[0])
    end

    val[0].push(val[2])

    result = val[0]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 137
  def _reduce_35( val, _values, result )
    array = val[2]
    if array.instance_of?(AST::ResourceInstance)
        array = [array]
    end
    result = ast AST::ASTArray

    # this iterates across each specified resourceinstance
    array.each { |instance|
        unless instance.instance_of?(AST::ResourceInstance)
            raise Puppet::Dev, "Got something that isn't an instance"
        end
        # now, i need to somehow differentiate between those things with
        # arrays in their names, and normal things
        result.push ast(AST::Resource,
            :type => val[0],
            :title => instance[0],
            :params => instance[1])
    }
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 140
  def _reduce_36( val, _values, result )
    # This is a deprecated syntax.
    error "All resource specifications require names"
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 143
  def _reduce_37( val, _values, result )
    # a defaults setting for a type
    result = ast(AST::ResourceDefaults, :type => val[0], :params => val[2])
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 148
  def _reduce_38( val, _values, result )
    result = ast AST::ResourceOverride, :object => val[0], :params => val[2]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 175
  def _reduce_39( val, _values, result )
    type = val[0]

    if (type == :exported and ! Puppet[:storeconfigs]) and ! Puppet[:parseonly]
        Puppet.warning addcontext("You cannot collect without storeconfigs being set")
    end

    if val[1].is_a? AST::ResourceDefaults
        error "Defaults are not virtualizable"
    end

    method = type.to_s + "="

    # Just mark our resources as exported and pass them through.
    if val[1].instance_of?(AST::ASTArray)
        val[1].each do |obj|
            obj.send(method, true)
        end
    else
        val[1].send(method, true)
    end

    result = val[1]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 176
  def _reduce_40( val, _values, result )
 result = :virtual
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 177
  def _reduce_41( val, _values, result )
 result = :exported
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 200
  def _reduce_42( val, _values, result )
    if val[0] =~ /^[a-z]/
        Puppet.warning addcontext("Collection names must now be capitalized")
    end
    type = val[0].downcase
    args = {:type => type}

    if val[1].is_a?(AST::CollExpr)
        args[:query] = val[1]
        args[:query].type = type
        args[:form] = args[:query].form
    else
        args[:form] = val[1]
    end
    if args[:form] == :exported and ! Puppet[:storeconfigs] and ! Puppet[:parseonly]
        Puppet.warning addcontext("You cannot collect exported resources without storeconfigs being set; the collection will be ignored")
    end
    result = ast AST::Collection, args
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 210
  def _reduce_43( val, _values, result )
    if val[1]
        result = val[1]
        result.form = :virtual
    else
        result = :virtual
    end
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 218
  def _reduce_44( val, _values, result )
    if val[1]
        result = val[1]
        result.form = :exported
    else
        result = :exported
    end
   result
  end
.,.,

 # reduce 45 omitted

 # reduce 46 omitted

module_eval <<'.,.,', 'grammar.ra', 226
  def _reduce_47( val, _values, result )
    result = ast AST::CollExpr, :test1 => val[0], :oper => val[1], :test2 => val[2]
   result
  end
.,.,

 # reduce 48 omitted

module_eval <<'.,.,', 'grammar.ra', 232
  def _reduce_49( val, _values, result )
    result = val[1]
    result.parens = true
   result
  end
.,.,

 # reduce 50 omitted

 # reduce 51 omitted

module_eval <<'.,.,', 'grammar.ra', 240
  def _reduce_52( val, _values, result )
    result = ast AST::CollExpr, :test1 => val[0], :oper => val[1], :test2 => val[2]
    #result = ast AST::CollExpr
    #result.push *val
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 245
  def _reduce_53( val, _values, result )
    result = ast AST::CollExpr, :test1 => val[0], :oper => val[1], :test2 => val[2]
    #result = ast AST::CollExpr
    #result.push *val
   result
  end
.,.,

 # reduce 54 omitted

 # reduce 55 omitted

module_eval <<'.,.,', 'grammar.ra', 252
  def _reduce_56( val, _values, result )
    result = ast AST::ResourceInstance, :children => [val[0],val[2]]
   result
  end
.,.,

 # reduce 57 omitted

module_eval <<'.,.,', 'grammar.ra', 262
  def _reduce_58( val, _values, result )
    if val[0].instance_of?(AST::ResourceInstance)
        result = ast AST::ASTArray, :children => [val[0],val[2]]
    else
        val[0].push val[2]
        result = val[0]
    end
   result
  end
.,.,

 # reduce 59 omitted

 # reduce 60 omitted

module_eval <<'.,.,', 'grammar.ra', 269
  def _reduce_61( val, _values, result )
    result = ast AST::Undef, :value => :undef
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 273
  def _reduce_62( val, _values, result )
    result = ast AST::Name, :value => val[0]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 277
  def _reduce_63( val, _values, result )
    result = ast AST::Type, :value => val[0]
   result
  end
.,.,

 # reduce 64 omitted

 # reduce 65 omitted

 # reduce 66 omitted

 # reduce 67 omitted

 # reduce 68 omitted

 # reduce 69 omitted

module_eval <<'.,.,', 'grammar.ra', 293
  def _reduce_70( val, _values, result )
    if val[0] =~ /::/
        raise Puppet::ParseError, "Cannot assign to variables in other namespaces"
    end
    # this is distinct from referencing a variable
    variable = ast AST::Name, :value => val[0]
    result = ast AST::VarDef, :name => variable, :value => val[2]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 298
  def _reduce_71( val, _values, result )
    variable = ast AST::Name, :value => val[0]
    result = ast AST::VarDef, :name => variable, :value => val[2], :append => true
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 303
  def _reduce_72( val, _values, result )
    result = ast AST::ASTArray
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 303
  def _reduce_73( val, _values, result )
 result = val[0]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 312
  def _reduce_74( val, _values, result )
    if val[0].instance_of?(AST::ASTArray)
        val[0].push(val[2])
        result = val[0]
    else
        result = ast AST::ASTArray, :children => [val[0],val[2]]
    end
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 316
  def _reduce_75( val, _values, result )
    result = ast AST::ResourceParam, :param => val[0], :value => val[2]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 321
  def _reduce_76( val, _values, result )
    result = ast AST::ResourceParam, :param => val[0], :value => val[2],
                                     :add => true
   result
  end
.,.,

 # reduce 77 omitted

 # reduce 78 omitted

module_eval <<'.,.,', 'grammar.ra', 329
  def _reduce_79( val, _values, result )
    result = ast AST::ASTArray
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 329
  def _reduce_80( val, _values, result )
 result = val[0]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 338
  def _reduce_81( val, _values, result )
    if val[0].instance_of?(AST::ASTArray)
        val[0].push(val[2])
        result = val[0]
    else
        result = ast AST::ASTArray, :children => [val[0],val[2]]
    end
   result
  end
.,.,

 # reduce 82 omitted

module_eval <<'.,.,', 'grammar.ra', 347
  def _reduce_83( val, _values, result )
    if val[0].instance_of?(AST::ASTArray)
        result = val[0].push(val[2])
    else
        result = ast AST::ASTArray, :children => [val[0],val[2]]
    end
   result
  end
.,.,

 # reduce 84 omitted

 # reduce 85 omitted

 # reduce 86 omitted

 # reduce 87 omitted

 # reduce 88 omitted

 # reduce 89 omitted

 # reduce 90 omitted

 # reduce 91 omitted

 # reduce 92 omitted

 # reduce 93 omitted

 # reduce 94 omitted

 # reduce 95 omitted

 # reduce 96 omitted

 # reduce 97 omitted

 # reduce 98 omitted

 # reduce 99 omitted

module_eval <<'.,.,', 'grammar.ra', 374
  def _reduce_100( val, _values, result )
    args = aryfy(val[2])
    result = ast AST::Function,
        :name => val[0],
        :arguments => args,
        :ftype => :rvalue
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 379
  def _reduce_101( val, _values, result )
    result = ast AST::Function,
        :name => val[0],
        :arguments => AST::ASTArray.new({}),
        :ftype => :rvalue
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 383
  def _reduce_102( val, _values, result )
    result = ast AST::String, :value => val[0]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 385
  def _reduce_103( val, _values, result )
    result = ast AST::FlatString, :value => val[0]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 389
  def _reduce_104( val, _values, result )
    result = ast AST::Boolean, :value => val[0]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 394
  def _reduce_105( val, _values, result )
    Puppet.warning addcontext("Deprecation notice:  Resource references should now be capitalized")
    result = ast AST::ResourceReference, :type => val[0], :title => val[2]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 396
  def _reduce_106( val, _values, result )
    result = ast AST::ResourceReference, :type => val[0], :title => val[2]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 409
  def _reduce_107( val, _values, result )
    args = {
        :test => val[1],
        :statements => val[3]
    }

    if val[5]
        args[:else] = val[5]
    end

    result = ast AST::IfStatement, args
   result
  end
.,.,

 # reduce 108 omitted

module_eval <<'.,.,', 'grammar.ra', 414
  def _reduce_109( val, _values, result )
    result = ast AST::Else, :statements => val[2]
   result
  end
.,.,

 # reduce 110 omitted

module_eval <<'.,.,', 'grammar.ra', 426
  def _reduce_111( val, _values, result )
    options = val[3]
    unless options.instance_of?(AST::ASTArray)
        options = ast AST::ASTArray, :children => [val[3]]
    end
    result = ast AST::CaseStatement, :test => val[1], :options => options
   result
  end
.,.,

 # reduce 112 omitted

module_eval <<'.,.,', 'grammar.ra', 436
  def _reduce_113( val, _values, result )
    if val[0].instance_of?(AST::ASTArray)
        val[0].push val[1]
        result = val[0]
    else
        result = ast AST::ASTArray, :children => [val[0], val[1]]
    end
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 440
  def _reduce_114( val, _values, result )
    result = ast AST::CaseOpt, :value => val[0], :statements => val[3]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 445
  def _reduce_115( val, _values, result )
    result = ast(AST::CaseOpt,
        :value => val[0],
        :statements => ast(AST::ASTArray)
    )
   result
  end
.,.,

 # reduce 116 omitted

module_eval <<'.,.,', 'grammar.ra', 455
  def _reduce_117( val, _values, result )
    if val[0].instance_of?(AST::ASTArray)
        val[0].push(val[2])
        result = val[0]
    else
        result = ast AST::ASTArray, :children => [val[0],val[2]]
    end
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 459
  def _reduce_118( val, _values, result )
    result = ast AST::Selector, :param => val[0], :values => val[2]
   result
  end
.,.,

 # reduce 119 omitted

module_eval <<'.,.,', 'grammar.ra', 461
  def _reduce_120( val, _values, result )
 result = val[1]
   result
  end
.,.,

 # reduce 121 omitted

module_eval <<'.,.,', 'grammar.ra', 472
  def _reduce_122( val, _values, result )
    if val[0].instance_of?(AST::ASTArray)
        val[0].push(val[2])
        result = val[0]
    else
        result = ast AST::ASTArray, :children => [val[0],val[2]]
    end
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 476
  def _reduce_123( val, _values, result )
    result = ast AST::ResourceParam, :param => val[0], :value => val[2]
   result
  end
.,.,

 # reduce 124 omitted

 # reduce 125 omitted

 # reduce 126 omitted

 # reduce 127 omitted

 # reduce 128 omitted

 # reduce 129 omitted

 # reduce 130 omitted

module_eval <<'.,.,', 'grammar.ra', 487
  def _reduce_131( val, _values, result )
    result = ast AST::Default, :value => val[0]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 489
  def _reduce_132( val, _values, result )
 result = [val[0].value]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 493
  def _reduce_133( val, _values, result )
    results = val[0] << val[2].value
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 501
  def _reduce_134( val, _values, result )
    val[1].each do |file|
        import(file)
    end

    result = AST::ASTArray.new(:children => [])
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 511
  def _reduce_135( val, _values, result )
    newdefine classname(val[1]), :arguments => val[2], :code => val[4]
    @lexer.indefine = false
    result = nil

#}           | DEFINE NAME argumentlist parent LBRACE RBRACE {
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 515
  def _reduce_136( val, _values, result )
    newdefine classname(val[1]), :arguments => val[2]
    @lexer.indefine = false
    result = nil
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 523
  def _reduce_137( val, _values, result )
    # Our class gets defined in the parent namespace, not our own.
    @lexer.namepop
    newclass classname(val[1]), :code => val[4], :parent => val[2]
    result = nil
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 528
  def _reduce_138( val, _values, result )
    # Our class gets defined in the parent namespace, not our own.
    @lexer.namepop
    newclass classname(val[1]), :parent => val[2]
    result = nil
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 533
  def _reduce_139( val, _values, result )
    newnode val[1], :parent => val[2], :code => val[4]
    result = nil
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 536
  def _reduce_140( val, _values, result )
    newnode val[1], :parent => val[2]
    result = nil
   result
  end
.,.,

 # reduce 141 omitted

 # reduce 142 omitted

 # reduce 143 omitted

 # reduce 144 omitted

module_eval <<'.,.,', 'grammar.ra', 550
  def _reduce_145( val, _values, result )
    result = val[0]
    result = [result] unless result.is_a?(Array)
    result << val[2]
   result
  end
.,.,

 # reduce 146 omitted

 # reduce 147 omitted

 # reduce 148 omitted

 # reduce 149 omitted

module_eval <<'.,.,', 'grammar.ra', 559
  def _reduce_150( val, _values, result )
    result = nil
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 563
  def _reduce_151( val, _values, result )
    result = ast AST::ASTArray, :children => []
   result
  end
.,.,

 # reduce 152 omitted

module_eval <<'.,.,', 'grammar.ra', 568
  def _reduce_153( val, _values, result )
    result = nil
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 572
  def _reduce_154( val, _values, result )
    result = val[1]
    result = [result] unless result[0].is_a?(Array)
   result
  end
.,.,

 # reduce 155 omitted

module_eval <<'.,.,', 'grammar.ra', 579
  def _reduce_156( val, _values, result )
    result = val[0]
    result = [result] unless result[0].is_a?(Array)
    result << val[2]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 584
  def _reduce_157( val, _values, result )
    Puppet.warning addcontext("Deprecation notice: must now include '$' in prototype")
    result = [val[0], val[2]]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 588
  def _reduce_158( val, _values, result )
    Puppet.warning addcontext("Deprecation notice: must now include '$' in prototype")
    result = [val[0]]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 590
  def _reduce_159( val, _values, result )
    result = [val[0], val[2]]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 592
  def _reduce_160( val, _values, result )
    result = [val[0]]
   result
  end
.,.,

 # reduce 161 omitted

module_eval <<'.,.,', 'grammar.ra', 597
  def _reduce_162( val, _values, result )
    result = val[1]
   result
  end
.,.,

 # reduce 163 omitted

module_eval <<'.,.,', 'grammar.ra', 602
  def _reduce_164( val, _values, result )
    result = val[1]
   result
  end
.,.,

 # reduce 165 omitted

 # reduce 166 omitted

module_eval <<'.,.,', 'grammar.ra', 608
  def _reduce_167( val, _values, result )
    result = ast AST::Variable, :value => val[0]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 616
  def _reduce_168( val, _values, result )
    if val[1].instance_of?(AST::ASTArray)
        result = val[1]
    else
        result = ast AST::ASTArray, :children => [val[1]]
    end
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 618
  def _reduce_169( val, _values, result )
    result = ast AST::ASTArray
   result
  end
.,.,

 # reduce 170 omitted

 # reduce 171 omitted

 # reduce 172 omitted

module_eval <<'.,.,', 'grammar.ra', 623
  def _reduce_173( val, _values, result )
 result = nil
   result
  end
.,.,

 def _reduce_none( val, _values, result )
  result
 end

    end   # class Parser

  end   # module Parser

end   # module Puppet
