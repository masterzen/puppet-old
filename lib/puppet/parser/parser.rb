#
# DO NOT MODIFY!!!!
# This file is automatically generated by racc 1.4.5
# from racc grammer file "grammar.ra".
#

require 'racc/parser'


require 'puppet'
require 'puppet/util/loadedfile'
require 'puppet/parser/lexer'
require 'puppet/parser/ast'
#require 'puppet/parser/interpreter'

module Puppet
    class ParseError < Puppet::Error; end
    class ImportError < Racc::ParseError; end
    class AlreadyImportedError < ImportError; end
end

Puppet[:typecheck] = true
Puppet[:paramcheck] = true


module Puppet

  module Parser

    class Parser < Racc::Parser

module_eval <<'..end grammar.ra modeval..idcb99f061ee', 'grammar.ra', 683

# It got too annoying having code in a file that needs to be compiled.
require 'puppet/parser/parser_support'

# Make emacs happy
# Local Variables:
# mode: ruby
# End:

# $Id$

..end grammar.ra modeval..idcb99f061ee

##### racc 1.4.5 generates ###

racc_reduce_table = [
 0, 0, :racc_error,
 1, 53, :_reduce_1,
 1, 53, :_reduce_none,
 1, 54, :_reduce_none,
 2, 54, :_reduce_4,
 1, 56, :_reduce_none,
 1, 56, :_reduce_none,
 1, 56, :_reduce_none,
 1, 56, :_reduce_none,
 1, 56, :_reduce_none,
 1, 56, :_reduce_none,
 1, 56, :_reduce_none,
 1, 56, :_reduce_none,
 1, 56, :_reduce_none,
 1, 56, :_reduce_none,
 1, 56, :_reduce_none,
 1, 56, :_reduce_none,
 1, 56, :_reduce_none,
 4, 64, :_reduce_18,
 3, 64, :_reduce_19,
 2, 64, :_reduce_20,
 1, 70, :_reduce_none,
 1, 70, :_reduce_none,
 1, 71, :_reduce_none,
 3, 71, :_reduce_24,
 1, 73, :_reduce_none,
 1, 73, :_reduce_none,
 1, 73, :_reduce_none,
 1, 73, :_reduce_none,
 1, 73, :_reduce_none,
 1, 73, :_reduce_none,
 1, 73, :_reduce_none,
 1, 73, :_reduce_32,
 1, 72, :_reduce_none,
 3, 72, :_reduce_34,
 5, 57, :_reduce_35,
 5, 57, :_reduce_36,
 5, 57, :_reduce_37,
 5, 68, :_reduce_38,
 2, 58, :_reduce_39,
 1, 89, :_reduce_40,
 2, 89, :_reduce_41,
 2, 59, :_reduce_42,
 3, 90, :_reduce_43,
 3, 90, :_reduce_44,
 1, 91, :_reduce_none,
 1, 91, :_reduce_none,
 3, 91, :_reduce_47,
 1, 92, :_reduce_none,
 3, 92, :_reduce_49,
 1, 93, :_reduce_none,
 1, 93, :_reduce_none,
 3, 94, :_reduce_52,
 3, 94, :_reduce_53,
 1, 95, :_reduce_none,
 1, 95, :_reduce_none,
 4, 97, :_reduce_56,
 1, 83, :_reduce_none,
 3, 83, :_reduce_58,
 0, 84, :_reduce_none,
 1, 84, :_reduce_none,
 1, 99, :_reduce_61,
 1, 74, :_reduce_62,
 1, 76, :_reduce_63,
 1, 98, :_reduce_none,
 1, 98, :_reduce_none,
 1, 98, :_reduce_none,
 1, 98, :_reduce_none,
 1, 98, :_reduce_none,
 1, 98, :_reduce_none,
 3, 60, :_reduce_70,
 3, 69, :_reduce_71,
 0, 85, :_reduce_72,
 1, 85, :_reduce_73,
 3, 85, :_reduce_74,
 3, 102, :_reduce_75,
 3, 103, :_reduce_76,
 1, 104, :_reduce_none,
 1, 104, :_reduce_none,
 0, 88, :_reduce_79,
 1, 88, :_reduce_80,
 3, 88, :_reduce_81,
 1, 105, :_reduce_none,
 3, 105, :_reduce_83,
 1, 96, :_reduce_none,
 1, 96, :_reduce_none,
 1, 96, :_reduce_none,
 1, 96, :_reduce_none,
 1, 96, :_reduce_none,
 1, 96, :_reduce_none,
 1, 101, :_reduce_none,
 1, 101, :_reduce_none,
 1, 101, :_reduce_none,
 1, 101, :_reduce_none,
 1, 101, :_reduce_none,
 1, 101, :_reduce_none,
 1, 101, :_reduce_none,
 1, 101, :_reduce_none,
 1, 101, :_reduce_none,
 1, 101, :_reduce_none,
 4, 78, :_reduce_100,
 3, 78, :_reduce_101,
 1, 80, :_reduce_102,
 1, 80, :_reduce_103,
 1, 77, :_reduce_104,
 4, 81, :_reduce_105,
 4, 81, :_reduce_106,
 6, 62, :_reduce_107,
 0, 108, :_reduce_none,
 4, 108, :_reduce_109,
 1, 107, :_reduce_none,
 1, 107, :_reduce_none,
 1, 107, :_reduce_none,
 1, 107, :_reduce_none,
 3, 107, :_reduce_114,
 3, 109, :_reduce_115,
 1, 113, :_reduce_none,
 1, 113, :_reduce_none,
 1, 113, :_reduce_none,
 3, 113, :_reduce_119,
 1, 112, :_reduce_none,
 1, 112, :_reduce_none,
 2, 111, :_reduce_122,
 3, 110, :_reduce_123,
 1, 114, :_reduce_none,
 1, 114, :_reduce_none,
 1, 114, :_reduce_none,
 1, 114, :_reduce_none,
 1, 114, :_reduce_none,
 1, 114, :_reduce_none,
 5, 61, :_reduce_130,
 1, 115, :_reduce_none,
 2, 115, :_reduce_132,
 5, 116, :_reduce_133,
 4, 116, :_reduce_134,
 1, 117, :_reduce_none,
 3, 117, :_reduce_136,
 3, 79, :_reduce_137,
 1, 119, :_reduce_none,
 4, 119, :_reduce_139,
 1, 121, :_reduce_none,
 3, 121, :_reduce_141,
 3, 120, :_reduce_142,
 1, 118, :_reduce_none,
 1, 118, :_reduce_none,
 1, 118, :_reduce_none,
 1, 118, :_reduce_none,
 1, 118, :_reduce_none,
 1, 118, :_reduce_none,
 1, 118, :_reduce_none,
 1, 118, :_reduce_150,
 1, 122, :_reduce_151,
 3, 122, :_reduce_152,
 2, 63, :_reduce_153,
 6, 65, :_reduce_154,
 5, 65, :_reduce_155,
 6, 66, :_reduce_156,
 5, 66, :_reduce_157,
 6, 67, :_reduce_158,
 5, 67, :_reduce_159,
 1, 87, :_reduce_none,
 1, 82, :_reduce_none,
 1, 82, :_reduce_none,
 1, 125, :_reduce_none,
 3, 125, :_reduce_164,
 1, 127, :_reduce_none,
 1, 127, :_reduce_none,
 1, 127, :_reduce_none,
 1, 127, :_reduce_none,
 0, 55, :_reduce_169,
 0, 128, :_reduce_170,
 1, 123, :_reduce_none,
 3, 123, :_reduce_172,
 3, 123, :_reduce_173,
 1, 129, :_reduce_none,
 3, 129, :_reduce_175,
 3, 130, :_reduce_176,
 1, 130, :_reduce_177,
 3, 130, :_reduce_178,
 1, 130, :_reduce_179,
 1, 126, :_reduce_none,
 2, 126, :_reduce_181,
 1, 124, :_reduce_none,
 2, 124, :_reduce_183,
 1, 131, :_reduce_none,
 1, 131, :_reduce_none,
 1, 75, :_reduce_186,
 3, 100, :_reduce_187,
 2, 100, :_reduce_188,
 1, 106, :_reduce_none,
 1, 106, :_reduce_none,
 0, 86, :_reduce_none,
 1, 86, :_reduce_192 ]

racc_reduce_n = 193

racc_shift_n = 305

racc_action_table = [
    80,    56,    59,   164,    53,   184,  -160,    80,    56,    59,
   141,   154,   241,   184,    47,   209,   286,   273,    35,   168,
    73,    80,    56,    59,   135,     4,   135,    80,    56,    59,
   272,    47,    39,    40,   111,    58,    62,  -146,    47,    67,
   238,   239,    58,    62,    54,    83,    67,   183,    64,    39,
    40,    54,    47,   152,   153,    64,    58,    62,    47,   109,
    67,  -143,    58,    62,   155,    54,    67,    42,   197,    64,
    44,    54,    80,    56,    59,    64,     9,   229,   268,    80,
    56,    59,   230,    35,    42,    97,   267,    44,   243,    99,
     4,     9,    73,    80,    56,    59,   242,    35,   156,    53,
    56,    59,   100,    47,     4,   234,    35,    58,    62,   175,
    47,    67,   235,     4,    58,   194,    54,    83,    67,    50,
    64,    39,    40,   121,    47,   184,   101,    64,    58,    62,
    47,   188,    67,   157,    58,    62,   277,    54,    67,   164,
  -145,    64,    51,    54,    80,    56,    59,    64,   160,   229,
    47,    80,    56,    59,   230,   168,    42,   162,   164,    44,
   191,   238,   239,  -147,    73,    80,    56,    59,   206,    47,
   249,    80,    56,    59,   168,    47,    33,    34,   116,    58,
    62,  -148,    47,    67,    56,    59,    58,    62,    54,    83,
    67,  -149,    64,   152,   153,    54,    47,    56,    59,    64,
    58,    62,    47,   288,    67,  -144,    58,    62,   254,    54,
    67,   164,   255,    64,   162,    54,    80,    56,    59,    64,
   152,   153,    47,    80,    56,    59,   162,   168,   152,   153,
   244,   145,   149,   258,   238,   239,    73,    80,    56,    59,
   143,   144,   146,   148,    80,    56,    59,    47,   135,    53,
    97,    58,    62,   261,    47,    67,  -146,   218,    58,    62,
    54,    83,    67,  -148,    64,   207,  -145,    54,    47,   209,
   210,    64,    58,    62,  -143,    47,    67,  -146,  -144,    58,
    62,    54,    83,    67,   138,    64,   190,   137,    54,    80,
    56,    59,    64,   136,   189,    80,    56,    59,   269,   270,
   271,  -144,  -145,   276,  -144,    80,    56,    59,  -146,  -147,
  -148,    80,    56,    59,   116,    99,   188,   188,   106,    96,
    47,   289,   291,    95,    58,    62,    47,  -143,    67,   185,
    58,    62,  -145,    54,    67,    46,    47,    64,    45,    54,
    58,    62,    47,    64,    67,   298,    58,   124,  -192,    54,
    67,    56,    59,    64,   199,   121,   299,    56,    59,    64,
   145,   149,   182,   179,   177,  -143,   nil,    56,    59,   143,
   144,   146,   148,    56,    59,   nil,   nil,   192,   nil,   nil,
   nil,    47,   nil,   nil,   nil,    58,   194,    47,   nil,    67,
   nil,    58,    62,   nil,   121,    67,   nil,    47,    64,    51,
    54,    58,   194,    47,    64,    67,   nil,    58,   194,   nil,
   121,    67,    56,    59,    64,   nil,   121,   nil,    56,    59,
    64,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    56,    59,
   nil,   nil,   132,   nil,    56,    59,   nil,   nil,   nil,   nil,
   nil,   nil,    47,   nil,    56,    59,    58,    62,    47,   nil,
    67,   nil,    58,   194,    51,    54,    67,   nil,    47,    64,
   nil,   121,    58,   194,    47,    64,    67,   nil,    58,   194,
    51,   121,    67,   nil,    47,    64,   nil,   121,    58,   194,
   nil,    64,    67,    56,    59,    56,    59,   121,   nil,   266,
   nil,    64,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    56,
    59,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,    47,   nil,    47,   nil,    58,   194,    58,
   194,    67,   nil,    67,   300,   nil,   121,   nil,   121,    47,
    64,   nil,    64,    58,   194,   nil,   nil,    67,   nil,   nil,
   nil,   nil,   121,   282,   nil,    20,    64,    24,    26,   nil,
     1,     5,   nil,    12,   nil,    18,   nil,    22,   nil,    27,
   nil,   nil,     4,     9,    20,   281,    24,    26,   nil,     1,
     5,   nil,    12,   nil,    18,   nil,    22,   nil,    27,   nil,
   nil,     4,     9,   nil,   296,   nil,    20,   nil,    24,    26,
   nil,     1,     5,   nil,    12,   nil,    18,   nil,    22,   nil,
    27,   nil,   nil,     4,     9,    20,   264,    24,    26,   nil,
     1,     5,   nil,    12,   nil,    18,   nil,    22,   nil,    27,
   nil,   nil,     4,     9,   nil,   247,   nil,    20,   nil,    24,
    26,   nil,     1,     5,   nil,    12,   nil,    18,   nil,    22,
   nil,    27,   nil,   nil,     4,     9,    20,   303,    24,    26,
   nil,     1,     5,   nil,    12,   nil,    18,   nil,    22,   nil,
    27,   nil,   nil,     4,     9,   nil,   245,   nil,    20,   nil,
    24,    26,   nil,     1,     5,   nil,    12,   nil,    18,   nil,
    22,   nil,    27,   nil,   nil,     4,     9,    20,   304,    24,
    26,   nil,     1,     5,   nil,    12,   nil,    18,   nil,    22,
   nil,    27,   nil,   nil,     4,     9,   nil,   274,   nil,    20,
   nil,    24,    26,   nil,     1,     5,   nil,    12,   nil,    18,
   nil,    22,   nil,    27,   nil,   nil,     4,     9,    20,   nil,
    24,    26,   nil,     1,     5,   nil,    12,   nil,    18,   nil,
    22,   nil,    27,   nil,   nil,     4,     9,    20,   nil,    24,
    26,   nil,     1,     5,   nil,    12,   nil,    18,   nil,    22,
   nil,    27,   nil,   nil,     4,     9,    20,   nil,    24,    26,
   nil,     1,     5,   nil,    12,   nil,    18,   nil,    22,   nil,
    27,   nil,   nil,     4,     9,    20,   nil,    24,    26,   nil,
     1,     5,   nil,    12,   nil,    18,   nil,    22,   nil,    27,
   nil,   nil,     4,     9,    20,   nil,    24,    26,   nil,     1,
     5,   nil,    12,   nil,    18,   nil,    22,   nil,    27,   nil,
   nil,     4,     9 ]

racc_action_check = [
    83,    83,    83,   240,    62,   116,    54,    80,    80,    80,
    80,    86,   166,   124,   240,   259,   259,   232,     5,   240,
    83,   183,   183,   183,    62,     5,   124,   184,   184,   184,
   232,    83,   111,   111,    41,    83,    83,    88,    80,    83,
   166,   166,    80,    80,    83,    83,    80,   116,    83,   109,
   109,    80,   183,    86,    86,    80,   183,   183,   184,    41,
   183,    87,   184,   184,    91,   183,   184,   111,   137,   183,
   111,   184,    73,    73,    73,   184,   137,   273,   226,   185,
   185,   185,   273,     6,   109,    30,   226,   109,   170,    30,
     6,     6,    73,   208,   208,   208,   170,    26,    92,    18,
    18,    18,    30,    73,    26,   159,   106,    73,    73,   106,
   185,    73,   161,   106,   185,   185,    73,    73,   185,    18,
    73,    12,    12,   185,   208,   162,    30,   185,   208,   208,
    18,   163,   208,    94,    18,    18,   237,   208,    18,   164,
    84,   208,    18,    18,    20,    20,    20,    18,    96,   157,
   164,    22,    22,    22,   157,   164,    12,    99,   101,    12,
   134,   237,   237,    78,    20,   270,   270,   270,   139,   101,
   181,   269,   269,   269,   101,    20,     1,     1,   182,    20,
    20,    76,    22,    20,    24,    24,    22,    22,    20,    20,
    22,    75,    20,   139,   139,    22,   270,   156,   156,    22,
   270,   270,   269,   263,   270,    72,   269,   269,   186,   270,
   269,   100,   187,   270,   188,   269,   218,   218,   218,   269,
   150,   150,   100,    97,    97,    97,   189,   100,   263,   263,
   173,   221,   221,   193,   173,   173,   218,   151,   151,   151,
   221,   221,   221,   221,    53,    53,    53,   218,   194,   197,
    71,   218,   218,   201,    97,   218,    70,   151,    97,    97,
   218,   218,    97,   211,   218,   142,   213,    97,   151,   142,
   142,    97,   151,   151,    69,    53,   151,   216,   217,    53,
    53,   151,   151,    53,    68,   151,   133,    65,    53,    33,
    33,    33,    53,    63,   131,    34,    34,    34,   229,   230,
   231,   130,    57,   236,    90,   261,   261,   261,   128,    52,
    49,    46,    46,    46,    45,    38,   257,   127,    36,    29,
    33,   264,   267,    27,    33,    33,    34,   126,    33,   125,
    34,    34,   123,    33,    34,    17,   261,    33,    15,    34,
   261,   261,    46,    34,   261,   285,    46,    46,   286,   261,
    46,   138,   138,   261,   138,    46,   289,   135,   135,    46,
    81,    81,   112,   110,   107,   215,   nil,   284,   284,    81,
    81,    81,    81,   243,   243,   nil,   nil,   135,   nil,   nil,
   nil,   138,   nil,   nil,   nil,   138,   138,   135,   nil,   138,
   nil,   135,   135,   nil,   138,   135,   nil,   284,   138,   135,
   135,   284,   284,   243,   135,   284,   nil,   243,   243,   nil,
   284,   243,    50,    50,   284,   nil,   243,   nil,   242,   242,
   243,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   136,   136,
   nil,   nil,    50,   nil,   147,   147,   nil,   nil,   nil,   nil,
   nil,   nil,    50,   nil,   199,   199,    50,    50,   242,   nil,
    50,   nil,   242,   242,    50,    50,   242,   nil,   136,    50,
   nil,   242,   136,   136,   147,   242,   136,   nil,   147,   147,
   136,   136,   147,   nil,   199,   136,   nil,   147,   199,   199,
   nil,   147,   199,   155,   155,   224,   224,   199,   nil,   224,
   nil,   199,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   268,
   268,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   155,   nil,   224,   nil,   155,   155,   224,
   224,   155,   nil,   224,   291,   nil,   155,   nil,   224,   268,
   155,   nil,   224,   268,   268,   nil,   nil,   268,   nil,   nil,
   nil,   nil,   268,   248,   nil,   291,   268,   291,   291,   nil,
   291,   291,   nil,   291,   nil,   291,   nil,   291,   nil,   291,
   nil,   nil,   291,   291,   248,   246,   248,   248,   nil,   248,
   248,   nil,   248,   nil,   248,   nil,   248,   nil,   248,   nil,
   nil,   248,   248,   nil,   275,   nil,   246,   nil,   246,   246,
   nil,   246,   246,   nil,   246,   nil,   246,   nil,   246,   nil,
   246,   nil,   nil,   246,   246,   275,   223,   275,   275,   nil,
   275,   275,   nil,   275,   nil,   275,   nil,   275,   nil,   275,
   nil,   nil,   275,   275,   nil,   179,   nil,   223,   nil,   223,
   223,   nil,   223,   223,   nil,   223,   nil,   223,   nil,   223,
   nil,   223,   nil,   nil,   223,   223,   179,   301,   179,   179,
   nil,   179,   179,   nil,   179,   nil,   179,   nil,   179,   nil,
   179,   nil,   nil,   179,   179,   nil,   177,   nil,   301,   nil,
   301,   301,   nil,   301,   301,   nil,   301,   nil,   301,   nil,
   301,   nil,   301,   nil,   nil,   301,   301,   177,   302,   177,
   177,   nil,   177,   177,   nil,   177,   nil,   177,   nil,   177,
   nil,   177,   nil,   nil,   177,   177,   nil,   234,   nil,   302,
   nil,   302,   302,   nil,   302,   302,   nil,   302,   nil,   302,
   nil,   302,   nil,   302,   nil,   nil,   302,   302,   234,   nil,
   234,   234,   nil,   234,   234,   nil,   234,   nil,   234,   nil,
   234,   nil,   234,   nil,   nil,   234,   234,   154,   nil,   154,
   154,   nil,   154,   154,   nil,   154,   nil,   154,   nil,   154,
   nil,   154,   nil,   nil,   154,   154,   299,   nil,   299,   299,
   nil,   299,   299,   nil,   299,   nil,   299,   nil,   299,   nil,
   299,   nil,   nil,   299,   299,    32,   nil,    32,    32,   nil,
    32,    32,   nil,    32,   nil,    32,   nil,    32,   nil,    32,
   nil,   nil,    32,    32,     0,   nil,     0,     0,   nil,     0,
     0,   nil,     0,   nil,     0,   nil,     0,   nil,     0,   nil,
   nil,     0,     0 ]

racc_action_pointer = [
   776,   163,   nil,   nil,   nil,   -20,    45,   nil,   nil,   nil,
   nil,   nil,   118,   nil,   nil,   332,   nil,   329,    97,   nil,
   142,   nil,   149,   nil,   181,   nil,    59,   281,   nil,   319,
    83,   nil,   757,   287,   293,   nil,   283,   nil,   309,   nil,
   nil,    24,   nil,   nil,   nil,   276,   309,   nil,   nil,   289,
   409,   nil,   288,   242,     4,   nil,   nil,   281,   nil,   nil,
   nil,   nil,     2,   283,   nil,   277,   nil,   nil,   263,   253,
   235,   248,   184,    70,   nil,   170,   160,   nil,   142,   nil,
     5,   345,   nil,    -2,   119,   nil,     5,    40,    16,   nil,
   283,    58,    88,   nil,   111,   nil,   148,   221,   nil,   119,
   189,   136,   nil,   nil,   nil,   nil,    68,   358,   nil,    46,
   357,    29,   352,   nil,   nil,   nil,    -4,   nil,   nil,   nil,
   nil,   nil,   nil,   311,     4,   290,   306,   307,   287,   nil,
   280,   276,   nil,   263,   155,   354,   425,    30,   348,   145,
   nil,   nil,   260,   nil,   nil,   nil,   nil,   431,   nil,   nil,
   172,   235,   nil,   nil,   719,   480,   194,   116,   nil,    99,
   nil,   107,   116,   121,   117,   nil,    -8,   nil,   nil,   nil,
    72,   nil,   nil,   186,   nil,   nil,   nil,   659,   nil,   618,
   nil,   163,   140,    19,    25,    77,   201,   205,   176,   188,
   nil,   nil,   nil,   210,   226,   nil,   nil,   247,   nil,   441,
   nil,   244,   nil,   nil,   nil,   nil,   nil,   nil,    91,   nil,
   nil,   242,   nil,   245,   nil,   344,   256,   257,   214,   nil,
   nil,   216,   nil,   599,   482,   nil,    68,   nil,   nil,   285,
   286,   277,     7,   nil,   700,   nil,   296,   113,   nil,   nil,
   -19,   nil,   415,   370,   nil,   nil,   558,   nil,   536,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   306,   nil,     6,
   nil,   303,   nil,   180,   292,   nil,   nil,   316,   496,   169,
   163,   nil,   nil,    44,   nil,   577,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   364,   338,   341,   nil,   nil,   350,
   nil,   517,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   738,
   nil,   640,   681,   nil,   nil ]

racc_action_default = [
  -169,  -193,   -14,    -2,  -162,  -193,  -193,   -15,    -3,  -160,
   -16,    -5,  -193,   -17,    -6,  -193,    -7,  -193,  -161,    -8,
  -193,    -9,  -193,   -10,  -193,   -11,  -193,   -40,   -12,  -193,
  -193,   -13,    -1,  -193,  -193,  -161,  -169,   -39,  -193,  -167,
  -166,  -169,  -165,  -163,  -168,   -79,   -72,  -186,  -149,   -28,
  -193,   -32,   -29,  -193,   -63,   -30,  -102,   -31,  -104,  -103,
   -33,   -20,   -62,   -21,   -61,   -22,   -23,  -150,  -193,   -25,
   -26,  -193,   -27,  -193,  -112,   -99,   -93,  -113,   -98,   -96,
  -193,  -110,   -94,  -193,   -90,   -97,  -193,   -91,   -95,  -111,
   -92,  -193,  -153,  -151,  -169,   -41,  -193,  -193,   -42,   -72,
  -169,  -169,    -4,   -70,   -71,  -182,  -193,  -193,  -180,  -193,
  -193,  -193,  -191,   -77,   -78,   -80,  -193,  -148,  -147,   -69,
   -67,   -63,   -73,   -64,   -62,   -59,   -65,  -191,   -68,   -57,
   -66,  -193,   -19,  -193,  -193,  -193,  -193,  -193,  -193,  -193,
   -82,  -188,  -193,  -124,  -126,  -129,  -127,  -193,  -128,  -125,
  -122,  -193,  -120,  -121,  -193,  -193,  -193,  -170,  -171,  -193,
   305,  -193,  -193,  -191,  -169,   -45,  -193,   -46,   -62,   -48,
  -193,   -55,   -54,  -193,  -184,  -185,  -183,  -193,  -181,  -193,
  -164,  -193,  -192,  -193,  -193,   -60,  -193,  -193,  -192,   -72,
   -18,  -105,  -101,  -193,   -62,   -24,   -34,  -193,  -145,  -193,
  -143,  -193,  -146,  -137,  -144,  -138,  -114,  -187,  -193,  -189,
  -190,   -87,   -88,   -84,  -123,   -85,   -89,   -86,  -193,  -117,
  -118,  -116,  -115,  -193,  -193,  -131,  -193,  -135,  -152,  -179,
  -177,  -193,  -193,  -174,  -193,  -106,  -193,  -193,   -51,   -50,
  -193,   -44,  -193,  -193,   -43,  -157,  -193,  -159,  -193,   -38,
   -81,   -76,   -75,   -58,   -35,   -36,   -74,  -191,  -100,  -191,
  -140,  -193,   -83,  -193,  -108,  -132,  -130,  -193,  -193,  -193,
  -193,  -172,  -173,  -193,  -155,  -193,   -37,   -49,   -47,   -52,
   -53,  -156,  -158,   -56,  -193,  -193,  -190,  -142,  -119,  -193,
  -107,  -193,  -136,  -178,  -176,  -175,  -154,  -141,  -139,  -193,
  -134,  -193,  -193,  -133,  -109 ]

racc_goto_table = [
    30,    32,   102,    86,    15,   115,    38,    48,   129,   127,
   201,   119,   208,   205,    91,    61,    43,   233,   181,    36,
    29,   214,    60,   225,     3,   103,   104,   227,   142,   113,
   278,    57,    30,   187,    98,    48,    15,    93,   290,    48,
    94,   166,   173,   219,   220,   134,   222,   133,   224,   112,
   186,   203,   125,   259,    60,    92,   139,   159,   107,   123,
   105,    41,   163,    57,   110,   108,   150,   195,   231,   236,
   232,   201,   140,    37,   260,   176,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   161,
   nil,    55,   265,   nil,   nil,   nil,   227,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   237,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   178,   nil,   180,   279,   280,   158,   120,
   174,   nil,   nil,    55,    48,    48,   nil,    48,   nil,   284,
   nil,   nil,   193,   295,   nil,   nil,    48,   nil,   nil,    60,
   292,   196,   250,   221,    48,   nil,   nil,   253,    57,    57,
   119,   198,   257,   nil,    30,   223,   201,   nil,    15,   297,
   213,   nil,   nil,   283,   nil,   285,   113,    52,   198,   228,
   nil,   nil,   256,   nil,    48,   251,   252,    30,   246,    30,
   248,    15,   nil,    15,   nil,   nil,   nil,   nil,    48,   nil,
   nil,   nil,   nil,   102,    69,   118,   nil,   nil,   123,    52,
   262,   263,   nil,   nil,   nil,   nil,   nil,   nil,    55,    55,
   nil,   nil,   198,    48,   nil,    49,   102,   nil,   102,   nil,
   212,   nil,   126,    30,   nil,   nil,    69,    15,   nil,   nil,
   nil,    48,    48,   nil,    30,   275,   nil,   198,    15,   nil,
   nil,   nil,    70,   117,   nil,   102,    30,    49,    30,   nil,
    15,   nil,    15,   287,   nil,   213,   213,    48,   120,   nil,
   nil,   293,   294,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   128,   102,   102,    48,    70,    30,   171,   171,   nil,    15,
   nil,   198,   nil,   nil,    52,    52,   nil,   118,   nil,   nil,
   nil,    30,   301,   nil,   nil,    15,   118,   198,   nil,    30,
   302,    30,    30,    15,   118,    15,    15,   nil,   nil,    72,
   nil,    69,    69,   nil,   200,   212,   212,   nil,   nil,   nil,
   nil,   nil,   nil,   215,   172,   172,   nil,   nil,   nil,   nil,
   nil,   200,    49,    49,   118,   117,   nil,   130,   nil,   nil,
   171,    72,   nil,   nil,   211,   nil,   nil,   nil,   118,   nil,
   nil,   nil,   117,   nil,   nil,   nil,   nil,   nil,   nil,    70,
    70,   126,   202,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   216,   nil,   118,   nil,   200,   nil,   nil,   nil,   202,
   nil,   nil,   117,   nil,   nil,   nil,   nil,   nil,   172,   nil,
   nil,   118,   118,   nil,   nil,   nil,   117,   nil,   nil,   nil,
   200,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   128,
   nil,   nil,   nil,   nil,   nil,   nil,   171,   118,   215,   215,
   nil,   117,   nil,   202,   nil,   nil,    72,    72,   nil,   204,
   nil,   nil,   nil,   118,   nil,   nil,   nil,   nil,   217,   211,
   211,   nil,   nil,   nil,   200,   nil,   204,   nil,   202,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   200,   nil,   nil,   nil,   172,   117,   216,   216,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   130,   nil,   nil,   nil,
   nil,   117,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   204,   nil,   202,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   202,   nil,
   nil,   nil,   nil,   nil,   nil,   204,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   217,   217,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   204,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   204 ]

racc_goto_check = [
    35,     2,     4,    55,    29,    52,    35,    47,    45,    33,
    66,    48,    54,    68,    49,    18,    75,    78,    34,    30,
     1,    44,    29,    64,     3,    49,    49,    66,    53,    50,
    40,    28,    35,    34,    38,    47,    29,    28,    56,    47,
    30,    39,    39,    58,    59,    49,    61,    18,    63,    36,
    32,    67,    31,    69,    29,    70,    55,    71,    72,    28,
     3,    73,    33,    28,    74,     3,    55,    21,    76,    34,
    77,    66,    49,     5,    68,    79,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    49,
   nil,    27,    64,   nil,   nil,   nil,    66,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,    39,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,    75,   nil,    75,    44,    44,     3,    27,
    30,   nil,   nil,    27,    47,    47,   nil,    47,   nil,    54,
   nil,   nil,    18,    78,   nil,   nil,    47,   nil,   nil,    29,
    66,    29,    52,    49,    47,   nil,   nil,    45,    28,    28,
    48,    28,    33,   nil,    35,     2,    66,   nil,    29,    68,
    28,   nil,   nil,    34,   nil,    34,    50,    26,    28,    28,
   nil,   nil,    50,   nil,    47,    49,    49,    35,     2,    35,
     2,    29,   nil,    29,   nil,   nil,   nil,   nil,    47,   nil,
   nil,   nil,   nil,     4,    22,    26,   nil,   nil,    28,    26,
    49,    55,   nil,   nil,   nil,   nil,   nil,   nil,    27,    27,
   nil,   nil,    28,    47,   nil,    25,     4,   nil,     4,   nil,
    27,   nil,    22,    35,   nil,   nil,    22,    29,   nil,   nil,
   nil,    47,    47,   nil,    35,     2,   nil,    28,    29,   nil,
   nil,   nil,    23,    25,   nil,     4,    35,    25,    35,   nil,
    29,   nil,    29,    49,   nil,    28,    28,    47,    27,   nil,
   nil,    49,    49,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
    23,     4,     4,    47,    23,    35,    22,    22,   nil,    29,
   nil,    28,   nil,   nil,    26,    26,   nil,    26,   nil,   nil,
   nil,    35,     2,   nil,   nil,    29,    26,    28,   nil,    35,
     2,    35,    35,    29,    26,    29,    29,   nil,   nil,    24,
   nil,    22,    22,   nil,    22,    27,    27,   nil,   nil,   nil,
   nil,   nil,   nil,    22,    23,    23,   nil,   nil,   nil,   nil,
   nil,    22,    25,    25,    26,    25,   nil,    24,   nil,   nil,
    22,    24,   nil,   nil,    25,   nil,   nil,   nil,    26,   nil,
   nil,   nil,    25,   nil,   nil,   nil,   nil,   nil,   nil,    23,
    23,    22,    23,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,    23,   nil,    26,   nil,    22,   nil,   nil,   nil,    23,
   nil,   nil,    25,   nil,   nil,   nil,   nil,   nil,    23,   nil,
   nil,    26,    26,   nil,   nil,   nil,    25,   nil,   nil,   nil,
    22,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    23,
   nil,   nil,   nil,   nil,   nil,   nil,    22,    26,    22,    22,
   nil,    25,   nil,    23,   nil,   nil,    24,    24,   nil,    24,
   nil,   nil,   nil,    26,   nil,   nil,   nil,   nil,    24,    25,
    25,   nil,   nil,   nil,    22,   nil,    24,   nil,    23,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
    22,   nil,   nil,   nil,    23,    25,    23,    23,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,    24,   nil,   nil,   nil,
   nil,    25,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
    24,   nil,    23,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    23,   nil,
   nil,   nil,   nil,   nil,   nil,    24,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,    24,    24,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    24,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,    24 ]

racc_goto_pointer = [
   nil,    20,     1,    24,   -30,    67,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    -3,   nil,
   nil,   -69,   176,   224,   291,   197,   149,    73,    13,     4,
    14,     6,   -75,   -37,   -94,     0,     4,   nil,     4,   -59,
  -210,   nil,   nil,   nil,  -126,   -38,   nil,   -11,   -35,    -8,
   -16,   nil,   -40,   -52,  -130,   -17,  -226,   nil,  -108,  -107,
   nil,  -105,   nil,  -107,  -132,   nil,  -128,   -87,  -125,  -146,
    31,   -37,    22,    49,    23,     4,   -89,   -87,  -140,   -31 ]

racc_goto_default = [
   nil,   nil,   nil,   165,     8,    11,    14,    16,    19,    21,
    23,    25,    28,    31,     2,     7,    10,    13,   nil,    63,
    65,    66,    87,    88,    90,    76,    78,    82,    84,    85,
    17,   nil,   nil,   nil,   nil,    71,   nil,     6,   nil,   nil,
   167,   240,   169,   170,   nil,   nil,   131,    75,    79,    81,
   122,   114,   nil,   nil,   nil,   nil,   nil,    89,    74,    77,
   151,   nil,   147,   nil,   nil,   226,    68,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil ]

racc_token_table = {
 false => 0,
 Object.new => 1,
 :LBRACK => 2,
 :DQTEXT => 3,
 :SQTEXT => 4,
 :RBRACK => 5,
 :LBRACE => 6,
 :RBRACE => 7,
 :SYMBOL => 8,
 :FARROW => 9,
 :COMMA => 10,
 :TRUE => 11,
 :FALSE => 12,
 :EQUALS => 13,
 :APPENDS => 14,
 :LESSEQUAL => 15,
 :NOTEQUAL => 16,
 :DOT => 17,
 :COLON => 18,
 :LLCOLLECT => 19,
 :RRCOLLECT => 20,
 :QMARK => 21,
 :LPAREN => 22,
 :RPAREN => 23,
 :ISEQUAL => 24,
 :GREATEREQUAL => 25,
 :GREATERTHAN => 26,
 :LESSTHAN => 27,
 :IF => 28,
 :ELSE => 29,
 :IMPORT => 30,
 :DEFINE => 31,
 :ELSIF => 32,
 :VARIABLE => 33,
 :CLASS => 34,
 :INHERITS => 35,
 :NODE => 36,
 :BOOLEAN => 37,
 :NAME => 38,
 :SEMIC => 39,
 :CASE => 40,
 :DEFAULT => 41,
 :AT => 42,
 :LCOLLECT => 43,
 :RCOLLECT => 44,
 :CLASSNAME => 45,
 :CLASSREF => 46,
 :NOT => 47,
 :OR => 48,
 :AND => 49,
 :UNDEF => 50,
 :PARROW => 51 }

racc_use_result_var = true

racc_nt_base = 52

Racc_arg = [
 racc_action_table,
 racc_action_check,
 racc_action_default,
 racc_action_pointer,
 racc_goto_table,
 racc_goto_check,
 racc_goto_default,
 racc_goto_pointer,
 racc_nt_base,
 racc_reduce_table,
 racc_token_table,
 racc_shift_n,
 racc_reduce_n,
 racc_use_result_var ]

Racc_token_to_s_table = [
'$end',
'error',
'LBRACK',
'DQTEXT',
'SQTEXT',
'RBRACK',
'LBRACE',
'RBRACE',
'SYMBOL',
'FARROW',
'COMMA',
'TRUE',
'FALSE',
'EQUALS',
'APPENDS',
'LESSEQUAL',
'NOTEQUAL',
'DOT',
'COLON',
'LLCOLLECT',
'RRCOLLECT',
'QMARK',
'LPAREN',
'RPAREN',
'ISEQUAL',
'GREATEREQUAL',
'GREATERTHAN',
'LESSTHAN',
'IF',
'ELSE',
'IMPORT',
'DEFINE',
'ELSIF',
'VARIABLE',
'CLASS',
'INHERITS',
'NODE',
'BOOLEAN',
'NAME',
'SEMIC',
'CASE',
'DEFAULT',
'AT',
'LCOLLECT',
'RCOLLECT',
'CLASSNAME',
'CLASSREF',
'NOT',
'OR',
'AND',
'UNDEF',
'PARROW',
'$start',
'program',
'statements',
'nil',
'statement',
'resource',
'virtualresource',
'collection',
'assignment',
'casestatement',
'ifstatement',
'import',
'fstatement',
'definition',
'hostclass',
'nodedef',
'resourceoverride',
'append',
'funcvalues',
'namestrings',
'resourcerefs',
'namestring',
'name',
'variable',
'type',
'boolean',
'funcrvalue',
'selector',
'quotedtext',
'resourceref',
'classname',
'resourceinstances',
'endsemi',
'params',
'endcomma',
'classref',
'anyparams',
'at',
'collectrhand',
'collstatements',
'collstatement',
'colljoin',
'collexpr',
'colllval',
'simplervalue',
'resourceinst',
'resourcename',
'undef',
'array',
'rvalue',
'param',
'addparam',
'anyparam',
'rvalues',
'comma',
'expression',
'else',
'booleanexpr',
'comparison',
'notexpr',
'booleanop',
'rexpression',
'comparisonop',
'caseopts',
'caseopt',
'casevalues',
'selectlhand',
'svalues',
'selectval',
'sintvalues',
'qtexts',
'argumentlist',
'classparent',
'hostnames',
'nodeparent',
'hostname',
'nothing',
'arguments',
'argument',
'classnameordefault']

Racc_debug_parser = false

##### racc system variables end #####

 # reduce 0 omitted

module_eval <<'.,.,', 'grammar.ra', 38
  def _reduce_1( val, _values, result )
    if val[0]
        # Make sure we always return an array.
        if val[0].is_a?(AST::ASTArray)
            if val[0].children.empty?
                result = nil
            else
                result = val[0]
            end
        else
            result = aryfy(val[0])
        end
    else
        result = nil
    end
   result
  end
.,.,

 # reduce 2 omitted

 # reduce 3 omitted

module_eval <<'.,.,', 'grammar.ra', 54
  def _reduce_4( val, _values, result )
    if val[0] and val[1]
        if val[0].instance_of?(AST::ASTArray)
            val[0].push(val[1])
            result = val[0]
        else
            result = ast AST::ASTArray, :children => [val[0],val[1]]
        end
    elsif obj = (val[0] || val[1])
        result = obj
    else result = nil
    end
   result
  end
.,.,

 # reduce 5 omitted

 # reduce 6 omitted

 # reduce 7 omitted

 # reduce 8 omitted

 # reduce 9 omitted

 # reduce 10 omitted

 # reduce 11 omitted

 # reduce 12 omitted

 # reduce 13 omitted

 # reduce 14 omitted

 # reduce 15 omitted

 # reduce 16 omitted

 # reduce 17 omitted

module_eval <<'.,.,', 'grammar.ra', 77
  def _reduce_18( val, _values, result )
    args = aryfy(val[2])
    result = ast AST::Function,
        :name => val[0],
        :arguments => args,
        :ftype => :statement
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 83
  def _reduce_19( val, _values, result )
    result = ast AST::Function,
        :name => val[0],
        :arguments => AST::ASTArray.new({}),
        :ftype => :statement
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 90
  def _reduce_20( val, _values, result )
    args = aryfy(val[1])
    result = ast AST::Function,
        :name => val[0],
        :arguments => args,
        :ftype => :statement
   result
  end
.,.,

 # reduce 21 omitted

 # reduce 22 omitted

 # reduce 23 omitted

module_eval <<'.,.,', 'grammar.ra', 100
  def _reduce_24( val, _values, result )
    result = aryfy(val[0], val[2])
    result.line = @lexer.line
    result.file = @lexer.file
   result
  end
.,.,

 # reduce 25 omitted

 # reduce 26 omitted

 # reduce 27 omitted

 # reduce 28 omitted

 # reduce 29 omitted

 # reduce 30 omitted

 # reduce 31 omitted

module_eval <<'.,.,', 'grammar.ra', 113
  def _reduce_32( val, _values, result )
                    result = ast AST::Name, :value => val[0]
   result
  end
.,.,

 # reduce 33 omitted

module_eval <<'.,.,', 'grammar.ra', 124
  def _reduce_34( val, _values, result )
    unless val[0].is_a?(AST::ASTArray)
        val[0] = aryfy(val[0])
    end

    val[0].push(val[2])

    result = val[0]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 145
  def _reduce_35( val, _values, result )
    array = val[2]
    if array.instance_of?(AST::ResourceInstance)
        array = [array]
    end
    result = ast AST::ASTArray

    # this iterates across each specified resourceinstance
    array.each { |instance|
        unless instance.instance_of?(AST::ResourceInstance)
            raise Puppet::Dev, "Got something that isn't an instance"
        end
        # now, i need to somehow differentiate between those things with
        # arrays in their names, and normal things
        result.push ast(AST::Resource,
            :type => val[0],
            :title => instance[0],
            :params => instance[1])
    }
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 148
  def _reduce_36( val, _values, result )
    # This is a deprecated syntax.
    error "All resource specifications require names"
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 151
  def _reduce_37( val, _values, result )
    # a defaults setting for a type
    result = ast(AST::ResourceDefaults, :type => val[0], :params => val[2])
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 156
  def _reduce_38( val, _values, result )
    result = ast AST::ResourceOverride, :object => val[0], :params => val[2]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 183
  def _reduce_39( val, _values, result )
    type = val[0]

    if (type == :exported and ! Puppet[:storeconfigs]) and ! Puppet[:parseonly]
        Puppet.warning addcontext("You cannot collect without storeconfigs being set")
    end

    if val[1].is_a? AST::ResourceDefaults
        error "Defaults are not virtualizable"
    end

    method = type.to_s + "="

    # Just mark our resources as exported and pass them through.
    if val[1].instance_of?(AST::ASTArray)
        val[1].each do |obj|
            obj.send(method, true)
        end
    else
        val[1].send(method, true)
    end

    result = val[1]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 184
  def _reduce_40( val, _values, result )
 result = :virtual
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 185
  def _reduce_41( val, _values, result )
 result = :exported
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 208
  def _reduce_42( val, _values, result )
    if val[0] =~ /^[a-z]/
        Puppet.warning addcontext("Collection names must now be capitalized")
    end
    type = val[0].downcase
    args = {:type => type}

    if val[1].is_a?(AST::CollExpr)
        args[:query] = val[1]
        args[:query].type = type
        args[:form] = args[:query].form
    else
        args[:form] = val[1]
    end
    if args[:form] == :exported and ! Puppet[:storeconfigs] and ! Puppet[:parseonly]
        Puppet.warning addcontext("You cannot collect exported resources without storeconfigs being set; the collection will be ignored")
    end
    result = ast AST::Collection, args
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 218
  def _reduce_43( val, _values, result )
    if val[1]
        result = val[1]
        result.form = :virtual
    else
        result = :virtual
    end
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 226
  def _reduce_44( val, _values, result )
    if val[1]
        result = val[1]
        result.form = :exported
    else
        result = :exported
    end
   result
  end
.,.,

 # reduce 45 omitted

 # reduce 46 omitted

module_eval <<'.,.,', 'grammar.ra', 234
  def _reduce_47( val, _values, result )
    result = ast AST::CollExpr, :test1 => val[0], :oper => val[1], :test2 => val[2]
   result
  end
.,.,

 # reduce 48 omitted

module_eval <<'.,.,', 'grammar.ra', 240
  def _reduce_49( val, _values, result )
    result = val[1]
    result.parens = true
   result
  end
.,.,

 # reduce 50 omitted

 # reduce 51 omitted

module_eval <<'.,.,', 'grammar.ra', 248
  def _reduce_52( val, _values, result )
    result = ast AST::CollExpr, :test1 => val[0], :oper => val[1], :test2 => val[2]
    #result = ast AST::CollExpr
    #result.push *val
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 253
  def _reduce_53( val, _values, result )
    result = ast AST::CollExpr, :test1 => val[0], :oper => val[1], :test2 => val[2]
    #result = ast AST::CollExpr
    #result.push *val
   result
  end
.,.,

 # reduce 54 omitted

 # reduce 55 omitted

module_eval <<'.,.,', 'grammar.ra', 260
  def _reduce_56( val, _values, result )
    result = ast AST::ResourceInstance, :children => [val[0],val[2]]
   result
  end
.,.,

 # reduce 57 omitted

module_eval <<'.,.,', 'grammar.ra', 270
  def _reduce_58( val, _values, result )
    if val[0].instance_of?(AST::ResourceInstance)
        result = ast AST::ASTArray, :children => [val[0],val[2]]
    else
        val[0].push val[2]
        result = val[0]
    end
   result
  end
.,.,

 # reduce 59 omitted

 # reduce 60 omitted

module_eval <<'.,.,', 'grammar.ra', 277
  def _reduce_61( val, _values, result )
    result = ast AST::Undef, :value => :undef
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 281
  def _reduce_62( val, _values, result )
    result = ast AST::Name, :value => val[0]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 285
  def _reduce_63( val, _values, result )
    result = ast AST::Type, :value => val[0]
   result
  end
.,.,

 # reduce 64 omitted

 # reduce 65 omitted

 # reduce 66 omitted

 # reduce 67 omitted

 # reduce 68 omitted

 # reduce 69 omitted

module_eval <<'.,.,', 'grammar.ra', 301
  def _reduce_70( val, _values, result )
    if val[0] =~ /::/
        raise Puppet::ParseError, "Cannot assign to variables in other namespaces"
    end
    # this is distinct from referencing a variable
    variable = ast AST::Name, :value => val[0]
    result = ast AST::VarDef, :name => variable, :value => val[2]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 306
  def _reduce_71( val, _values, result )
    variable = ast AST::Name, :value => val[0]
    result = ast AST::VarDef, :name => variable, :value => val[2], :append => true
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 311
  def _reduce_72( val, _values, result )
    result = ast AST::ASTArray
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 311
  def _reduce_73( val, _values, result )
 result = val[0]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 320
  def _reduce_74( val, _values, result )
    if val[0].instance_of?(AST::ASTArray)
        val[0].push(val[2])
        result = val[0]
    else
        result = ast AST::ASTArray, :children => [val[0],val[2]]
    end
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 324
  def _reduce_75( val, _values, result )
    result = ast AST::ResourceParam, :param => val[0], :value => val[2]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 329
  def _reduce_76( val, _values, result )
    result = ast AST::ResourceParam, :param => val[0], :value => val[2],
                                     :add => true
   result
  end
.,.,

 # reduce 77 omitted

 # reduce 78 omitted

module_eval <<'.,.,', 'grammar.ra', 337
  def _reduce_79( val, _values, result )
    result = ast AST::ASTArray
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 337
  def _reduce_80( val, _values, result )
 result = val[0]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 346
  def _reduce_81( val, _values, result )
    if val[0].instance_of?(AST::ASTArray)
        val[0].push(val[2])
        result = val[0]
    else
        result = ast AST::ASTArray, :children => [val[0],val[2]]
    end
   result
  end
.,.,

 # reduce 82 omitted

module_eval <<'.,.,', 'grammar.ra', 355
  def _reduce_83( val, _values, result )
    if val[0].instance_of?(AST::ASTArray)
        result = val[0].push(val[2])
    else
        result = ast AST::ASTArray, :children => [val[0],val[2]]
    end
   result
  end
.,.,

 # reduce 84 omitted

 # reduce 85 omitted

 # reduce 86 omitted

 # reduce 87 omitted

 # reduce 88 omitted

 # reduce 89 omitted

 # reduce 90 omitted

 # reduce 91 omitted

 # reduce 92 omitted

 # reduce 93 omitted

 # reduce 94 omitted

 # reduce 95 omitted

 # reduce 96 omitted

 # reduce 97 omitted

 # reduce 98 omitted

 # reduce 99 omitted

module_eval <<'.,.,', 'grammar.ra', 382
  def _reduce_100( val, _values, result )
    args = aryfy(val[2])
    result = ast AST::Function,
        :name => val[0],
        :arguments => args,
        :ftype => :rvalue
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 387
  def _reduce_101( val, _values, result )
    result = ast AST::Function,
        :name => val[0],
        :arguments => AST::ASTArray.new({}),
        :ftype => :rvalue
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 391
  def _reduce_102( val, _values, result )
    result = ast AST::String, :value => val[0]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 393
  def _reduce_103( val, _values, result )
    result = ast AST::FlatString, :value => val[0]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 397
  def _reduce_104( val, _values, result )
    result = ast AST::Boolean, :value => val[0]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 402
  def _reduce_105( val, _values, result )
    Puppet.warning addcontext("Deprecation notice:  Resource references should now be capitalized")
    result = ast AST::ResourceReference, :type => val[0], :title => val[2]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 404
  def _reduce_106( val, _values, result )
    result = ast AST::ResourceReference, :type => val[0], :title => val[2]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 417
  def _reduce_107( val, _values, result )
    args = {
        :test => val[1],
        :statements => val[3]
    }

    if val[5]
        args[:else] = val[5]
    end

    result = ast AST::IfStatement, args
   result
  end
.,.,

 # reduce 108 omitted

module_eval <<'.,.,', 'grammar.ra', 422
  def _reduce_109( val, _values, result )
    result = ast AST::Else, :statements => val[2]
   result
  end
.,.,

 # reduce 110 omitted

 # reduce 111 omitted

 # reduce 112 omitted

 # reduce 113 omitted

module_eval <<'.,.,', 'grammar.ra', 433
  def _reduce_114( val, _values, result )
    result = val[1]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 437
  def _reduce_115( val, _values, result )
    result = ast AST::BooleanOperator, :operator => val[1], :lval => val[0], :rval => val[2]
   result
  end
.,.,

 # reduce 116 omitted

 # reduce 117 omitted

 # reduce 118 omitted

module_eval <<'.,.,', 'grammar.ra', 444
  def _reduce_119( val, _values, result )
    result = val[1]
   result
  end
.,.,

 # reduce 120 omitted

 # reduce 121 omitted

module_eval <<'.,.,', 'grammar.ra', 450
  def _reduce_122( val, _values, result )
    result = ast AST::Not, :value => val[1]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 454
  def _reduce_123( val, _values, result )
    result = ast AST::ComparisonOperator, :operator => val[1], :lval => val[0], :rval => val[2]
   result
  end
.,.,

 # reduce 124 omitted

 # reduce 125 omitted

 # reduce 126 omitted

 # reduce 127 omitted

 # reduce 128 omitted

 # reduce 129 omitted

module_eval <<'.,.,', 'grammar.ra', 465
  def _reduce_130( val, _values, result )
    options = val[3]
    unless options.instance_of?(AST::ASTArray)
        options = ast AST::ASTArray, :children => [val[3]]
    end
    result = ast AST::CaseStatement, :test => val[1], :options => options
   result
  end
.,.,

 # reduce 131 omitted

module_eval <<'.,.,', 'grammar.ra', 475
  def _reduce_132( val, _values, result )
    if val[0].instance_of?(AST::ASTArray)
        val[0].push val[1]
        result = val[0]
    else
        result = ast AST::ASTArray, :children => [val[0], val[1]]
    end
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 479
  def _reduce_133( val, _values, result )
    result = ast AST::CaseOpt, :value => val[0], :statements => val[3]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 484
  def _reduce_134( val, _values, result )
    result = ast(AST::CaseOpt,
        :value => val[0],
        :statements => ast(AST::ASTArray)
    )
   result
  end
.,.,

 # reduce 135 omitted

module_eval <<'.,.,', 'grammar.ra', 494
  def _reduce_136( val, _values, result )
    if val[0].instance_of?(AST::ASTArray)
        val[0].push(val[2])
        result = val[0]
    else
        result = ast AST::ASTArray, :children => [val[0],val[2]]
    end
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 498
  def _reduce_137( val, _values, result )
    result = ast AST::Selector, :param => val[0], :values => val[2]
   result
  end
.,.,

 # reduce 138 omitted

module_eval <<'.,.,', 'grammar.ra', 500
  def _reduce_139( val, _values, result )
 result = val[1]
   result
  end
.,.,

 # reduce 140 omitted

module_eval <<'.,.,', 'grammar.ra', 511
  def _reduce_141( val, _values, result )
    if val[0].instance_of?(AST::ASTArray)
        val[0].push(val[2])
        result = val[0]
    else
        result = ast AST::ASTArray, :children => [val[0],val[2]]
    end
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 515
  def _reduce_142( val, _values, result )
    result = ast AST::ResourceParam, :param => val[0], :value => val[2]
   result
  end
.,.,

 # reduce 143 omitted

 # reduce 144 omitted

 # reduce 145 omitted

 # reduce 146 omitted

 # reduce 147 omitted

 # reduce 148 omitted

 # reduce 149 omitted

module_eval <<'.,.,', 'grammar.ra', 526
  def _reduce_150( val, _values, result )
    result = ast AST::Default, :value => val[0]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 528
  def _reduce_151( val, _values, result )
 result = [val[0].value]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 532
  def _reduce_152( val, _values, result )
    results = val[0] << val[2].value
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 540
  def _reduce_153( val, _values, result )
    val[1].each do |file|
        import(file)
    end

    result = AST::ASTArray.new(:children => [])
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 550
  def _reduce_154( val, _values, result )
    newdefine classname(val[1]), :arguments => val[2], :code => val[4]
    @lexer.indefine = false
    result = nil

#}           | DEFINE NAME argumentlist parent LBRACE RBRACE {
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 554
  def _reduce_155( val, _values, result )
    newdefine classname(val[1]), :arguments => val[2]
    @lexer.indefine = false
    result = nil
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 562
  def _reduce_156( val, _values, result )
    # Our class gets defined in the parent namespace, not our own.
    @lexer.namepop
    newclass classname(val[1]), :code => val[4], :parent => val[2]
    result = nil
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 567
  def _reduce_157( val, _values, result )
    # Our class gets defined in the parent namespace, not our own.
    @lexer.namepop
    newclass classname(val[1]), :parent => val[2]
    result = nil
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 572
  def _reduce_158( val, _values, result )
    newnode val[1], :parent => val[2], :code => val[4]
    result = nil
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 575
  def _reduce_159( val, _values, result )
    newnode val[1], :parent => val[2]
    result = nil
   result
  end
.,.,

 # reduce 160 omitted

 # reduce 161 omitted

 # reduce 162 omitted

 # reduce 163 omitted

module_eval <<'.,.,', 'grammar.ra', 589
  def _reduce_164( val, _values, result )
    result = val[0]
    result = [result] unless result.is_a?(Array)
    result << val[2]
   result
  end
.,.,

 # reduce 165 omitted

 # reduce 166 omitted

 # reduce 167 omitted

 # reduce 168 omitted

module_eval <<'.,.,', 'grammar.ra', 598
  def _reduce_169( val, _values, result )
    result = nil
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 602
  def _reduce_170( val, _values, result )
    result = ast AST::ASTArray, :children => []
   result
  end
.,.,

 # reduce 171 omitted

module_eval <<'.,.,', 'grammar.ra', 607
  def _reduce_172( val, _values, result )
    result = nil
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 611
  def _reduce_173( val, _values, result )
    result = val[1]
    result = [result] unless result[0].is_a?(Array)
   result
  end
.,.,

 # reduce 174 omitted

module_eval <<'.,.,', 'grammar.ra', 618
  def _reduce_175( val, _values, result )
    result = val[0]
    result = [result] unless result[0].is_a?(Array)
    result << val[2]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 623
  def _reduce_176( val, _values, result )
    Puppet.warning addcontext("Deprecation notice: must now include '$' in prototype")
    result = [val[0], val[2]]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 627
  def _reduce_177( val, _values, result )
    Puppet.warning addcontext("Deprecation notice: must now include '$' in prototype")
    result = [val[0]]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 629
  def _reduce_178( val, _values, result )
    result = [val[0], val[2]]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 631
  def _reduce_179( val, _values, result )
    result = [val[0]]
   result
  end
.,.,

 # reduce 180 omitted

module_eval <<'.,.,', 'grammar.ra', 636
  def _reduce_181( val, _values, result )
    result = val[1]
   result
  end
.,.,

 # reduce 182 omitted

module_eval <<'.,.,', 'grammar.ra', 641
  def _reduce_183( val, _values, result )
    result = val[1]
   result
  end
.,.,

 # reduce 184 omitted

 # reduce 185 omitted

module_eval <<'.,.,', 'grammar.ra', 647
  def _reduce_186( val, _values, result )
    result = ast AST::Variable, :value => val[0]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 655
  def _reduce_187( val, _values, result )
    if val[1].instance_of?(AST::ASTArray)
        result = val[1]
    else
        result = ast AST::ASTArray, :children => [val[1]]
    end
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 657
  def _reduce_188( val, _values, result )
    result = ast AST::ASTArray
   result
  end
.,.,

 # reduce 189 omitted

 # reduce 190 omitted

 # reduce 191 omitted

module_eval <<'.,.,', 'grammar.ra', 662
  def _reduce_192( val, _values, result )
 result = nil
   result
  end
.,.,

 def _reduce_none( val, _values, result )
  result
 end

    end   # class Parser

  end   # module Parser

end   # module Puppet
