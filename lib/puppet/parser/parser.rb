#
# DO NOT MODIFY!!!!
# This file is automatically generated by racc 1.4.5
# from racc grammer file "grammar.ra".
#

require 'racc/parser'


require 'puppet'
require 'puppet/util/loadedfile'
require 'puppet/parser/lexer'
require 'puppet/parser/ast'
#require 'puppet/parser/interpreter'

module Puppet
    class ParseError < Puppet::Error; end
    class ImportError < Racc::ParseError; end
    class AlreadyImportedError < ImportError; end
end

Puppet[:typecheck] = true
Puppet[:paramcheck] = true


module Puppet

  module Parser

    class Parser < Racc::Parser

module_eval <<'..end grammar.ra modeval..id5c3e7e8854', 'grammar.ra', 677

# It got too annoying having code in a file that needs to be compiled.
require 'puppet/parser/parser_support'

# Make emacs happy
# Local Variables:
# mode: ruby
# End:

# $Id$

..end grammar.ra modeval..id5c3e7e8854

##### racc 1.4.5 generates ###

racc_reduce_table = [
 0, 0, :racc_error,
 1, 52, :_reduce_1,
 1, 52, :_reduce_none,
 1, 53, :_reduce_none,
 2, 53, :_reduce_4,
 1, 55, :_reduce_none,
 1, 55, :_reduce_none,
 1, 55, :_reduce_none,
 1, 55, :_reduce_none,
 1, 55, :_reduce_none,
 1, 55, :_reduce_none,
 1, 55, :_reduce_none,
 1, 55, :_reduce_none,
 1, 55, :_reduce_none,
 1, 55, :_reduce_none,
 1, 55, :_reduce_none,
 1, 55, :_reduce_none,
 4, 63, :_reduce_17,
 3, 63, :_reduce_18,
 2, 63, :_reduce_19,
 1, 68, :_reduce_none,
 1, 68, :_reduce_none,
 1, 69, :_reduce_none,
 3, 69, :_reduce_23,
 1, 71, :_reduce_none,
 1, 71, :_reduce_none,
 1, 71, :_reduce_none,
 1, 71, :_reduce_none,
 1, 71, :_reduce_none,
 1, 71, :_reduce_none,
 1, 71, :_reduce_none,
 1, 71, :_reduce_31,
 1, 70, :_reduce_none,
 3, 70, :_reduce_33,
 5, 56, :_reduce_34,
 5, 56, :_reduce_35,
 5, 56, :_reduce_36,
 5, 67, :_reduce_37,
 2, 57, :_reduce_38,
 1, 87, :_reduce_39,
 2, 87, :_reduce_40,
 2, 58, :_reduce_41,
 3, 88, :_reduce_42,
 3, 88, :_reduce_43,
 1, 89, :_reduce_none,
 1, 89, :_reduce_none,
 3, 89, :_reduce_46,
 1, 90, :_reduce_none,
 3, 90, :_reduce_48,
 1, 91, :_reduce_none,
 1, 91, :_reduce_none,
 3, 92, :_reduce_51,
 3, 92, :_reduce_52,
 1, 93, :_reduce_none,
 1, 93, :_reduce_none,
 4, 95, :_reduce_55,
 1, 81, :_reduce_none,
 3, 81, :_reduce_57,
 0, 82, :_reduce_none,
 1, 82, :_reduce_none,
 1, 97, :_reduce_60,
 1, 72, :_reduce_61,
 1, 74, :_reduce_62,
 1, 96, :_reduce_none,
 1, 96, :_reduce_none,
 1, 96, :_reduce_none,
 1, 96, :_reduce_none,
 1, 96, :_reduce_none,
 1, 96, :_reduce_none,
 3, 59, :_reduce_69,
 0, 83, :_reduce_70,
 1, 83, :_reduce_71,
 3, 83, :_reduce_72,
 3, 100, :_reduce_73,
 3, 101, :_reduce_74,
 1, 102, :_reduce_none,
 1, 102, :_reduce_none,
 0, 86, :_reduce_77,
 1, 86, :_reduce_78,
 3, 86, :_reduce_79,
 1, 103, :_reduce_none,
 3, 103, :_reduce_81,
 1, 94, :_reduce_none,
 1, 94, :_reduce_none,
 1, 94, :_reduce_none,
 1, 94, :_reduce_none,
 1, 94, :_reduce_none,
 1, 94, :_reduce_none,
 1, 99, :_reduce_none,
 1, 99, :_reduce_none,
 1, 99, :_reduce_none,
 1, 99, :_reduce_none,
 1, 99, :_reduce_none,
 1, 99, :_reduce_none,
 1, 99, :_reduce_none,
 1, 99, :_reduce_none,
 1, 99, :_reduce_none,
 1, 99, :_reduce_none,
 4, 76, :_reduce_98,
 3, 76, :_reduce_99,
 1, 78, :_reduce_100,
 1, 78, :_reduce_101,
 1, 75, :_reduce_102,
 4, 79, :_reduce_103,
 4, 79, :_reduce_104,
 6, 61, :_reduce_105,
 0, 106, :_reduce_none,
 4, 106, :_reduce_107,
 1, 105, :_reduce_none,
 1, 105, :_reduce_none,
 1, 105, :_reduce_none,
 1, 105, :_reduce_none,
 3, 105, :_reduce_112,
 3, 107, :_reduce_113,
 1, 111, :_reduce_none,
 1, 111, :_reduce_none,
 1, 111, :_reduce_none,
 3, 111, :_reduce_117,
 1, 110, :_reduce_none,
 1, 110, :_reduce_none,
 2, 109, :_reduce_120,
 3, 108, :_reduce_121,
 1, 112, :_reduce_none,
 1, 112, :_reduce_none,
 1, 112, :_reduce_none,
 1, 112, :_reduce_none,
 1, 112, :_reduce_none,
 1, 112, :_reduce_none,
 5, 60, :_reduce_128,
 1, 113, :_reduce_none,
 2, 113, :_reduce_130,
 5, 114, :_reduce_131,
 4, 114, :_reduce_132,
 1, 115, :_reduce_none,
 3, 115, :_reduce_134,
 3, 77, :_reduce_135,
 1, 117, :_reduce_none,
 4, 117, :_reduce_137,
 1, 119, :_reduce_none,
 3, 119, :_reduce_139,
 3, 118, :_reduce_140,
 1, 116, :_reduce_none,
 1, 116, :_reduce_none,
 1, 116, :_reduce_none,
 1, 116, :_reduce_none,
 1, 116, :_reduce_none,
 1, 116, :_reduce_none,
 1, 116, :_reduce_none,
 1, 116, :_reduce_148,
 1, 120, :_reduce_149,
 3, 120, :_reduce_150,
 2, 62, :_reduce_151,
 6, 64, :_reduce_152,
 5, 64, :_reduce_153,
 6, 65, :_reduce_154,
 5, 65, :_reduce_155,
 6, 66, :_reduce_156,
 5, 66, :_reduce_157,
 1, 85, :_reduce_none,
 1, 80, :_reduce_none,
 1, 80, :_reduce_none,
 1, 123, :_reduce_none,
 3, 123, :_reduce_162,
 1, 125, :_reduce_none,
 1, 125, :_reduce_none,
 1, 125, :_reduce_none,
 1, 125, :_reduce_none,
 0, 54, :_reduce_167,
 0, 126, :_reduce_168,
 1, 121, :_reduce_none,
 3, 121, :_reduce_170,
 3, 121, :_reduce_171,
 1, 127, :_reduce_none,
 3, 127, :_reduce_173,
 3, 128, :_reduce_174,
 1, 128, :_reduce_175,
 3, 128, :_reduce_176,
 1, 128, :_reduce_177,
 1, 124, :_reduce_none,
 2, 124, :_reduce_179,
 1, 122, :_reduce_none,
 2, 122, :_reduce_181,
 1, 129, :_reduce_none,
 1, 129, :_reduce_none,
 1, 73, :_reduce_184,
 3, 98, :_reduce_185,
 2, 98, :_reduce_186,
 1, 104, :_reduce_none,
 1, 104, :_reduce_none,
 0, 84, :_reduce_none,
 1, 84, :_reduce_190 ]

racc_reduce_n = 191

racc_shift_n = 302

racc_action_table = [
    71,    50,    52,   271,   179,   193,   157,    71,    50,    52,
   239,   149,    46,     5,   285,   270,   130,   179,   238,    82,
    92,    71,    50,    52,    93,   107,   151,    71,    50,    52,
    65,   130,    35,    36,    49,    53,    94,    65,    59,   147,
   148,    49,    53,    44,    72,    59,    82,    55,  -145,   104,
    44,    65,   147,   148,    55,    49,    53,    65,   178,    59,
    95,    49,    53,   237,    44,    59,    37,  -146,    55,    39,
    44,    72,    33,   277,    55,    71,    50,    52,   144,     1,
     5,    46,    50,    52,   154,   231,    33,   265,   226,   172,
   227,   234,   236,     1,   264,    71,    50,    52,   234,   236,
    67,   220,    71,    50,    52,    65,   202,    35,    36,    49,
    53,    65,   231,    59,    82,    49,    53,   227,    44,    59,
    50,    52,    55,    42,    44,    65,   147,   148,    55,    49,
    53,   232,    65,    59,    50,    52,    49,    53,    44,    72,
    59,    37,    55,   179,    39,    44,    71,    50,    52,    55,
   166,   185,    71,    50,    52,   210,   166,    35,    36,   212,
   213,    65,    71,    50,    52,  -147,   161,    65,    71,    50,
    52,    33,   161,   212,   284,   157,    65,   187,     1,   186,
    49,    53,    65,  -142,    59,  -144,    49,    53,  -141,    44,
    59,    37,    65,    55,    39,    44,    49,    53,    65,    55,
    59,    33,    49,   188,  -143,    44,    59,   166,     1,    55,
   248,   116,    71,    50,    52,    55,   166,   111,    65,    71,
    50,    52,  -142,   161,   147,   148,   251,    65,   138,   141,
   252,   217,   161,    71,    50,    52,   157,   135,   136,   139,
   140,   152,    65,   130,   255,    46,    49,    53,   256,    65,
    59,  -145,    82,    49,    53,    44,    72,    59,  -143,    55,
   241,  -141,    44,    65,   234,   236,    55,    49,    53,  -144,
  -142,    59,    71,    50,    52,  -146,    44,    72,  -142,  -144,
    55,    92,    71,    50,    52,   138,   141,  -144,    71,    50,
    52,  -141,   185,   132,   135,   136,   139,   140,    71,    50,
    52,   268,    65,   269,  -141,   272,    49,    53,   273,   182,
    59,   131,    65,    50,    52,    44,    49,    53,    65,    55,
    59,   129,    49,   117,  -143,    44,    59,  -158,    65,    55,
   111,   116,    49,    53,   185,    55,    59,    50,    52,   101,
   197,    44,    65,    50,    52,    55,    49,   188,  -143,   181,
    59,   286,   288,    98,    96,   116,    90,    50,    52,    55,
   169,    93,   133,    50,    52,   176,    65,   295,  -190,   296,
    49,   188,    65,    41,    59,    40,    49,    53,   174,   116,
    59,  -146,   190,    55,    42,    44,    65,    50,    52,    55,
    49,   188,    65,   nil,    59,   nil,    49,    53,   nil,   116,
    59,    50,    52,    55,    42,    44,   nil,    50,    52,    55,
   nil,   nil,   nil,   nil,   nil,   nil,    65,   nil,   nil,   nil,
    49,   188,    50,    52,    59,   nil,   263,   nil,   nil,   116,
    65,   nil,   nil,    55,    49,   188,    65,   nil,    59,   nil,
    49,   188,   nil,   116,    59,    50,    52,    55,    42,   116,
   nil,    65,   nil,    55,   nil,    49,   188,   nil,   nil,    59,
    50,    52,   nil,   nil,   116,   nil,    50,    52,    55,   nil,
   nil,   nil,   nil,   nil,    65,   nil,   nil,   nil,    49,   188,
   nil,   nil,    59,   nil,   nil,   nil,   nil,   116,   nil,    65,
   nil,    55,   nil,    49,   188,    65,   290,    59,   nil,    49,
   188,   nil,   116,    59,   nil,   nil,    55,   nil,   116,   nil,
   nil,   nil,    55,   nil,   nil,   266,    15,   nil,    19,    21,
   nil,    28,     2,   nil,     8,   nil,    13,   nil,    17,   nil,
    22,   nil,   nil,     1,     5,    15,   297,    19,    21,   nil,
    28,     2,   nil,     8,   nil,    13,   nil,    17,   nil,    22,
   nil,   nil,     1,     5,   nil,   279,    15,   nil,    19,    21,
   nil,    28,     2,   nil,     8,   nil,    13,   nil,    17,   nil,
    22,   nil,   nil,     1,     5,    15,   278,    19,    21,   nil,
    28,     2,   nil,     8,   nil,    13,   nil,    17,   nil,    22,
   nil,   nil,     1,     5,   nil,   300,    15,   nil,    19,    21,
   nil,    28,     2,   nil,     8,   nil,    13,   nil,    17,   nil,
    22,   nil,   nil,     1,     5,    15,   244,    19,    21,   nil,
    28,     2,   nil,     8,   nil,    13,   nil,    17,   nil,    22,
   nil,   nil,     1,     5,   nil,   242,    15,   nil,    19,    21,
   nil,    28,     2,   nil,     8,   nil,    13,   nil,    17,   nil,
    22,   nil,   nil,     1,     5,    15,   301,    19,    21,   nil,
    28,     2,   nil,     8,   nil,    13,   nil,    17,   nil,    22,
   nil,   nil,     1,     5,   nil,   261,    15,   nil,    19,    21,
   nil,    28,     2,   nil,     8,   nil,    13,   nil,    17,   nil,
    22,   nil,   nil,     1,     5,    15,   nil,    19,    21,   nil,
    28,     2,   nil,     8,   nil,    13,   nil,    17,   nil,    22,
   nil,   nil,     1,     5,    15,   nil,    19,    21,   nil,    28,
     2,   nil,     8,   nil,    13,   nil,    17,   nil,    22,   nil,
   nil,     1,     5,    15,   nil,    19,    21,   nil,    28,     2,
   nil,     8,   nil,    13,   nil,    17,   nil,    22,   nil,   nil,
     1,     5,    15,   nil,    19,    21,   nil,    28,     2,   nil,
     8,   nil,    13,   nil,    17,   nil,    22,   nil,   nil,     1,
     5,    15,   nil,    19,    21,   nil,    28,     2,   nil,     8,
   nil,    13,   nil,    17,   nil,    22,   nil,   nil,     1,     5 ]

racc_action_check = [
    82,    82,    82,   229,   117,   131,   186,   178,   178,   178,
   163,    74,    53,   131,   260,   229,   117,   111,   163,    82,
    23,    98,    98,    98,    23,    34,    86,    72,    72,    72,
    82,    53,   107,   107,    82,    82,    23,   178,    82,   260,
   260,   178,   178,    82,    82,   178,    72,    82,    84,    34,
   178,    98,    74,    74,   178,    98,    98,    72,   111,    98,
    23,    72,    72,   159,    98,    72,   107,    81,    98,   107,
    72,    72,    29,   240,    72,    71,    71,    71,    71,    29,
    29,    13,    13,    13,    89,   154,   101,   223,   153,   101,
   154,   159,   159,   101,   223,    15,    15,    15,   240,   240,
    13,   150,    17,    17,    17,    71,   134,     8,     8,    71,
    71,    13,   271,    71,    15,    13,    13,   271,    71,    13,
    19,    19,    71,    13,    13,    15,   150,   150,    13,    15,
    15,   156,    17,    15,   152,   152,    17,    17,    15,    15,
    17,     8,    15,   157,     8,    17,   179,   179,   179,    17,
   166,   158,   272,   272,   272,   143,    95,   104,   104,   143,
   143,   166,   268,   268,   268,    80,   166,    95,   182,   182,
   182,    21,    95,   258,   258,    93,   179,   128,    21,   124,
   179,   179,   272,    78,   179,    76,   272,   272,    75,   179,
   272,   104,   268,   179,   104,   272,   268,   268,   182,   272,
   268,     2,   182,   182,    70,   268,   182,   235,     2,   268,
   180,   182,   146,   146,   146,   182,    94,   181,   235,   211,
   211,   211,   123,   235,   145,   145,   183,    94,   214,   214,
   184,   146,    94,   217,   217,   217,   185,   214,   214,   214,
   214,    88,   146,   188,   191,   193,   146,   146,   196,   211,
   146,    66,   217,   211,   211,   146,   146,   211,   204,   146,
   168,   206,   211,   217,   168,   168,   211,   217,   217,   207,
   208,   217,    46,    46,    46,    64,   217,   217,    62,   121,
   217,    61,   256,   256,   256,    68,    68,    60,    41,    41,
    41,    58,   120,    57,    68,    68,    68,    68,    92,    92,
    92,   227,    46,   228,   119,   231,    46,    46,   233,   118,
    46,    54,   256,   197,   197,    46,   256,   256,    41,    46,
   256,    51,    41,    41,    45,   256,    41,    44,    92,   256,
    40,    41,    92,    92,   254,    41,    92,   132,   132,    32,
   132,    92,   197,    67,    67,    92,   197,   197,   115,   112,
   197,   261,   264,    28,    25,   197,    22,   239,   239,   197,
    96,   100,    67,   130,   130,   105,   132,   283,   284,   286,
   132,   132,    67,    11,   132,     9,    67,    67,   102,   132,
    67,   209,   130,   132,    67,    67,   239,   137,   137,    67,
   239,   239,   130,   nil,   239,   nil,   130,   130,   nil,   239,
   130,   238,   238,   239,   130,   130,   nil,   129,   129,   130,
   nil,   nil,   nil,   nil,   nil,   nil,   137,   nil,   nil,   nil,
   137,   137,   221,   221,   137,   nil,   221,   nil,   nil,   137,
   238,   nil,   nil,   137,   238,   238,   129,   nil,   238,   nil,
   129,   129,   nil,   238,   129,   151,   151,   238,   129,   129,
   nil,   221,   nil,   129,   nil,   221,   221,   nil,   nil,   221,
   265,   265,   nil,   nil,   221,   nil,   282,   282,   221,   nil,
   nil,   nil,   nil,   nil,   151,   nil,   nil,   nil,   151,   151,
   nil,   nil,   151,   nil,   nil,   nil,   nil,   151,   nil,   265,
   nil,   151,   nil,   265,   265,   282,   267,   265,   nil,   282,
   282,   nil,   265,   282,   nil,   nil,   265,   nil,   282,   nil,
   nil,   nil,   282,   nil,   nil,   226,   267,   nil,   267,   267,
   nil,   267,   267,   nil,   267,   nil,   267,   nil,   267,   nil,
   267,   nil,   nil,   267,   267,   226,   288,   226,   226,   nil,
   226,   226,   nil,   226,   nil,   226,   nil,   226,   nil,   226,
   nil,   nil,   226,   226,   nil,   245,   288,   nil,   288,   288,
   nil,   288,   288,   nil,   288,   nil,   288,   nil,   288,   nil,
   288,   nil,   nil,   288,   288,   245,   243,   245,   245,   nil,
   245,   245,   nil,   245,   nil,   245,   nil,   245,   nil,   245,
   nil,   nil,   245,   245,   nil,   298,   243,   nil,   243,   243,
   nil,   243,   243,   nil,   243,   nil,   243,   nil,   243,   nil,
   243,   nil,   nil,   243,   243,   298,   176,   298,   298,   nil,
   298,   298,   nil,   298,   nil,   298,   nil,   298,   nil,   298,
   nil,   nil,   298,   298,   nil,   174,   176,   nil,   176,   176,
   nil,   176,   176,   nil,   176,   nil,   176,   nil,   176,   nil,
   176,   nil,   nil,   176,   176,   174,   299,   174,   174,   nil,
   174,   174,   nil,   174,   nil,   174,   nil,   174,   nil,   174,
   nil,   nil,   174,   174,   nil,   219,   299,   nil,   299,   299,
   nil,   299,   299,   nil,   299,   nil,   299,   nil,   299,   nil,
   299,   nil,   nil,   299,   299,   219,   nil,   219,   219,   nil,
   219,   219,   nil,   219,   nil,   219,   nil,   219,   nil,   219,
   nil,   nil,   219,   219,   296,   nil,   296,   296,   nil,   296,
   296,   nil,   296,   nil,   296,   nil,   296,   nil,   296,   nil,
   nil,   296,   296,   149,   nil,   149,   149,   nil,   149,   149,
   nil,   149,   nil,   149,   nil,   149,   nil,   149,   nil,   nil,
   149,   149,    27,   nil,    27,    27,   nil,    27,    27,   nil,
    27,   nil,    27,   nil,    27,   nil,    27,   nil,   nil,    27,
    27,     0,   nil,     0,     0,   nil,     0,     0,   nil,     0,
   nil,     0,   nil,     0,   nil,     0,   nil,   nil,     0,     0 ]

racc_action_pointer = [
   744,   nil,   164,   nil,   nil,   nil,   nil,   nil,   104,   369,
   nil,   367,   nil,    79,   nil,    93,   nil,   100,   nil,   117,
   nil,   134,   315,    18,   nil,   354,   nil,   725,   340,    35,
   nil,   nil,   305,   nil,    15,   nil,   nil,   nil,   nil,   nil,
   293,   286,   nil,   nil,   325,   304,   270,   nil,   nil,   nil,
   nil,   311,   nil,    10,   301,   nil,   nil,   273,   271,   nil,
   267,   279,   258,   nil,   255,   nil,   231,   340,   271,   nil,
   184,    73,    25,   nil,     5,   168,   165,   nil,   163,   nil,
   145,    47,    -2,   nil,    28,   nil,    20,   nil,   231,    63,
   nil,   nil,   296,   138,   195,   135,   360,   nil,    19,   nil,
   355,    49,   372,   nil,   154,   359,   nil,    29,   nil,   nil,
   nil,     8,   339,   nil,   nil,   328,   nil,    -5,   271,   284,
   282,   259,   nil,   202,   162,   nil,   nil,   nil,   172,   404,
   360,   -32,   334,   nil,    84,   nil,   nil,   384,   nil,   nil,
   nil,   nil,   nil,   150,   nil,   177,   210,   nil,   nil,   706,
    79,   442,   131,    82,    53,   nil,   126,   134,   141,    44,
   nil,   nil,   nil,    -5,   nil,   nil,   129,   nil,   217,   nil,
   nil,   nil,   nil,   nil,   628,   nil,   609,   nil,     5,   144,
   203,   180,   166,   219,   223,   199,   -31,   nil,   222,   nil,
   nil,   222,   nil,   243,   nil,   nil,   239,   310,   nil,   nil,
   nil,   nil,   nil,   nil,   238,   nil,   241,   249,   250,   361,
   nil,   217,   nil,   nil,   214,   nil,   nil,   231,   nil,   668,
   nil,   419,   nil,    77,   nil,   nil,   508,   288,   281,    -7,
   nil,   292,   nil,   301,   nil,   186,   nil,   nil,   398,   354,
    51,   nil,   nil,   569,   nil,   548,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   324,   nil,   280,   nil,   164,   nil,
    -8,   323,   nil,   nil,   346,   457,   nil,   489,   160,   nil,
   nil,    80,   150,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   463,   360,   361,   nil,   363,   nil,   529,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   687,   nil,   588,   649,
   nil,   nil ]

racc_action_default = [
  -167,  -160,  -191,   -15,    -3,  -158,   -16,    -5,  -191,  -191,
    -6,  -191,    -7,  -159,    -8,  -191,    -9,  -191,   -10,  -191,
   -11,  -191,   -39,  -191,   -12,  -191,   -13,    -1,  -191,  -191,
   -14,    -2,  -167,  -159,  -167,  -165,  -164,  -163,  -161,  -166,
   -77,   -70,   -31,   -29,   -62,   -30,  -191,   -32,   -19,  -102,
  -100,   -20,  -101,   -61,   -21,   -60,   -22,  -191,   -24,  -148,
   -25,  -191,   -26,  -147,   -27,  -184,   -28,  -191,  -108,   -92,
   -88,  -191,  -191,   -95,  -191,   -89,   -93,  -109,   -90,  -110,
   -97,   -91,  -191,  -111,   -96,   -94,  -191,  -149,  -151,  -167,
   -40,   -41,  -191,   -70,  -167,  -167,  -191,    -4,  -191,   -38,
  -191,  -191,  -191,  -180,  -191,  -191,  -178,  -191,   -75,   -76,
   -78,  -191,  -189,   -66,   -71,   -63,   -62,   -61,   -58,   -64,
  -189,   -67,   -56,   -65,  -191,  -146,  -145,   -68,  -191,  -191,
  -191,  -191,  -191,   -18,  -191,  -122,  -124,  -191,  -127,  -125,
  -126,  -123,   -80,  -191,  -186,  -120,  -191,  -118,  -119,  -191,
  -191,  -191,  -191,  -191,  -168,  -169,  -191,  -191,  -189,  -191,
   -45,   -61,   -47,  -191,   -54,   -53,  -167,   -44,  -191,   302,
   -69,  -182,  -183,  -181,  -191,  -179,  -191,  -162,  -191,  -191,
  -191,  -190,   -59,  -191,  -191,  -190,   -70,  -103,   -61,   -23,
   -99,  -191,   -33,  -191,  -143,  -141,  -191,  -191,  -144,  -135,
  -142,  -136,   -17,   -86,   -82,  -121,   -83,   -87,   -84,   -85,
  -185,  -191,  -187,  -188,  -114,  -113,  -115,  -191,  -116,  -191,
  -112,  -191,  -129,  -191,  -133,  -150,  -191,  -175,  -191,  -191,
  -172,  -177,  -104,  -191,   -50,  -191,   -49,   -43,  -191,  -191,
  -191,   -42,  -155,  -191,  -157,  -191,   -74,   -73,   -37,   -79,
   -57,   -34,   -35,   -72,  -189,   -98,  -191,  -138,  -189,   -81,
  -191,  -106,  -130,  -128,  -191,  -191,  -153,  -191,  -191,  -170,
  -171,  -191,  -191,   -36,   -46,   -51,   -52,   -48,  -154,  -156,
   -55,  -140,  -191,  -191,  -188,  -117,  -191,  -105,  -191,  -134,
  -152,  -174,  -173,  -176,  -139,  -137,  -191,  -132,  -191,  -191,
  -131,  -107 ]

racc_goto_table = [
    23,    27,    97,    74,     9,   211,   230,    86,   201,    48,
   180,   205,   120,    63,   108,   196,    32,    47,   184,   122,
   110,   127,    38,   159,   168,    31,    25,    23,   222,   100,
    43,     9,   143,   274,   224,    89,   128,    91,   287,   216,
   218,    63,   215,   221,   112,   183,   199,   118,   258,    88,
   153,   102,    34,   105,   189,   228,   233,   103,   113,   106,
   145,   142,   229,   134,   158,    99,   173,    63,    45,   nil,
   150,    47,   nil,   257,    87,   nil,   nil,   nil,   nil,    66,
   196,   nil,   156,   nil,    43,   nil,   nil,   nil,   170,   nil,
   nil,   nil,   nil,   nil,   nil,   240,   115,   nil,   262,   nil,
   nil,   nil,   nil,   nil,   224,   nil,   nil,   126,   nil,   nil,
   nil,   nil,   275,   276,   155,   171,   nil,   nil,   175,   nil,
   282,   177,    45,   292,   nil,   nil,   191,   nil,   nil,    63,
    63,   nil,    63,    66,    47,   192,   214,    63,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,    43,    43,   289,    23,
   219,    63,   280,     9,   203,   108,   283,   254,   294,   253,
   250,   249,   127,   nil,   nil,   196,   nil,   nil,   246,   247,
   nil,   nil,   nil,   nil,    23,   243,    23,   245,     9,   nil,
     9,   nil,    63,   nil,    45,    45,   nil,   194,   nil,   nil,
   nil,   nil,   204,   nil,    97,    66,    66,    63,   126,   113,
   nil,   259,   nil,   126,   nil,   260,   194,   225,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,    64,   126,    97,    23,
    97,    63,   nil,     9,   nil,    58,    23,   267,   nil,   nil,
     9,   nil,   nil,   nil,   nil,   nil,    60,   115,    63,    63,
   nil,   nil,    97,    23,   125,    23,   281,     9,   126,     9,
   nil,   nil,   194,   119,   nil,   203,   203,   nil,   291,   nil,
   nil,   nil,   293,   126,   121,    63,   nil,    23,   nil,   nil,
    64,     9,   nil,    97,    97,   nil,   194,   nil,   nil,    58,
   nil,   nil,    63,   nil,   nil,   nil,   nil,   126,    23,   298,
    60,    62,     9,   204,   204,   nil,    23,   299,    23,    23,
     9,   nil,     9,     9,   126,   126,   164,   164,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   165,   165,   123,
   194,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   126,    64,    64,   nil,   125,   nil,   194,   nil,   nil,
   209,    58,    58,   nil,   195,    62,   nil,   nil,   126,   206,
   nil,   nil,    60,    60,   125,   198,   nil,   nil,   nil,   nil,
   207,   nil,   nil,   195,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   198,   nil,   nil,   nil,   164,   nil,
   nil,   nil,   nil,   nil,   nil,   125,   nil,   nil,   nil,   165,
   nil,   nil,   nil,   nil,   119,   nil,   nil,   nil,   nil,   nil,
   125,   nil,   nil,   nil,   nil,   121,   nil,    62,    62,   195,
   200,   nil,   nil,   nil,   nil,   208,   nil,   nil,   nil,   nil,
   198,   nil,   nil,   nil,   125,   nil,   nil,   nil,   nil,   200,
   nil,   nil,   nil,   195,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   209,   209,   nil,   198,   nil,   nil,   164,   nil,   nil,
   206,   206,   nil,   nil,   nil,   nil,   nil,   nil,   165,   nil,
   123,   207,   207,   nil,   nil,   nil,   nil,   nil,   125,   nil,
   nil,   nil,   nil,   nil,   nil,   200,   nil,   195,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   125,   nil,   nil,   198,   nil,
   nil,   nil,   nil,   nil,   195,   nil,   nil,   nil,   nil,   200,
   nil,   nil,   nil,   nil,   nil,   198,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   208,   208,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   200,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   200 ]

racc_goto_check = [
    34,     2,     4,    54,    28,    53,    77,    48,    67,    17,
    33,    43,    32,    46,    49,    65,    29,    28,    33,    44,
    51,    47,    74,    38,    38,     3,     1,    34,    63,    34,
    26,    28,    52,    39,    65,    29,    48,    37,    55,    57,
    58,    46,    60,    62,    35,    31,    66,    30,    68,    69,
    70,    71,    72,    73,    20,    75,    33,     3,    26,     3,
    54,    48,    76,    17,    32,     5,    78,    46,    27,   nil,
    54,    28,   nil,    67,    27,   nil,   nil,   nil,   nil,    25,
    65,   nil,    48,   nil,    26,   nil,   nil,   nil,    48,   nil,
   nil,   nil,   nil,   nil,   nil,    38,    27,   nil,    63,   nil,
   nil,   nil,   nil,   nil,    65,   nil,   nil,    25,   nil,   nil,
   nil,   nil,    43,    43,     3,    29,   nil,   nil,    74,   nil,
    53,    74,    27,    77,   nil,   nil,    17,   nil,   nil,    46,
    46,   nil,    46,    25,    28,    28,    48,    46,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,    26,    26,    65,    34,
     2,    46,    33,    28,    26,    49,    33,    32,    67,    49,
    44,    51,    47,   nil,   nil,    65,   nil,   nil,    48,    48,
   nil,   nil,   nil,   nil,    34,     2,    34,     2,    28,   nil,
    28,   nil,    46,   nil,    27,    27,   nil,    27,   nil,   nil,
   nil,   nil,    27,   nil,     4,    25,    25,    46,    25,    26,
   nil,    48,   nil,    25,   nil,    54,    27,    27,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,    24,    25,     4,    34,
     4,    46,   nil,    28,   nil,    21,    34,     2,   nil,   nil,
    28,   nil,   nil,   nil,   nil,   nil,    22,    27,    46,    46,
   nil,   nil,     4,    34,    24,    34,    48,    28,    25,    28,
   nil,   nil,    27,    21,   nil,    26,    26,   nil,    48,   nil,
   nil,   nil,    48,    25,    22,    46,   nil,    34,   nil,   nil,
    24,    28,   nil,     4,     4,   nil,    27,   nil,   nil,    21,
   nil,   nil,    46,   nil,   nil,   nil,   nil,    25,    34,     2,
    22,    23,    28,    27,    27,   nil,    34,     2,    34,    34,
    28,   nil,    28,    28,    25,    25,    21,    21,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,    22,    22,    23,
    27,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,    25,    24,    24,   nil,    24,   nil,    27,   nil,   nil,
    24,    21,    21,   nil,    21,    23,   nil,   nil,    25,    21,
   nil,   nil,    22,    22,    24,    22,   nil,   nil,   nil,   nil,
    22,   nil,   nil,    21,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,    22,   nil,   nil,   nil,    21,   nil,
   nil,   nil,   nil,   nil,   nil,    24,   nil,   nil,   nil,    22,
   nil,   nil,   nil,   nil,    21,   nil,   nil,   nil,   nil,   nil,
    24,   nil,   nil,   nil,   nil,    22,   nil,    23,    23,    21,
    23,   nil,   nil,   nil,   nil,    23,   nil,   nil,   nil,   nil,
    22,   nil,   nil,   nil,    24,   nil,   nil,   nil,   nil,    23,
   nil,   nil,   nil,    21,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,    24,    24,   nil,    22,   nil,   nil,    21,   nil,   nil,
    21,    21,   nil,   nil,   nil,   nil,   nil,   nil,    22,   nil,
    23,    22,    22,   nil,   nil,   nil,   nil,   nil,    24,   nil,
   nil,   nil,   nil,   nil,   nil,    23,   nil,    21,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,    24,   nil,   nil,    22,   nil,
   nil,   nil,   nil,   nil,    21,   nil,   nil,   nil,   nil,    23,
   nil,   nil,   nil,   nil,   nil,    22,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,    23,    23,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,    23,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
    23 ]

racc_goto_pointer = [
   nil,    26,     1,    25,   -25,    36,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,    -4,   nil,   nil,
   -75,   212,   223,   278,   203,    66,    17,    55,     4,    14,
     6,   -73,   -29,  -102,     0,     4,   nil,    14,   -71,  -202,
   nil,   nil,   nil,  -126,   -22,   nil,     0,   -20,   -10,   -26,
   nil,   -20,   -39,  -138,   -12,  -223,   nil,  -107,  -106,   nil,
  -104,   nil,  -108,  -123,   nil,  -117,   -86,  -124,  -149,    30,
   -39,    19,    44,    19,    14,   -99,   -92,  -148,   -35 ]

racc_goto_default = [
   nil,   nil,   nil,   167,     4,     7,    10,    12,    14,    16,
    18,    20,    24,    26,    30,     3,     6,   nil,    51,    54,
    56,    75,    76,    78,    81,    84,    69,    70,    73,    11,
   nil,   nil,   nil,   nil,    61,   nil,    29,   nil,   nil,   160,
   235,   162,   163,   nil,   nil,   124,    80,    85,    68,   114,
   109,   nil,   nil,   nil,   nil,   nil,    77,    79,    83,   146,
   nil,   137,   nil,   nil,   223,    57,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil ]

racc_token_table = {
 false => 0,
 Object.new => 1,
 :LBRACK => 2,
 :DQTEXT => 3,
 :SQTEXT => 4,
 :RBRACK => 5,
 :LBRACE => 6,
 :RBRACE => 7,
 :SYMBOL => 8,
 :FARROW => 9,
 :COMMA => 10,
 :TRUE => 11,
 :FALSE => 12,
 :EQUALS => 13,
 :LESSEQUAL => 14,
 :NOTEQUAL => 15,
 :DOT => 16,
 :COLON => 17,
 :LLCOLLECT => 18,
 :RRCOLLECT => 19,
 :QMARK => 20,
 :LPAREN => 21,
 :RPAREN => 22,
 :ISEQUAL => 23,
 :GREATEREQUAL => 24,
 :GREATERTHAN => 25,
 :LESSTHAN => 26,
 :IF => 27,
 :ELSE => 28,
 :IMPORT => 29,
 :DEFINE => 30,
 :ELSIF => 31,
 :VARIABLE => 32,
 :CLASS => 33,
 :INHERITS => 34,
 :NODE => 35,
 :BOOLEAN => 36,
 :NAME => 37,
 :SEMIC => 38,
 :CASE => 39,
 :DEFAULT => 40,
 :AT => 41,
 :LCOLLECT => 42,
 :RCOLLECT => 43,
 :CLASSNAME => 44,
 :CLASSREF => 45,
 :NOT => 46,
 :OR => 47,
 :AND => 48,
 :UNDEF => 49,
 :PARROW => 50 }

racc_use_result_var = true

racc_nt_base = 51

Racc_arg = [
 racc_action_table,
 racc_action_check,
 racc_action_default,
 racc_action_pointer,
 racc_goto_table,
 racc_goto_check,
 racc_goto_default,
 racc_goto_pointer,
 racc_nt_base,
 racc_reduce_table,
 racc_token_table,
 racc_shift_n,
 racc_reduce_n,
 racc_use_result_var ]

Racc_token_to_s_table = [
'$end',
'error',
'LBRACK',
'DQTEXT',
'SQTEXT',
'RBRACK',
'LBRACE',
'RBRACE',
'SYMBOL',
'FARROW',
'COMMA',
'TRUE',
'FALSE',
'EQUALS',
'LESSEQUAL',
'NOTEQUAL',
'DOT',
'COLON',
'LLCOLLECT',
'RRCOLLECT',
'QMARK',
'LPAREN',
'RPAREN',
'ISEQUAL',
'GREATEREQUAL',
'GREATERTHAN',
'LESSTHAN',
'IF',
'ELSE',
'IMPORT',
'DEFINE',
'ELSIF',
'VARIABLE',
'CLASS',
'INHERITS',
'NODE',
'BOOLEAN',
'NAME',
'SEMIC',
'CASE',
'DEFAULT',
'AT',
'LCOLLECT',
'RCOLLECT',
'CLASSNAME',
'CLASSREF',
'NOT',
'OR',
'AND',
'UNDEF',
'PARROW',
'$start',
'program',
'statements',
'nil',
'statement',
'resource',
'virtualresource',
'collection',
'assignment',
'casestatement',
'ifstatement',
'import',
'fstatement',
'definition',
'hostclass',
'nodedef',
'resourceoverride',
'funcvalues',
'namestrings',
'resourcerefs',
'namestring',
'name',
'variable',
'type',
'boolean',
'funcrvalue',
'selector',
'quotedtext',
'resourceref',
'classname',
'resourceinstances',
'endsemi',
'params',
'endcomma',
'classref',
'anyparams',
'at',
'collectrhand',
'collstatements',
'collstatement',
'colljoin',
'collexpr',
'colllval',
'simplervalue',
'resourceinst',
'resourcename',
'undef',
'array',
'rvalue',
'param',
'addparam',
'anyparam',
'rvalues',
'comma',
'expression',
'else',
'booleanexpr',
'comparison',
'notexpr',
'booleanop',
'rexpression',
'comparisonop',
'caseopts',
'caseopt',
'casevalues',
'selectlhand',
'svalues',
'selectval',
'sintvalues',
'qtexts',
'argumentlist',
'classparent',
'hostnames',
'nodeparent',
'hostname',
'nothing',
'arguments',
'argument',
'classnameordefault']

Racc_debug_parser = true

##### racc system variables end #####

 # reduce 0 omitted

module_eval <<'.,.,', 'grammar.ra', 38
  def _reduce_1( val, _values, result )
    if val[0]
        # Make sure we always return an array.
        if val[0].is_a?(AST::ASTArray)
            if val[0].children.empty?
                result = nil
            else
                result = val[0]
            end
        else
            result = aryfy(val[0])
        end
    else
        result = nil
    end
   result
  end
.,.,

 # reduce 2 omitted

 # reduce 3 omitted

module_eval <<'.,.,', 'grammar.ra', 54
  def _reduce_4( val, _values, result )
    if val[0] and val[1]
        if val[0].instance_of?(AST::ASTArray)
            val[0].push(val[1])
            result = val[0]
        else
            result = ast AST::ASTArray, :children => [val[0],val[1]]
        end
    elsif obj = (val[0] || val[1])
        result = obj
    else result = nil
    end
   result
  end
.,.,

 # reduce 5 omitted

 # reduce 6 omitted

 # reduce 7 omitted

 # reduce 8 omitted

 # reduce 9 omitted

 # reduce 10 omitted

 # reduce 11 omitted

 # reduce 12 omitted

 # reduce 13 omitted

 # reduce 14 omitted

 # reduce 15 omitted

 # reduce 16 omitted

module_eval <<'.,.,', 'grammar.ra', 76
  def _reduce_17( val, _values, result )
    args = aryfy(val[2])
    result = ast AST::Function,
        :name => val[0],
        :arguments => args,
        :ftype => :statement
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 82
  def _reduce_18( val, _values, result )
    result = ast AST::Function,
        :name => val[0],
        :arguments => AST::ASTArray.new({}),
        :ftype => :statement
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 89
  def _reduce_19( val, _values, result )
    args = aryfy(val[1])
    result = ast AST::Function,
        :name => val[0],
        :arguments => args,
        :ftype => :statement
   result
  end
.,.,

 # reduce 20 omitted

 # reduce 21 omitted

 # reduce 22 omitted

module_eval <<'.,.,', 'grammar.ra', 99
  def _reduce_23( val, _values, result )
    result = aryfy(val[0], val[2])
    result.line = @lexer.line
    result.file = @lexer.file
   result
  end
.,.,

 # reduce 24 omitted

 # reduce 25 omitted

 # reduce 26 omitted

 # reduce 27 omitted

 # reduce 28 omitted

 # reduce 29 omitted

 # reduce 30 omitted

module_eval <<'.,.,', 'grammar.ra', 112
  def _reduce_31( val, _values, result )
                    result = ast AST::Name, :value => val[0]
   result
  end
.,.,

 # reduce 32 omitted

module_eval <<'.,.,', 'grammar.ra', 123
  def _reduce_33( val, _values, result )
    unless val[0].is_a?(AST::ASTArray)
        val[0] = aryfy(val[0])
    end

    val[0].push(val[2])

    result = val[0]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 144
  def _reduce_34( val, _values, result )
    array = val[2]
    if array.instance_of?(AST::ResourceInstance)
        array = [array]
    end
    result = ast AST::ASTArray

    # this iterates across each specified resourceinstance
    array.each { |instance|
        unless instance.instance_of?(AST::ResourceInstance)
            raise Puppet::Dev, "Got something that isn't an instance"
        end
        # now, i need to somehow differentiate between those things with
        # arrays in their names, and normal things
        result.push ast(AST::Resource,
            :type => val[0],
            :title => instance[0],
            :params => instance[1])
    }
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 147
  def _reduce_35( val, _values, result )
    # This is a deprecated syntax.
    error "All resource specifications require names"
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 150
  def _reduce_36( val, _values, result )
    # a defaults setting for a type
    result = ast(AST::ResourceDefaults, :type => val[0], :params => val[2])
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 155
  def _reduce_37( val, _values, result )
    result = ast AST::ResourceOverride, :object => val[0], :params => val[2]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 182
  def _reduce_38( val, _values, result )
    type = val[0]

    if (type == :exported and ! Puppet[:storeconfigs]) and ! Puppet[:parseonly]
        Puppet.warning addcontext("You cannot collect without storeconfigs being set")
    end

    if val[1].is_a? AST::ResourceDefaults
        error "Defaults are not virtualizable"
    end

    method = type.to_s + "="

    # Just mark our resources as exported and pass them through.
    if val[1].instance_of?(AST::ASTArray)
        val[1].each do |obj|
            obj.send(method, true)
        end
    else
        val[1].send(method, true)
    end

    result = val[1]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 183
  def _reduce_39( val, _values, result )
 result = :virtual
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 184
  def _reduce_40( val, _values, result )
 result = :exported
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 207
  def _reduce_41( val, _values, result )
    if val[0] =~ /^[a-z]/
        Puppet.warning addcontext("Collection names must now be capitalized")
    end
    type = val[0].downcase
    args = {:type => type}

    if val[1].is_a?(AST::CollExpr)
        args[:query] = val[1]
        args[:query].type = type
        args[:form] = args[:query].form
    else
        args[:form] = val[1]
    end
    if args[:form] == :exported and ! Puppet[:storeconfigs] and ! Puppet[:parseonly]
        Puppet.warning addcontext("You cannot collect exported resources without storeconfigs being set; the collection will be ignored")
    end
    result = ast AST::Collection, args
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 217
  def _reduce_42( val, _values, result )
    if val[1]
        result = val[1]
        result.form = :virtual
    else
        result = :virtual
    end
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 225
  def _reduce_43( val, _values, result )
    if val[1]
        result = val[1]
        result.form = :exported
    else
        result = :exported
    end
   result
  end
.,.,

 # reduce 44 omitted

 # reduce 45 omitted

module_eval <<'.,.,', 'grammar.ra', 233
  def _reduce_46( val, _values, result )
    result = ast AST::CollExpr, :test1 => val[0], :oper => val[1], :test2 => val[2]
   result
  end
.,.,

 # reduce 47 omitted

module_eval <<'.,.,', 'grammar.ra', 239
  def _reduce_48( val, _values, result )
    result = val[1]
    result.parens = true
   result
  end
.,.,

 # reduce 49 omitted

 # reduce 50 omitted

module_eval <<'.,.,', 'grammar.ra', 247
  def _reduce_51( val, _values, result )
    result = ast AST::CollExpr, :test1 => val[0], :oper => val[1], :test2 => val[2]
    #result = ast AST::CollExpr
    #result.push *val
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 252
  def _reduce_52( val, _values, result )
    result = ast AST::CollExpr, :test1 => val[0], :oper => val[1], :test2 => val[2]
    #result = ast AST::CollExpr
    #result.push *val
   result
  end
.,.,

 # reduce 53 omitted

 # reduce 54 omitted

module_eval <<'.,.,', 'grammar.ra', 259
  def _reduce_55( val, _values, result )
    result = ast AST::ResourceInstance, :children => [val[0],val[2]]
   result
  end
.,.,

 # reduce 56 omitted

module_eval <<'.,.,', 'grammar.ra', 269
  def _reduce_57( val, _values, result )
    if val[0].instance_of?(AST::ResourceInstance)
        result = ast AST::ASTArray, :children => [val[0],val[2]]
    else
        val[0].push val[2]
        result = val[0]
    end
   result
  end
.,.,

 # reduce 58 omitted

 # reduce 59 omitted

module_eval <<'.,.,', 'grammar.ra', 276
  def _reduce_60( val, _values, result )
    result = ast AST::Undef, :value => :undef
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 280
  def _reduce_61( val, _values, result )
    result = ast AST::Name, :value => val[0]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 284
  def _reduce_62( val, _values, result )
    result = ast AST::Type, :value => val[0]
   result
  end
.,.,

 # reduce 63 omitted

 # reduce 64 omitted

 # reduce 65 omitted

 # reduce 66 omitted

 # reduce 67 omitted

 # reduce 68 omitted

module_eval <<'.,.,', 'grammar.ra', 300
  def _reduce_69( val, _values, result )
    if val[0] =~ /::/
        raise Puppet::ParseError, "Cannot assign to variables in other namespaces"
    end
    # this is distinct from referencing a variable
    variable = ast AST::Name, :value => val[0]
    result = ast AST::VarDef, :name => variable, :value => val[2]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 305
  def _reduce_70( val, _values, result )
    result = ast AST::ASTArray
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 305
  def _reduce_71( val, _values, result )
 result = val[0]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 314
  def _reduce_72( val, _values, result )
    if val[0].instance_of?(AST::ASTArray)
        val[0].push(val[2])
        result = val[0]
    else
        result = ast AST::ASTArray, :children => [val[0],val[2]]
    end
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 318
  def _reduce_73( val, _values, result )
    result = ast AST::ResourceParam, :param => val[0], :value => val[2]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 323
  def _reduce_74( val, _values, result )
    result = ast AST::ResourceParam, :param => val[0], :value => val[2],
                                     :add => true
   result
  end
.,.,

 # reduce 75 omitted

 # reduce 76 omitted

module_eval <<'.,.,', 'grammar.ra', 331
  def _reduce_77( val, _values, result )
    result = ast AST::ASTArray
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 331
  def _reduce_78( val, _values, result )
 result = val[0]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 340
  def _reduce_79( val, _values, result )
    if val[0].instance_of?(AST::ASTArray)
        val[0].push(val[2])
        result = val[0]
    else
        result = ast AST::ASTArray, :children => [val[0],val[2]]
    end
   result
  end
.,.,

 # reduce 80 omitted

module_eval <<'.,.,', 'grammar.ra', 349
  def _reduce_81( val, _values, result )
    if val[0].instance_of?(AST::ASTArray)
        result = val[0].push(val[2])
    else
        result = ast AST::ASTArray, :children => [val[0],val[2]]
    end
   result
  end
.,.,

 # reduce 82 omitted

 # reduce 83 omitted

 # reduce 84 omitted

 # reduce 85 omitted

 # reduce 86 omitted

 # reduce 87 omitted

 # reduce 88 omitted

 # reduce 89 omitted

 # reduce 90 omitted

 # reduce 91 omitted

 # reduce 92 omitted

 # reduce 93 omitted

 # reduce 94 omitted

 # reduce 95 omitted

 # reduce 96 omitted

 # reduce 97 omitted

module_eval <<'.,.,', 'grammar.ra', 376
  def _reduce_98( val, _values, result )
    args = aryfy(val[2])
    result = ast AST::Function,
        :name => val[0],
        :arguments => args,
        :ftype => :rvalue
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 381
  def _reduce_99( val, _values, result )
    result = ast AST::Function,
        :name => val[0],
        :arguments => AST::ASTArray.new({}),
        :ftype => :rvalue
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 385
  def _reduce_100( val, _values, result )
    result = ast AST::String, :value => val[0]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 387
  def _reduce_101( val, _values, result )
    result = ast AST::FlatString, :value => val[0]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 391
  def _reduce_102( val, _values, result )
    result = ast AST::Boolean, :value => val[0]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 396
  def _reduce_103( val, _values, result )
    Puppet.warning addcontext("Deprecation notice:  Resource references should now be capitalized")
    result = ast AST::ResourceReference, :type => val[0], :title => val[2]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 398
  def _reduce_104( val, _values, result )
    result = ast AST::ResourceReference, :type => val[0], :title => val[2]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 411
  def _reduce_105( val, _values, result )
    args = {
        :test => val[1],
        :statements => val[3]
    }

    if val[5]
        args[:else] = val[5]
    end

    result = ast AST::IfStatement, args
   result
  end
.,.,

 # reduce 106 omitted

module_eval <<'.,.,', 'grammar.ra', 416
  def _reduce_107( val, _values, result )
    result = ast AST::Else, :statements => val[2]
   result
  end
.,.,

 # reduce 108 omitted

 # reduce 109 omitted

 # reduce 110 omitted

 # reduce 111 omitted

module_eval <<'.,.,', 'grammar.ra', 427
  def _reduce_112( val, _values, result )
    result = val[1]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 431
  def _reduce_113( val, _values, result )
    result = ast AST::BooleanOperator, :operator => val[1], :lval => val[0], :rval => val[2]
   result
  end
.,.,

 # reduce 114 omitted

 # reduce 115 omitted

 # reduce 116 omitted

module_eval <<'.,.,', 'grammar.ra', 438
  def _reduce_117( val, _values, result )
    result = val[1]
   result
  end
.,.,

 # reduce 118 omitted

 # reduce 119 omitted

module_eval <<'.,.,', 'grammar.ra', 444
  def _reduce_120( val, _values, result )
    result = ast AST::Not, :value => val[1]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 448
  def _reduce_121( val, _values, result )
    result = ast AST::ComparisonOperator, :operator => val[1], :lval => val[0], :rval => val[2]
   result
  end
.,.,

 # reduce 122 omitted

 # reduce 123 omitted

 # reduce 124 omitted

 # reduce 125 omitted

 # reduce 126 omitted

 # reduce 127 omitted

module_eval <<'.,.,', 'grammar.ra', 459
  def _reduce_128( val, _values, result )
    options = val[3]
    unless options.instance_of?(AST::ASTArray)
        options = ast AST::ASTArray, :children => [val[3]]
    end
    result = ast AST::CaseStatement, :test => val[1], :options => options
   result
  end
.,.,

 # reduce 129 omitted

module_eval <<'.,.,', 'grammar.ra', 469
  def _reduce_130( val, _values, result )
    if val[0].instance_of?(AST::ASTArray)
        val[0].push val[1]
        result = val[0]
    else
        result = ast AST::ASTArray, :children => [val[0], val[1]]
    end
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 473
  def _reduce_131( val, _values, result )
    result = ast AST::CaseOpt, :value => val[0], :statements => val[3]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 478
  def _reduce_132( val, _values, result )
    result = ast(AST::CaseOpt,
        :value => val[0],
        :statements => ast(AST::ASTArray)
    )
   result
  end
.,.,

 # reduce 133 omitted

module_eval <<'.,.,', 'grammar.ra', 488
  def _reduce_134( val, _values, result )
    if val[0].instance_of?(AST::ASTArray)
        val[0].push(val[2])
        result = val[0]
    else
        result = ast AST::ASTArray, :children => [val[0],val[2]]
    end
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 492
  def _reduce_135( val, _values, result )
    result = ast AST::Selector, :param => val[0], :values => val[2]
   result
  end
.,.,

 # reduce 136 omitted

module_eval <<'.,.,', 'grammar.ra', 494
  def _reduce_137( val, _values, result )
 result = val[1]
   result
  end
.,.,

 # reduce 138 omitted

module_eval <<'.,.,', 'grammar.ra', 505
  def _reduce_139( val, _values, result )
    if val[0].instance_of?(AST::ASTArray)
        val[0].push(val[2])
        result = val[0]
    else
        result = ast AST::ASTArray, :children => [val[0],val[2]]
    end
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 509
  def _reduce_140( val, _values, result )
    result = ast AST::ResourceParam, :param => val[0], :value => val[2]
   result
  end
.,.,

 # reduce 141 omitted

 # reduce 142 omitted

 # reduce 143 omitted

 # reduce 144 omitted

 # reduce 145 omitted

 # reduce 146 omitted

 # reduce 147 omitted

module_eval <<'.,.,', 'grammar.ra', 520
  def _reduce_148( val, _values, result )
    result = ast AST::Default, :value => val[0]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 522
  def _reduce_149( val, _values, result )
 result = [val[0].value]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 526
  def _reduce_150( val, _values, result )
    results = val[0] << val[2].value
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 534
  def _reduce_151( val, _values, result )
    val[1].each do |file|
        import(file)
    end

    result = AST::ASTArray.new(:children => [])
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 544
  def _reduce_152( val, _values, result )
    newdefine classname(val[1]), :arguments => val[2], :code => val[4]
    @lexer.indefine = false
    result = nil

#}           | DEFINE NAME argumentlist parent LBRACE RBRACE {
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 548
  def _reduce_153( val, _values, result )
    newdefine classname(val[1]), :arguments => val[2]
    @lexer.indefine = false
    result = nil
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 556
  def _reduce_154( val, _values, result )
    # Our class gets defined in the parent namespace, not our own.
    @lexer.namepop
    newclass classname(val[1]), :code => val[4], :parent => val[2]
    result = nil
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 561
  def _reduce_155( val, _values, result )
    # Our class gets defined in the parent namespace, not our own.
    @lexer.namepop
    newclass classname(val[1]), :parent => val[2]
    result = nil
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 566
  def _reduce_156( val, _values, result )
    newnode val[1], :parent => val[2], :code => val[4]
    result = nil
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 569
  def _reduce_157( val, _values, result )
    newnode val[1], :parent => val[2]
    result = nil
   result
  end
.,.,

 # reduce 158 omitted

 # reduce 159 omitted

 # reduce 160 omitted

 # reduce 161 omitted

module_eval <<'.,.,', 'grammar.ra', 583
  def _reduce_162( val, _values, result )
    result = val[0]
    result = [result] unless result.is_a?(Array)
    result << val[2]
   result
  end
.,.,

 # reduce 163 omitted

 # reduce 164 omitted

 # reduce 165 omitted

 # reduce 166 omitted

module_eval <<'.,.,', 'grammar.ra', 592
  def _reduce_167( val, _values, result )
    result = nil
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 596
  def _reduce_168( val, _values, result )
    result = ast AST::ASTArray, :children => []
   result
  end
.,.,

 # reduce 169 omitted

module_eval <<'.,.,', 'grammar.ra', 601
  def _reduce_170( val, _values, result )
    result = nil
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 605
  def _reduce_171( val, _values, result )
    result = val[1]
    result = [result] unless result[0].is_a?(Array)
   result
  end
.,.,

 # reduce 172 omitted

module_eval <<'.,.,', 'grammar.ra', 612
  def _reduce_173( val, _values, result )
    result = val[0]
    result = [result] unless result[0].is_a?(Array)
    result << val[2]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 617
  def _reduce_174( val, _values, result )
    Puppet.warning addcontext("Deprecation notice: must now include '$' in prototype")
    result = [val[0], val[2]]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 621
  def _reduce_175( val, _values, result )
    Puppet.warning addcontext("Deprecation notice: must now include '$' in prototype")
    result = [val[0]]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 623
  def _reduce_176( val, _values, result )
    result = [val[0], val[2]]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 625
  def _reduce_177( val, _values, result )
    result = [val[0]]
   result
  end
.,.,

 # reduce 178 omitted

module_eval <<'.,.,', 'grammar.ra', 630
  def _reduce_179( val, _values, result )
    result = val[1]
   result
  end
.,.,

 # reduce 180 omitted

module_eval <<'.,.,', 'grammar.ra', 635
  def _reduce_181( val, _values, result )
    result = val[1]
   result
  end
.,.,

 # reduce 182 omitted

 # reduce 183 omitted

module_eval <<'.,.,', 'grammar.ra', 641
  def _reduce_184( val, _values, result )
    result = ast AST::Variable, :value => val[0]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 649
  def _reduce_185( val, _values, result )
    if val[1].instance_of?(AST::ASTArray)
        result = val[1]
    else
        result = ast AST::ASTArray, :children => [val[1]]
    end
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 651
  def _reduce_186( val, _values, result )
    result = ast AST::ASTArray
   result
  end
.,.,

 # reduce 187 omitted

 # reduce 188 omitted

 # reduce 189 omitted

module_eval <<'.,.,', 'grammar.ra', 656
  def _reduce_190( val, _values, result )
 result = nil
   result
  end
.,.,

 def _reduce_none( val, _values, result )
  result
 end

    end   # class Parser

  end   # module Parser

end   # module Puppet
