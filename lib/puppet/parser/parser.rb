#
# DO NOT MODIFY!!!!
# This file is automatically generated by racc 1.4.5
# from racc grammer file "grammar.ra".
#

require 'racc/parser'


require 'puppet'
require 'puppet/util/loadedfile'
require 'puppet/parser/lexer'
require 'puppet/parser/ast'
#require 'puppet/parser/interpreter'

module Puppet
    class ParseError < Puppet::Error; end
    class ImportError < Racc::ParseError; end
    class AlreadyImportedError < ImportError; end
end

Puppet[:typecheck] = true
Puppet[:paramcheck] = true


module Puppet

  module Parser

    class Parser < Racc::Parser

module_eval <<'..end grammar.ra modeval..idf3068bc200', 'grammar.ra', 734

# It got too annoying having code in a file that needs to be compiled.
require 'puppet/parser/parser_support'

# Make emacs happy
# Local Variables:
# mode: ruby
# End:

# $Id$

..end grammar.ra modeval..idf3068bc200

##### racc 1.4.5 generates ###

racc_reduce_table = [
 0, 0, :racc_error,
 1, 60, :_reduce_1,
 1, 60, :_reduce_none,
 1, 61, :_reduce_none,
 2, 61, :_reduce_4,
 1, 63, :_reduce_none,
 1, 63, :_reduce_none,
 1, 63, :_reduce_none,
 1, 63, :_reduce_none,
 1, 63, :_reduce_none,
 1, 63, :_reduce_none,
 1, 63, :_reduce_none,
 1, 63, :_reduce_none,
 1, 63, :_reduce_none,
 1, 63, :_reduce_none,
 1, 63, :_reduce_none,
 1, 63, :_reduce_none,
 1, 63, :_reduce_none,
 4, 71, :_reduce_18,
 5, 71, :_reduce_19,
 3, 71, :_reduce_20,
 2, 71, :_reduce_21,
 1, 77, :_reduce_none,
 1, 77, :_reduce_none,
 3, 77, :_reduce_24,
 3, 77, :_reduce_25,
 1, 78, :_reduce_none,
 1, 78, :_reduce_none,
 1, 78, :_reduce_none,
 1, 78, :_reduce_none,
 1, 78, :_reduce_none,
 1, 78, :_reduce_none,
 1, 78, :_reduce_none,
 1, 78, :_reduce_33,
 5, 64, :_reduce_34,
 5, 64, :_reduce_35,
 5, 64, :_reduce_36,
 5, 75, :_reduce_37,
 2, 65, :_reduce_38,
 1, 94, :_reduce_39,
 2, 94, :_reduce_40,
 2, 66, :_reduce_41,
 3, 95, :_reduce_42,
 3, 95, :_reduce_43,
 1, 96, :_reduce_none,
 1, 96, :_reduce_none,
 3, 96, :_reduce_46,
 1, 97, :_reduce_none,
 3, 97, :_reduce_48,
 1, 98, :_reduce_none,
 1, 98, :_reduce_none,
 3, 99, :_reduce_51,
 3, 99, :_reduce_52,
 1, 100, :_reduce_none,
 1, 100, :_reduce_none,
 4, 102, :_reduce_55,
 1, 88, :_reduce_none,
 3, 88, :_reduce_57,
 0, 89, :_reduce_none,
 1, 89, :_reduce_none,
 1, 104, :_reduce_60,
 1, 80, :_reduce_61,
 1, 82, :_reduce_62,
 1, 103, :_reduce_none,
 1, 103, :_reduce_none,
 1, 103, :_reduce_none,
 1, 103, :_reduce_none,
 1, 103, :_reduce_none,
 1, 103, :_reduce_none,
 3, 67, :_reduce_69,
 3, 76, :_reduce_70,
 0, 90, :_reduce_71,
 1, 90, :_reduce_72,
 3, 90, :_reduce_73,
 3, 107, :_reduce_74,
 3, 109, :_reduce_75,
 1, 110, :_reduce_none,
 1, 110, :_reduce_none,
 0, 93, :_reduce_78,
 1, 93, :_reduce_79,
 3, 93, :_reduce_80,
 1, 111, :_reduce_none,
 3, 111, :_reduce_82,
 1, 101, :_reduce_none,
 1, 101, :_reduce_none,
 1, 101, :_reduce_none,
 1, 101, :_reduce_none,
 1, 101, :_reduce_none,
 1, 101, :_reduce_none,
 1, 108, :_reduce_none,
 1, 108, :_reduce_none,
 1, 108, :_reduce_none,
 1, 108, :_reduce_none,
 1, 108, :_reduce_none,
 1, 108, :_reduce_none,
 1, 108, :_reduce_none,
 1, 108, :_reduce_none,
 1, 108, :_reduce_none,
 1, 108, :_reduce_none,
 4, 84, :_reduce_99,
 3, 84, :_reduce_100,
 1, 86, :_reduce_101,
 1, 86, :_reduce_102,
 1, 83, :_reduce_103,
 4, 79, :_reduce_104,
 4, 79, :_reduce_105,
 6, 69, :_reduce_106,
 5, 69, :_reduce_107,
 0, 113, :_reduce_none,
 4, 113, :_reduce_109,
 3, 113, :_reduce_110,
 1, 106, :_reduce_none,
 3, 106, :_reduce_112,
 3, 106, :_reduce_113,
 3, 106, :_reduce_114,
 3, 106, :_reduce_115,
 3, 106, :_reduce_116,
 3, 106, :_reduce_117,
 2, 106, :_reduce_118,
 3, 106, :_reduce_119,
 3, 106, :_reduce_120,
 3, 106, :_reduce_121,
 3, 106, :_reduce_122,
 3, 106, :_reduce_123,
 3, 106, :_reduce_124,
 2, 106, :_reduce_125,
 3, 106, :_reduce_126,
 3, 106, :_reduce_127,
 3, 106, :_reduce_128,
 5, 68, :_reduce_129,
 1, 114, :_reduce_none,
 2, 114, :_reduce_131,
 5, 115, :_reduce_132,
 4, 115, :_reduce_133,
 1, 116, :_reduce_none,
 3, 116, :_reduce_135,
 3, 85, :_reduce_136,
 1, 118, :_reduce_none,
 4, 118, :_reduce_138,
 1, 120, :_reduce_none,
 3, 120, :_reduce_140,
 3, 119, :_reduce_141,
 1, 117, :_reduce_none,
 1, 117, :_reduce_none,
 1, 117, :_reduce_none,
 1, 117, :_reduce_none,
 1, 117, :_reduce_none,
 1, 117, :_reduce_none,
 1, 117, :_reduce_none,
 1, 117, :_reduce_149,
 1, 121, :_reduce_150,
 3, 121, :_reduce_151,
 2, 70, :_reduce_152,
 6, 72, :_reduce_153,
 5, 72, :_reduce_154,
 6, 73, :_reduce_155,
 5, 73, :_reduce_156,
 6, 74, :_reduce_157,
 5, 74, :_reduce_158,
 1, 92, :_reduce_none,
 1, 87, :_reduce_none,
 1, 87, :_reduce_none,
 1, 124, :_reduce_none,
 3, 124, :_reduce_163,
 1, 126, :_reduce_none,
 1, 126, :_reduce_none,
 1, 126, :_reduce_none,
 1, 126, :_reduce_none,
 0, 62, :_reduce_168,
 0, 127, :_reduce_169,
 1, 122, :_reduce_none,
 3, 122, :_reduce_171,
 3, 122, :_reduce_172,
 1, 128, :_reduce_none,
 3, 128, :_reduce_174,
 3, 129, :_reduce_175,
 1, 129, :_reduce_176,
 3, 129, :_reduce_177,
 1, 129, :_reduce_178,
 1, 125, :_reduce_none,
 2, 125, :_reduce_180,
 1, 123, :_reduce_none,
 2, 123, :_reduce_182,
 1, 130, :_reduce_none,
 1, 130, :_reduce_none,
 1, 81, :_reduce_185,
 3, 105, :_reduce_186,
 2, 105, :_reduce_187,
 1, 112, :_reduce_none,
 1, 112, :_reduce_none,
 0, 91, :_reduce_none,
 1, 91, :_reduce_191 ]

racc_reduce_n = 192

racc_shift_n = 315

racc_action_table = [
    75,    57,    61,   259,   179,    38,    40,    35,    44,   196,
    54,   285,    45,   238,     3,     6,   187,   296,   239,  -145,
    74,    75,    57,    61,   284,    47,    38,    40,   194,   195,
   132,    49,    38,    40,   112,    60,    64,   194,   195,    70,
    41,    74,   149,    43,    55,    77,   178,   118,    66,    48,
   141,    87,    49,    75,    57,    61,    60,    64,    49,   109,
    70,    41,   252,   123,    43,    55,    77,    41,   105,    66,
    43,  -146,    87,    74,    75,    57,    61,   202,   151,   152,
   153,   139,   140,   142,    49,   280,   128,   133,    60,    64,
   201,   238,    70,   279,    74,   149,   239,    55,    77,   270,
   118,    66,   179,   141,    87,    49,    75,    57,    61,    60,
    64,    49,   193,    70,    35,   132,   123,   174,    55,    77,
   192,     3,    66,    35,   257,    87,    74,    75,    57,    61,
     3,   151,   152,   153,   139,   140,   142,    49,   116,    35,
   155,    60,    64,   153,   139,    70,     3,    74,   149,  -147,
    55,    77,  -143,   118,    66,   156,   141,    87,    49,    75,
    57,    61,    60,    64,    49,   157,    70,   153,   139,   123,
   134,    55,    77,    57,    61,    66,    33,    34,    87,    74,
    75,    57,    61,   132,   151,   152,   153,   139,   140,   142,
    49,  -145,   203,   273,    60,    64,   187,   188,    70,  -142,
    74,   149,  -144,    55,    77,    45,   118,    66,    44,   141,
    87,    49,    75,    57,    61,    60,    64,    49,  -142,    70,
    57,    61,   123,  -159,    55,    77,   128,   177,    66,   181,
  -143,    87,    74,    75,    57,    61,   116,   151,   152,   153,
   139,   140,   142,    49,   276,   198,   247,    60,    64,   194,
   195,    70,  -145,    74,   186,   183,    55,    77,   187,   188,
    66,   216,  -142,    87,    49,   187,   188,   281,    60,    64,
   150,   282,    70,   151,   152,   153,   139,    55,    77,   145,
   149,    66,   283,   190,    87,   105,   288,   101,   141,   143,
   146,   148,   190,   116,    75,    57,    61,   151,   152,   153,
   139,   140,   142,   151,   152,   153,   139,   140,   142,    98,
    97,  -142,   144,   147,    74,  -144,   151,   152,   153,   139,
   140,   142,  -143,  -147,  -144,    49,    75,    57,    61,    60,
    64,   245,   243,    70,   151,   152,   153,   139,    55,    77,
   276,   299,    66,   300,  -144,    87,    74,    75,    57,    61,
   179,  -145,  -148,    73,   190,  -143,   308,    49,  -191,    37,
  -147,    60,    64,  -146,   290,    70,   nil,    74,   nil,   nil,
    55,    77,   nil,   nil,    66,   nil,   nil,    87,    49,    75,
    57,    61,    60,    64,   nil,   nil,    70,   nil,   nil,   nil,
   nil,    55,    77,   nil,   nil,    66,   nil,   nil,    87,    74,
    75,    57,    61,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
    49,   nil,   nil,   nil,    60,    64,   nil,   nil,    70,   nil,
    74,   nil,   nil,    55,    77,   nil,   nil,    66,   nil,   nil,
    87,    49,    75,    57,    61,    60,    64,   nil,   nil,    70,
   nil,   nil,   nil,   nil,    55,    77,   nil,   nil,    66,   nil,
   nil,    87,    74,    75,    57,    61,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,    49,   nil,   nil,   nil,    60,    64,   nil,
   nil,    70,   nil,    74,   nil,   nil,    55,    77,   nil,   nil,
    66,   nil,   nil,    87,    49,    75,    57,    61,    60,    64,
   nil,   nil,    70,   nil,   nil,   nil,   nil,    55,    77,   nil,
   nil,    66,   nil,   nil,    87,    74,    75,    57,    61,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,    49,    75,    57,    61,
    60,    64,   nil,   nil,    70,   nil,    74,   nil,   nil,    55,
    77,   nil,   nil,    66,   nil,   nil,    87,    49,    75,    57,
    61,    60,    64,   nil,   nil,    70,   nil,   nil,    49,   nil,
    55,    77,    60,    64,    66,   nil,    70,    87,    74,   nil,
   nil,    55,   nil,   nil,   nil,    66,   nil,   nil,   nil,    49,
    54,    57,    61,    60,    64,   nil,   nil,    70,   nil,   nil,
   nil,   nil,    55,    77,   nil,   nil,    66,   nil,   nil,    87,
    51,    75,    57,    61,   nil,   nil,   nil,    75,    57,    61,
   nil,    49,   nil,   nil,   nil,    60,    64,   nil,   nil,    70,
   nil,   nil,   nil,    52,    55,   nil,   nil,   nil,    66,    75,
    57,    61,    49,   nil,   nil,   nil,    60,   168,    49,   nil,
    70,   nil,    60,   209,   nil,   161,    70,   nil,   nil,    66,
   nil,   161,   nil,   nil,   nil,    66,    75,    57,    61,   137,
    49,   nil,   nil,   nil,    60,    64,   nil,   nil,    70,   nil,
    75,    57,    61,    55,   nil,   nil,   nil,    66,   nil,   nil,
    75,    57,    61,   nil,   nil,   nil,   nil,    49,   nil,   nil,
   nil,    60,    64,   nil,   nil,    70,    75,    57,    61,   nil,
    55,    49,   nil,   nil,    66,    60,    64,   nil,   nil,    70,
   nil,    49,   nil,   nil,    55,    60,    64,   nil,    66,    70,
    75,    57,    61,   nil,    55,   nil,   nil,    49,    66,   nil,
   nil,    60,    64,   nil,   nil,    70,    75,    57,    61,   nil,
    55,   nil,   nil,   nil,    66,   nil,    75,    57,    61,   nil,
   nil,    49,    75,    57,    61,    60,    64,   nil,   nil,    70,
   nil,   nil,   nil,   nil,    55,   nil,   nil,    49,    66,    57,
    61,    60,    64,   nil,   nil,    70,   nil,    49,   nil,   nil,
    55,    60,    64,    49,    66,    70,   nil,    60,    64,   nil,
    55,    70,    57,    61,    66,   nil,    55,   nil,   nil,    49,
    66,   nil,   nil,    60,   209,   nil,   nil,    70,    57,    61,
    57,    61,   161,   nil,   nil,   nil,    66,   nil,   nil,   nil,
   nil,   nil,    49,   nil,    57,    61,    60,   209,   269,   nil,
    70,   nil,   nil,   nil,   nil,   161,   nil,   nil,    49,    66,
    49,   nil,    60,    64,    60,   209,    70,   nil,    70,   nil,
    52,    55,   nil,   161,    49,    66,   nil,    66,    60,   209,
    57,    61,    70,   nil,   nil,   nil,   nil,   161,   nil,   nil,
   nil,    66,   nil,   nil,    57,    61,   nil,   nil,   nil,   nil,
   130,   nil,   nil,   nil,    57,    61,   nil,   nil,   278,   nil,
    49,   nil,   nil,   nil,    60,    64,   nil,   nil,    70,    57,
    61,   nil,    52,    55,    49,    57,    61,    66,    60,    64,
   nil,   nil,    70,   nil,    49,   nil,    52,    55,    60,   209,
   nil,    66,    70,    57,    61,   nil,   210,   161,   nil,    49,
   nil,    66,   nil,    60,   209,    49,   nil,    70,   nil,    60,
   209,   nil,   161,    70,    57,    61,    66,   nil,   161,   nil,
   nil,   nil,    66,    49,   nil,   nil,   nil,    60,   209,   nil,
   nil,    70,   nil,   nil,   205,   nil,   161,   nil,   nil,   nil,
    66,   nil,   nil,   nil,    49,   nil,   nil,   nil,    60,    64,
   nil,   nil,    70,   145,   149,   nil,    52,    55,   nil,   nil,
   nil,    66,   141,   143,   146,   148,   145,   149,   nil,   nil,
   nil,   nil,   145,   149,   215,   141,   143,   146,   148,   nil,
   nil,   141,   143,   146,   148,   nil,   144,   147,   nil,   nil,
   151,   152,   153,   139,   140,   142,   nil,   nil,   nil,   144,
   147,   nil,   nil,   151,   152,   153,   139,   140,   142,   151,
   152,   153,   139,   140,   142,   145,   149,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   141,   143,   146,   148,   145,   149,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   141,   143,   146,
   148,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   147,
   287,   nil,   151,   152,   153,   139,   140,   142,   nil,   nil,
   nil,   144,   147,   nil,   nil,   151,   152,   153,   139,   140,
   142,    16,   292,    23,    26,   nil,     1,     4,   nil,     9,
   nil,    13,   nil,    20,   nil,    27,   nil,   nil,     3,     6,
   nil,   293,   nil,    16,   nil,    23,    26,   nil,     1,     4,
   nil,     9,   nil,    13,   nil,    20,   nil,    27,   nil,   nil,
     3,     6,    16,   274,    23,    26,   nil,     1,     4,   nil,
     9,   nil,    13,   nil,    20,   nil,    27,   nil,   nil,     3,
     6,   nil,   305,   nil,    16,   nil,    23,    26,   nil,     1,
     4,   nil,     9,   nil,    13,   nil,    20,   nil,    27,   nil,
   nil,     3,     6,    16,   229,    23,    26,   nil,     1,     4,
   nil,     9,   nil,    13,   nil,    20,   nil,    27,   nil,   nil,
     3,     6,   nil,   310,   nil,    16,   nil,    23,    26,   nil,
     1,     4,   nil,     9,   nil,    13,   nil,    20,   nil,    27,
   nil,   nil,     3,     6,    16,   312,    23,    26,   nil,     1,
     4,   nil,     9,   nil,    13,   nil,    20,   nil,    27,   nil,
   nil,     3,     6,   nil,   255,   nil,    16,   nil,    23,    26,
   nil,     1,     4,   nil,     9,   nil,    13,   nil,    20,   nil,
    27,   nil,   nil,     3,     6,    16,   313,    23,    26,   nil,
     1,     4,   nil,     9,   nil,    13,   nil,    20,   nil,    27,
   nil,   nil,     3,     6,   nil,   249,   nil,    16,   nil,    23,
    26,   nil,     1,     4,   nil,     9,   nil,    13,   nil,    20,
   nil,    27,   nil,   nil,     3,     6,    16,   314,    23,    26,
   nil,     1,     4,   nil,     9,   nil,    13,   nil,    20,   nil,
    27,   nil,   nil,     3,     6,   nil,   nil,   nil,    16,   nil,
    23,    26,   nil,     1,     4,   nil,     9,   nil,    13,   nil,
    20,   nil,    27,   nil,   nil,     3,     6,    16,   nil,    23,
    26,   nil,     1,     4,   nil,     9,   nil,    13,   nil,    20,
   nil,    27,   nil,   nil,     3,     6,    16,   nil,    23,    26,
   nil,     1,     4,   nil,     9,   nil,    13,   nil,    20,   nil,
    27,   nil,   nil,     3,     6 ]

racc_action_check = [
    34,    34,    34,   191,   105,   112,   112,    17,    11,   125,
    64,   241,    11,   285,    17,    17,   272,   272,   285,   262,
    34,   153,   153,   153,   241,    11,     9,     9,   191,   191,
    64,    34,   109,   109,    39,    34,    34,   125,   125,    34,
   112,   153,   221,   112,    34,    34,   105,    48,    34,    11,
   221,    34,   153,   139,   139,   139,   153,   153,    48,    39,
   153,     9,   180,    48,     9,   153,   153,   109,   181,   153,
   109,    69,   153,   139,   140,   140,   140,   129,   221,   221,
   221,   221,   221,   221,   139,   235,   204,    68,   139,   139,
   129,   157,   139,   235,   140,   226,   157,   139,   139,   204,
   197,   139,   168,   226,   139,   140,   151,   151,   151,   140,
   140,   197,   120,   140,   101,   168,   197,   101,   140,   140,
   120,   101,   140,    26,   189,   140,   151,   141,   141,   141,
    26,   226,   226,   226,   226,   226,   226,   151,   190,     4,
    93,   151,   151,   231,   231,   151,     4,   141,   223,    67,
   151,   151,    65,   118,   151,    94,   223,   151,   141,    77,
    77,    77,   141,   141,   118,    96,   141,   230,   230,   118,
    73,   141,   141,    23,    23,   141,     1,     1,   141,    77,
   142,   142,   142,   209,   223,   223,   223,   223,   223,   223,
    77,    62,   131,   211,    77,    77,   131,   131,    77,    78,
   142,   224,   173,    77,    77,    90,    47,    77,    59,   224,
    77,   142,    16,    16,    16,   142,   142,    47,    58,   142,
   156,   156,    47,    55,   142,   142,    50,   102,   142,   106,
   167,   142,    16,    74,    74,    74,    45,   224,   224,   224,
   224,   224,   224,    16,   229,   127,   166,    16,    16,   127,
   127,    16,   165,    74,   113,   110,    16,    16,   113,   113,
    16,   136,   163,    16,    74,   136,   136,   238,    74,    74,
    84,   239,    74,   220,   220,   220,   220,    74,    74,    84,
    84,    74,   240,   162,    74,    37,   244,    36,    84,    84,
    84,    84,   115,   247,    87,    87,    87,   219,   219,   219,
   219,   219,   219,   227,   227,   227,   227,   227,   227,    30,
    27,   261,    84,    84,    87,    72,    84,    84,    84,    84,
    84,    84,   263,   264,   266,    87,   149,   149,   149,    87,
    87,   160,   158,    87,   218,   218,   218,   218,    87,    87,
   274,   276,    87,   279,    89,    87,   149,   148,   148,   148,
   116,    79,    80,    15,   291,    81,   295,   149,   296,     7,
    83,   149,   149,    85,   246,   149,   nil,   148,   nil,   nil,
   149,   149,   nil,   nil,   149,   nil,   nil,   149,   148,   143,
   143,   143,   148,   148,   nil,   nil,   148,   nil,   nil,   nil,
   nil,   148,   148,   nil,   nil,   148,   nil,   nil,   148,   143,
   144,   144,   144,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   143,   nil,   nil,   nil,   143,   143,   nil,   nil,   143,   nil,
   144,   nil,   nil,   143,   143,   nil,   nil,   143,   nil,   nil,
   143,   144,    33,    33,    33,   144,   144,   nil,   nil,   144,
   nil,   nil,   nil,   nil,   144,   144,   nil,   nil,   144,   nil,
   nil,   144,    33,   152,   152,   152,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,    33,   nil,   nil,   nil,    33,    33,   nil,
   nil,    33,   nil,   152,   nil,   nil,    33,    33,   nil,   nil,
    33,   nil,   nil,    33,   152,   147,   147,   147,   152,   152,
   nil,   nil,   152,   nil,   nil,   nil,   nil,   152,   152,   nil,
   nil,   152,   nil,   nil,   152,   147,   146,   146,   146,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   147,    44,    44,    44,
   147,   147,   nil,   nil,   147,   nil,   146,   nil,   nil,   147,
   147,   nil,   nil,   147,   nil,   nil,   147,   146,   145,   145,
   145,   146,   146,   nil,   nil,   146,   nil,   nil,    44,   nil,
   146,   146,    44,    44,   146,   nil,    44,   146,   145,   nil,
   nil,    44,   nil,   nil,   nil,    44,   nil,   nil,   nil,   145,
    13,    13,    13,   145,   145,   nil,   nil,   145,   nil,   nil,
   nil,   nil,   145,   145,   nil,   nil,   145,   nil,   nil,   145,
    13,    98,    98,    98,   nil,   nil,   nil,   245,   245,   245,
   nil,    13,   nil,   nil,   nil,    13,    13,   nil,   nil,    13,
   nil,   nil,   nil,    13,    13,   nil,   nil,   nil,    13,   282,
   282,   282,    98,   nil,   nil,   nil,    98,    98,   245,   nil,
    98,   nil,   245,   245,   nil,    98,   245,   nil,   nil,    98,
   nil,   245,   nil,   nil,   nil,   245,    75,    75,    75,    75,
   282,   nil,   nil,   nil,   282,   282,   nil,   nil,   282,   nil,
    54,    54,    54,   282,   nil,   nil,   nil,   282,   nil,   nil,
   273,   273,   273,   nil,   nil,   nil,   nil,    75,   nil,   nil,
   nil,    75,    75,   nil,   nil,    75,   178,   178,   178,   nil,
    75,    54,   nil,   nil,    75,    54,    54,   nil,   nil,    54,
   nil,   273,   nil,   nil,    54,   273,   273,   nil,    54,   273,
    20,    20,    20,   nil,   273,   nil,   nil,   178,   273,   nil,
   nil,   178,   178,   nil,   nil,   178,   179,   179,   179,   nil,
   178,   nil,   nil,   nil,   178,   nil,   281,   281,   281,   nil,
   nil,    20,   185,   185,   185,    20,    20,   nil,   nil,    20,
   nil,   nil,   nil,   nil,    20,   nil,   nil,   179,    20,   193,
   193,   179,   179,   nil,   nil,   179,   nil,   281,   nil,   nil,
   179,   281,   281,   185,   179,   281,   nil,   185,   185,   nil,
   281,   185,   192,   192,   281,   nil,   185,   nil,   nil,   193,
   185,   nil,   nil,   193,   193,   nil,   nil,   193,   202,   202,
   210,   210,   193,   nil,   nil,   nil,   193,   nil,   nil,   nil,
   nil,   nil,   192,   nil,   280,   280,   192,   192,   202,   nil,
   192,   nil,   nil,   nil,   nil,   192,   nil,   nil,   202,   192,
   210,   nil,   202,   202,   210,   210,   202,   nil,   210,   nil,
   202,   202,   nil,   210,   280,   202,   nil,   210,   280,   280,
    51,    51,   280,   nil,   nil,   nil,   nil,   280,   nil,   nil,
   nil,   280,   nil,   nil,   128,   128,   nil,   nil,   nil,   nil,
    51,   nil,   nil,   nil,   233,   233,   nil,   nil,   233,   nil,
    51,   nil,   nil,   nil,    51,    51,   nil,   nil,    51,   294,
   294,   nil,    51,    51,   128,   155,   155,    51,   128,   128,
   nil,   nil,   128,   nil,   233,   nil,   128,   128,   233,   233,
   nil,   128,   233,   133,   133,   nil,   133,   233,   nil,   294,
   nil,   233,   nil,   294,   294,   155,   nil,   294,   nil,   155,
   155,   nil,   294,   155,   132,   132,   294,   nil,   155,   nil,
   nil,   nil,   155,   133,   nil,   nil,   nil,   133,   133,   nil,
   nil,   133,   nil,   nil,   132,   nil,   133,   nil,   nil,   nil,
   133,   nil,   nil,   nil,   132,   nil,   nil,   nil,   132,   132,
   nil,   nil,   132,   100,   100,   nil,   132,   132,   nil,   nil,
   nil,   132,   100,   100,   100,   100,   135,   135,   nil,   nil,
   nil,   nil,   225,   225,   135,   135,   135,   135,   135,   nil,
   nil,   225,   225,   225,   225,   nil,   100,   100,   nil,   nil,
   100,   100,   100,   100,   100,   100,   nil,   nil,   nil,   135,
   135,   nil,   nil,   135,   135,   135,   135,   135,   135,   225,
   225,   225,   225,   225,   225,   222,   222,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   222,   222,   222,   222,    99,    99,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,    99,    99,    99,
    99,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   222,
   243,   nil,   222,   222,   222,   222,   222,   222,   nil,   nil,
   nil,    99,    99,   nil,   nil,    99,    99,    99,    99,    99,
    99,   243,   248,   243,   243,   nil,   243,   243,   nil,   243,
   nil,   243,   nil,   243,   nil,   243,   nil,   nil,   243,   243,
   nil,   254,   nil,   248,   nil,   248,   248,   nil,   248,   248,
   nil,   248,   nil,   248,   nil,   248,   nil,   248,   nil,   nil,
   248,   248,   254,   228,   254,   254,   nil,   254,   254,   nil,
   254,   nil,   254,   nil,   254,   nil,   254,   nil,   nil,   254,
   254,   nil,   286,   nil,   228,   nil,   228,   228,   nil,   228,
   228,   nil,   228,   nil,   228,   nil,   228,   nil,   228,   nil,
   nil,   228,   228,   286,   150,   286,   286,   nil,   286,   286,
   nil,   286,   nil,   286,   nil,   286,   nil,   286,   nil,   nil,
   286,   286,   nil,   299,   nil,   150,   nil,   150,   150,   nil,
   150,   150,   nil,   150,   nil,   150,   nil,   150,   nil,   150,
   nil,   nil,   150,   150,   299,   300,   299,   299,   nil,   299,
   299,   nil,   299,   nil,   299,   nil,   299,   nil,   299,   nil,
   nil,   299,   299,   nil,   183,   nil,   300,   nil,   300,   300,
   nil,   300,   300,   nil,   300,   nil,   300,   nil,   300,   nil,
   300,   nil,   nil,   300,   300,   183,   309,   183,   183,   nil,
   183,   183,   nil,   183,   nil,   183,   nil,   183,   nil,   183,
   nil,   nil,   183,   183,   nil,   177,   nil,   309,   nil,   309,
   309,   nil,   309,   309,   nil,   309,   nil,   309,   nil,   309,
   nil,   309,   nil,   nil,   309,   309,   177,   311,   177,   177,
   nil,   177,   177,   nil,   177,   nil,   177,   nil,   177,   nil,
   177,   nil,   nil,   177,   177,   nil,   nil,   nil,   311,   nil,
   311,   311,   nil,   311,   311,   nil,   311,   nil,   311,   nil,
   311,   nil,   311,   nil,   nil,   311,   311,    19,   nil,    19,
    19,   nil,    19,    19,   nil,    19,   nil,    19,   nil,    19,
   nil,    19,   nil,   nil,    19,    19,     0,   nil,     0,     0,
   nil,     0,     0,   nil,     0,   nil,     0,   nil,     0,   nil,
     0,   nil,   nil,     0,     0 ]

racc_action_pointer = [
  1328,   163,   nil,   nil,   101,   nil,   nil,   353,   nil,    23,
   nil,     6,   nil,   568,   nil,   353,   210,   -31,   nil,  1309,
   708,   nil,   nil,   170,   nil,   nil,    85,   268,   nil,   nil,
   303,   nil,   nil,   430,    -2,   nil,   252,   247,   nil,    24,
   nil,   nil,   nil,   nil,   515,   198,   nil,   184,    25,   nil,
   216,   847,   nil,   nil,   658,   221,   nil,   nil,   197,   206,
   nil,   nil,   170,   nil,     8,   131,   nil,   128,    66,    50,
   nil,   nil,   294,   170,   231,   644,   nil,   157,   178,   330,
   331,   334,   nil,   339,   264,   342,   nil,   292,   nil,   323,
   199,   nil,   nil,   134,   145,   nil,   143,   nil,   589,  1033,
   958,    76,   221,   nil,   nil,    -5,   219,   nil,   nil,    29,
   249,   nil,     2,   249,   nil,   282,   341,   nil,   131,   nil,
    96,   nil,   nil,   nil,   nil,   -11,   nil,   201,   861,    67,
   nil,   187,   931,   910,   nil,   971,   256,   nil,   nil,    51,
    72,   125,   178,   377,   398,   536,   504,   483,   345,   324,
  1167,   104,   451,    19,   nil,   892,   217,    58,   326,   nil,
   292,   nil,   273,   241,   nil,   231,   228,   209,    93,   nil,
   nil,   nil,   nil,   181,   nil,   nil,   nil,  1268,   684,   724,
    55,    30,   nil,  1227,   nil,   740,   nil,   nil,   nil,   117,
   100,   -20,   779,   756,   nil,   nil,   nil,    78,   nil,   nil,
   nil,   nil,   795,   nil,    76,   nil,   nil,   nil,   nil,   161,
   797,   184,   nil,   nil,   nil,   nil,   nil,   nil,   282,   245,
   221,    26,  1020,   132,   185,   977,    79,   251,  1126,   215,
   113,    89,   nil,   871,   nil,    75,   nil,   nil,   254,   258,
   259,     1,   nil,  1063,   279,   595,   357,   255,  1085,   nil,
   nil,   nil,   nil,   nil,  1104,   nil,   nil,   nil,   nil,   nil,
   nil,   290,    -2,   301,   302,   nil,   303,   nil,   nil,   nil,
   nil,   nil,     7,   668,   311,   nil,   335,   nil,   nil,   337,
   811,   734,   617,   nil,   nil,   -20,  1145,   nil,   nil,   nil,
   nil,   344,   nil,   nil,   886,   349,   351,   nil,   nil,  1186,
  1208,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,  1249,
   nil,  1290,   nil,   nil,   nil ]

racc_action_default = [
  -168,  -192,    -7,  -161,  -192,    -8,  -159,  -192,    -9,  -192,
   -10,  -192,   -11,  -160,   -12,  -192,  -192,  -192,   -13,    -1,
  -192,   -14,    -2,  -192,   -15,    -3,  -192,   -39,   -16,    -5,
  -192,   -17,    -6,  -192,  -192,  -160,  -168,   -78,  -166,  -168,
  -165,  -164,  -162,  -167,  -192,   -71,   -41,  -168,  -168,  -185,
   -21,  -192,   -33,   -22,  -192,   -62,   -23,  -101,   -26,  -192,
  -103,  -102,   -27,  -148,   -61,   -28,   -60,   -29,  -192,   -30,
  -149,   -31,   -32,  -192,  -192,  -192,   -96,  -192,   -90,   -94,
   -98,   -91,   -95,   -92,  -192,   -97,   -93,  -192,  -111,   -89,
  -192,   -38,    -4,  -192,  -152,  -150,  -168,   -40,   -71,   -69,
   -70,  -192,  -192,  -181,   -79,  -192,  -190,   -76,   -77,  -192,
  -192,  -179,  -192,  -192,   -81,  -190,  -192,   -72,  -168,   -47,
  -192,   -54,   -53,   -61,   -44,  -192,   -45,  -192,  -192,  -192,
   -20,  -192,  -192,  -192,   315,  -192,  -192,  -187,  -125,  -192,
  -192,  -192,  -192,  -192,  -192,  -192,  -192,  -192,  -192,  -192,
  -192,  -192,  -192,  -192,  -118,  -192,  -192,  -169,  -192,  -170,
   -58,   -62,  -190,   -64,   -56,   -67,  -192,   -65,   -61,  -147,
   -68,  -146,   -66,   -63,  -184,  -182,  -183,  -192,  -192,  -192,
  -192,  -191,  -180,  -192,  -163,  -192,  -105,  -188,  -189,  -192,
  -191,  -192,  -192,  -192,   -50,   -49,   -43,  -192,   -42,   -24,
   -25,   -18,  -192,  -104,  -192,  -100,  -142,  -145,  -143,   -61,
  -192,  -192,  -136,  -144,  -137,  -128,  -186,  -114,  -116,  -120,
  -117,  -122,  -127,  -124,  -121,  -126,  -123,  -119,  -192,  -108,
  -112,  -113,  -115,  -192,  -130,  -192,  -134,  -151,  -178,  -176,
  -192,  -192,  -173,  -192,  -192,   -59,  -192,   -71,  -192,  -156,
   -75,   -74,   -37,   -80,  -192,  -158,   -82,   -36,   -73,   -48,
   -51,   -84,   -88,   -85,   -86,   -87,   -83,   -52,   -46,   -19,
   -99,  -139,  -190,  -192,  -108,  -107,  -192,  -131,  -129,  -192,
  -192,  -192,  -192,  -171,  -172,  -192,  -192,  -154,   -34,   -57,
   -35,  -190,  -155,  -157,  -192,  -192,  -189,  -141,  -106,  -192,
  -192,  -135,  -177,  -175,  -174,  -153,   -55,  -140,  -138,  -192,
  -110,  -192,  -133,  -109,  -132 ]

racc_goto_table = [
     7,    92,    65,    11,   115,    93,   214,    19,   107,   170,
   104,   211,   164,    56,   242,    71,    50,   234,   199,     7,
    90,    36,    11,   180,    42,   125,   127,    22,   275,   114,
    15,   113,   189,   236,   260,   267,   294,   268,   233,   114,
    65,   131,    46,    96,   106,   212,   244,   272,    94,   158,
   102,    56,    39,    71,   129,   110,   160,   162,   240,   241,
   114,    91,   136,   103,   175,   nil,   111,   nil,   nil,   nil,
   nil,   nil,   nil,   298,   nil,   nil,   nil,   nil,   nil,   246,
   nil,   nil,   nil,   271,   nil,   nil,   nil,   167,   211,   nil,
   nil,   nil,   199,   nil,   nil,   277,   191,   nil,   nil,   nil,
   172,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   236,   nil,   nil,   nil,   nil,   nil,    65,   176,   nil,
   nil,    65,   208,   159,   182,   nil,   nil,   184,   200,   nil,
    71,   nil,    56,   nil,    71,   204,   nil,   nil,   nil,   nil,
    62,   nil,   304,   nil,   208,   nil,   nil,   nil,   nil,   nil,
     7,   nil,   107,    11,   253,    63,   170,   228,   301,   289,
   nil,   258,   nil,   250,   251,   nil,   nil,   307,   nil,   nil,
   256,   nil,   211,   nil,   122,   122,   nil,     7,    62,   nil,
    11,   263,   263,     7,   248,   nil,    11,   nil,   nil,   295,
   254,    65,   nil,    63,   265,   265,   nil,   nil,   nil,   208,
   nil,   nil,   200,    69,    71,   nil,   291,   nil,   306,   nil,
    92,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   208,   nil,   nil,   165,   nil,   nil,     7,   nil,
    92,    11,   nil,   nil,   167,   nil,    92,   nil,   nil,   nil,
    63,    69,   nil,     7,   nil,   122,    11,   172,     7,   nil,
   286,    11,   nil,   nil,     7,    62,   nil,    11,   297,    62,
   207,   nil,   nil,   nil,   nil,   nil,   302,   303,    92,   208,
    63,   nil,   nil,   nil,    63,    63,   nil,   nil,   nil,   nil,
   nil,   nil,   207,   208,   nil,   nil,     7,   nil,   171,    11,
   nil,    92,   nil,    92,   nil,   nil,   nil,    63,   nil,     7,
     7,   nil,    11,    11,   nil,   nil,   309,   311,   nil,     7,
   nil,     7,    11,    58,    11,   nil,   nil,   nil,    69,   262,
   262,   nil,    69,   171,   122,   nil,    67,   nil,   nil,    62,
   nil,   nil,    72,   nil,    63,    63,   nil,   207,   nil,   nil,
   nil,   nil,    95,   nil,    63,   171,   nil,   121,   121,   nil,
   nil,    58,    63,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   207,   nil,   nil,   nil,    67,   nil,   nil,   nil,   nil,   nil,
    72,   nil,   165,   nil,   nil,    63,   nil,   nil,   nil,   nil,
   nil,   nil,   171,   171,   nil,   nil,   nil,    63,   nil,   nil,
   nil,   nil,    69,   nil,   nil,   nil,   nil,   nil,   163,   nil,
   171,   nil,   nil,   nil,   nil,   nil,   nil,   207,   nil,   nil,
   nil,   169,   nil,   nil,   nil,   nil,   nil,   173,   121,   nil,
   nil,   207,    63,   171,   nil,   nil,   nil,   nil,    58,   nil,
   nil,   nil,    58,   206,   nil,   171,    63,   nil,   nil,   nil,
   nil,    67,    84,   nil,   nil,    67,   169,    72,   nil,   nil,
   nil,    72,   213,   nil,   nil,   206,   nil,   nil,   nil,    99,
   100,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   169,   nil,
   171,   nil,   nil,   nil,   213,   237,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   171,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   261,   261,   nil,   nil,   nil,   121,   nil,   nil,
   135,   nil,    58,   138,   nil,   264,   264,   nil,   nil,   nil,
   206,   266,   266,   154,   nil,    67,   nil,   nil,   nil,   nil,
   nil,    72,   nil,   169,   nil,   nil,   nil,   nil,   nil,   213,
   nil,   nil,   nil,   206,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   163,   169,   nil,   nil,   nil,
   nil,   nil,   213,   nil,   nil,   nil,   nil,   nil,   169,   nil,
   nil,   nil,   nil,   nil,   173,   217,   218,   219,   220,   221,
   222,   223,   224,   225,   226,   227,   nil,   230,   231,   232,
   206,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   169,   206,   nil,   nil,   nil,   nil,   213,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   169,   nil,   nil,
   nil,   nil,   nil,   213 ]

racc_goto_check = [
    20,     4,    23,    33,    31,    49,    60,     2,    48,    46,
    51,    58,    43,    20,    70,    26,    18,    56,    19,    20,
    33,    28,    33,    32,    67,    37,    37,     3,    54,    49,
     1,    52,    32,    58,    42,    42,    53,    38,    55,    49,
    23,    52,    36,    28,    34,    59,    30,    61,    62,    63,
    64,    20,    65,    26,    18,    66,    29,    31,    68,    69,
    49,     5,    52,     3,    71,   nil,     3,   nil,   nil,   nil,
   nil,   nil,   nil,    54,   nil,   nil,   nil,   nil,   nil,    32,
   nil,   nil,   nil,    60,   nil,   nil,   nil,    23,    58,   nil,
   nil,   nil,    19,   nil,   nil,    56,    37,   nil,   nil,   nil,
    26,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,    58,   nil,   nil,   nil,   nil,   nil,    23,    28,   nil,
   nil,    23,    23,     3,    67,   nil,   nil,    67,    20,   nil,
    26,   nil,    20,   nil,    26,    18,   nil,   nil,   nil,   nil,
    22,   nil,    70,   nil,    23,   nil,   nil,   nil,   nil,   nil,
    20,   nil,    48,    33,    51,    45,    46,     2,    58,    43,
   nil,    48,   nil,    49,    49,   nil,   nil,    60,   nil,   nil,
    49,   nil,    58,   nil,    22,    22,   nil,    20,    22,   nil,
    33,    23,    23,    20,     2,   nil,    33,   nil,   nil,    32,
     2,    23,   nil,    45,    26,    26,   nil,   nil,   nil,    23,
   nil,   nil,    20,    25,    26,   nil,    31,   nil,    32,   nil,
     4,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,    23,   nil,   nil,    22,   nil,   nil,    20,   nil,
     4,    33,   nil,   nil,    23,   nil,     4,   nil,   nil,   nil,
    45,    25,   nil,    20,   nil,    22,    33,    26,    20,   nil,
     2,    33,   nil,   nil,    20,    22,   nil,    33,    49,    22,
    22,   nil,   nil,   nil,   nil,   nil,    49,    49,     4,    23,
    45,   nil,   nil,   nil,    45,    45,   nil,   nil,   nil,   nil,
   nil,   nil,    22,    23,   nil,   nil,    20,   nil,    25,    33,
   nil,     4,   nil,     4,   nil,   nil,   nil,    45,   nil,    20,
    20,   nil,    33,    33,   nil,   nil,     2,     2,   nil,    20,
   nil,    20,    33,    21,    33,   nil,   nil,   nil,    25,    22,
    22,   nil,    25,    25,    22,   nil,    24,   nil,   nil,    22,
   nil,   nil,    27,   nil,    45,    45,   nil,    22,   nil,   nil,
   nil,   nil,    27,   nil,    45,    25,   nil,    21,    21,   nil,
   nil,    21,    45,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
    22,   nil,   nil,   nil,    24,   nil,   nil,   nil,   nil,   nil,
    27,   nil,    22,   nil,   nil,    45,   nil,   nil,   nil,   nil,
   nil,   nil,    25,    25,   nil,   nil,   nil,    45,   nil,   nil,
   nil,   nil,    25,   nil,   nil,   nil,   nil,   nil,    21,   nil,
    25,   nil,   nil,   nil,   nil,   nil,   nil,    22,   nil,   nil,
   nil,    24,   nil,   nil,   nil,   nil,   nil,    27,    21,   nil,
   nil,    22,    45,    25,   nil,   nil,   nil,   nil,    21,   nil,
   nil,   nil,    21,    21,   nil,    25,    45,   nil,   nil,   nil,
   nil,    24,    47,   nil,   nil,    24,    24,    27,   nil,   nil,
   nil,    27,    27,   nil,   nil,    21,   nil,   nil,   nil,    47,
    47,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    24,   nil,
    25,   nil,   nil,   nil,    27,    27,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,    25,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,    21,    21,   nil,   nil,   nil,    21,   nil,   nil,
    47,   nil,    21,    47,   nil,    24,    24,   nil,   nil,   nil,
    21,    27,    27,    47,   nil,    24,   nil,   nil,   nil,   nil,
   nil,    27,   nil,    24,   nil,   nil,   nil,   nil,   nil,    27,
   nil,   nil,   nil,    21,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,    21,    24,   nil,   nil,   nil,
   nil,   nil,    27,   nil,   nil,   nil,   nil,   nil,    24,   nil,
   nil,   nil,   nil,   nil,    27,    47,    47,    47,    47,    47,
    47,    47,    47,    47,    47,    47,   nil,    47,    47,    47,
    21,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,    24,    21,   nil,   nil,   nil,   nil,    27,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,    24,   nil,   nil,
   nil,   nil,   nil,    27 ]

racc_goto_pointer = [
   nil,    30,     7,    27,   -18,    44,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,     3,  -110,
     0,   300,   127,   -11,   313,   190,     2,   319,    17,   -42,
  -114,   -41,   -83,     3,     7,   nil,    31,   -22,  -160,   nil,
   nil,   nil,  -158,   -86,   nil,   142,   -89,   426,   -29,   -15,
   nil,   -27,   -13,  -236,  -201,  -117,  -138,   nil,  -122,   -88,
  -127,  -163,    25,   -47,    14,    43,    16,    15,   -99,   -98,
  -143,   -37 ]

racc_goto_default = [
   nil,   nil,   nil,   124,    25,    29,    32,     2,     5,     8,
    10,    12,    14,    18,    21,    24,    28,    31,   nil,    53,
    76,    78,    79,    81,    83,    85,    86,    89,    30,   nil,
   nil,   nil,   nil,    59,   nil,    17,   nil,   nil,   126,   197,
   119,   120,   nil,   nil,   166,    80,    82,   nil,   117,    88,
   108,   nil,   nil,   185,   nil,   nil,   nil,   235,    68,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil ]

racc_token_table = {
 false => 0,
 Object.new => 1,
 :LBRACK => 2,
 :DQTEXT => 3,
 :SQTEXT => 4,
 :RBRACK => 5,
 :LBRACE => 6,
 :RBRACE => 7,
 :SYMBOL => 8,
 :FARROW => 9,
 :COMMA => 10,
 :TRUE => 11,
 :FALSE => 12,
 :EQUALS => 13,
 :APPENDS => 14,
 :LESSEQUAL => 15,
 :NOTEQUAL => 16,
 :DOT => 17,
 :COLON => 18,
 :LLCOLLECT => 19,
 :RRCOLLECT => 20,
 :QMARK => 21,
 :LPAREN => 22,
 :RPAREN => 23,
 :ISEQUAL => 24,
 :GREATEREQUAL => 25,
 :GREATERTHAN => 26,
 :LESSTHAN => 27,
 :IF => 28,
 :ELSE => 29,
 :IMPORT => 30,
 :DEFINE => 31,
 :ELSIF => 32,
 :VARIABLE => 33,
 :CLASS => 34,
 :INHERITS => 35,
 :NODE => 36,
 :BOOLEAN => 37,
 :NAME => 38,
 :SEMIC => 39,
 :CASE => 40,
 :DEFAULT => 41,
 :AT => 42,
 :LCOLLECT => 43,
 :RCOLLECT => 44,
 :CLASSNAME => 45,
 :CLASSREF => 46,
 :NOT => 47,
 :OR => 48,
 :AND => 49,
 :UNDEF => 50,
 :PARROW => 51,
 :PLUS => 52,
 :MINUS => 53,
 :TIMES => 54,
 :DIV => 55,
 :LSHIFT => 56,
 :RSHIFT => 57,
 :UMINUS => 58 }

racc_use_result_var = true

racc_nt_base = 59

Racc_arg = [
 racc_action_table,
 racc_action_check,
 racc_action_default,
 racc_action_pointer,
 racc_goto_table,
 racc_goto_check,
 racc_goto_default,
 racc_goto_pointer,
 racc_nt_base,
 racc_reduce_table,
 racc_token_table,
 racc_shift_n,
 racc_reduce_n,
 racc_use_result_var ]

Racc_token_to_s_table = [
'$end',
'error',
'LBRACK',
'DQTEXT',
'SQTEXT',
'RBRACK',
'LBRACE',
'RBRACE',
'SYMBOL',
'FARROW',
'COMMA',
'TRUE',
'FALSE',
'EQUALS',
'APPENDS',
'LESSEQUAL',
'NOTEQUAL',
'DOT',
'COLON',
'LLCOLLECT',
'RRCOLLECT',
'QMARK',
'LPAREN',
'RPAREN',
'ISEQUAL',
'GREATEREQUAL',
'GREATERTHAN',
'LESSTHAN',
'IF',
'ELSE',
'IMPORT',
'DEFINE',
'ELSIF',
'VARIABLE',
'CLASS',
'INHERITS',
'NODE',
'BOOLEAN',
'NAME',
'SEMIC',
'CASE',
'DEFAULT',
'AT',
'LCOLLECT',
'RCOLLECT',
'CLASSNAME',
'CLASSREF',
'NOT',
'OR',
'AND',
'UNDEF',
'PARROW',
'PLUS',
'MINUS',
'TIMES',
'DIV',
'LSHIFT',
'RSHIFT',
'UMINUS',
'$start',
'program',
'statements',
'nil',
'statement',
'resource',
'virtualresource',
'collection',
'assignment',
'casestatement',
'ifstatement',
'import',
'fstatement',
'definition',
'hostclass',
'nodedef',
'resourceoverride',
'append',
'funcvalues',
'namestring',
'resourceref',
'name',
'variable',
'type',
'boolean',
'funcrvalue',
'selector',
'quotedtext',
'classname',
'resourceinstances',
'endsemi',
'params',
'endcomma',
'classref',
'anyparams',
'at',
'collectrhand',
'collstatements',
'collstatement',
'colljoin',
'collexpr',
'colllval',
'simplervalue',
'resourceinst',
'resourcename',
'undef',
'array',
'expression',
'param',
'rvalue',
'addparam',
'anyparam',
'rvalues',
'comma',
'else',
'caseopts',
'caseopt',
'casevalues',
'selectlhand',
'svalues',
'selectval',
'sintvalues',
'qtexts',
'argumentlist',
'classparent',
'hostnames',
'nodeparent',
'hostname',
'nothing',
'arguments',
'argument',
'classnameordefault']

Racc_debug_parser = false

##### racc system variables end #####

 # reduce 0 omitted

module_eval <<'.,.,', 'grammar.ra', 42
  def _reduce_1( val, _values, result )
    if val[0]
        # Make sure we always return an array.
        if val[0].is_a?(AST::ASTArray)
            if val[0].children.empty?
                result = nil
            else
                result = val[0]
            end
        else
            result = aryfy(val[0])
        end
    else
        result = nil
    end
   result
  end
.,.,

 # reduce 2 omitted

 # reduce 3 omitted

module_eval <<'.,.,', 'grammar.ra', 58
  def _reduce_4( val, _values, result )
    if val[0] and val[1]
        if val[0].instance_of?(AST::ASTArray)
            val[0].push(val[1])
            result = val[0]
        else
            result = ast AST::ASTArray, :children => [val[0],val[1]]
        end
    elsif obj = (val[0] || val[1])
        result = obj
    else result = nil
    end
   result
  end
.,.,

 # reduce 5 omitted

 # reduce 6 omitted

 # reduce 7 omitted

 # reduce 8 omitted

 # reduce 9 omitted

 # reduce 10 omitted

 # reduce 11 omitted

 # reduce 12 omitted

 # reduce 13 omitted

 # reduce 14 omitted

 # reduce 15 omitted

 # reduce 16 omitted

 # reduce 17 omitted

module_eval <<'.,.,', 'grammar.ra', 81
  def _reduce_18( val, _values, result )
    args = aryfy(val[2])
    result = ast AST::Function,
        :name => val[0],
        :arguments => args,
        :ftype => :statement
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 88
  def _reduce_19( val, _values, result )
    args = aryfy(val[2])
    result = ast AST::Function,
        :name => val[0],
        :arguments => args,
        :ftype => :statement
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 93
  def _reduce_20( val, _values, result )
    result = ast AST::Function,
        :name => val[0],
        :arguments => AST::ASTArray.new({}),
        :ftype => :statement
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 100
  def _reduce_21( val, _values, result )
    args = aryfy(val[1])
    result = ast AST::Function,
        :name => val[0],
        :arguments => args,
        :ftype => :statement
   result
  end
.,.,

 # reduce 22 omitted

 # reduce 23 omitted

module_eval <<'.,.,', 'grammar.ra', 108
  def _reduce_24( val, _values, result )
    result = aryfy(val[0], val[2])
    result.line = @lexer.line
    result.file = @lexer.file
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 117
  def _reduce_25( val, _values, result )
    unless val[0].is_a?(AST::ASTArray)
        val[0] = aryfy(val[0])
    end

    val[0].push(val[2])

    result = val[0]
   result
  end
.,.,

 # reduce 26 omitted

 # reduce 27 omitted

 # reduce 28 omitted

 # reduce 29 omitted

 # reduce 30 omitted

 # reduce 31 omitted

 # reduce 32 omitted

module_eval <<'.,.,', 'grammar.ra', 130
  def _reduce_33( val, _values, result )
                    result = ast AST::Name, :value => val[0]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 151
  def _reduce_34( val, _values, result )
    array = val[2]
    if array.instance_of?(AST::ResourceInstance)
        array = [array]
    end
    result = ast AST::ASTArray

    # this iterates across each specified resourceinstance
    array.each { |instance|
        unless instance.instance_of?(AST::ResourceInstance)
            raise Puppet::Dev, "Got something that isn't an instance"
        end
        # now, i need to somehow differentiate between those things with
        # arrays in their names, and normal things
        result.push ast(AST::Resource,
            :type => val[0],
            :title => instance[0],
            :params => instance[1])
    }
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 154
  def _reduce_35( val, _values, result )
    # This is a deprecated syntax.
    error "All resource specifications require names"
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 157
  def _reduce_36( val, _values, result )
    # a defaults setting for a type
    result = ast(AST::ResourceDefaults, :type => val[0], :params => val[2])
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 162
  def _reduce_37( val, _values, result )
    result = ast AST::ResourceOverride, :object => val[0], :params => val[2]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 189
  def _reduce_38( val, _values, result )
    type = val[0]

    if (type == :exported and ! Puppet[:storeconfigs]) and ! Puppet[:parseonly]
        Puppet.warning addcontext("You cannot collect without storeconfigs being set")
    end

    if val[1].is_a? AST::ResourceDefaults
        error "Defaults are not virtualizable"
    end

    method = type.to_s + "="

    # Just mark our resources as exported and pass them through.
    if val[1].instance_of?(AST::ASTArray)
        val[1].each do |obj|
            obj.send(method, true)
        end
    else
        val[1].send(method, true)
    end

    result = val[1]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 190
  def _reduce_39( val, _values, result )
 result = :virtual
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 191
  def _reduce_40( val, _values, result )
 result = :exported
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 214
  def _reduce_41( val, _values, result )
    if val[0] =~ /^[a-z]/
        Puppet.warning addcontext("Collection names must now be capitalized")
    end
    type = val[0].downcase
    args = {:type => type}

    if val[1].is_a?(AST::CollExpr)
        args[:query] = val[1]
        args[:query].type = type
        args[:form] = args[:query].form
    else
        args[:form] = val[1]
    end
    if args[:form] == :exported and ! Puppet[:storeconfigs] and ! Puppet[:parseonly]
        Puppet.warning addcontext("You cannot collect exported resources without storeconfigs being set; the collection will be ignored")
    end
    result = ast AST::Collection, args
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 224
  def _reduce_42( val, _values, result )
    if val[1]
        result = val[1]
        result.form = :virtual
    else
        result = :virtual
    end
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 232
  def _reduce_43( val, _values, result )
    if val[1]
        result = val[1]
        result.form = :exported
    else
        result = :exported
    end
   result
  end
.,.,

 # reduce 44 omitted

 # reduce 45 omitted

module_eval <<'.,.,', 'grammar.ra', 240
  def _reduce_46( val, _values, result )
    result = ast AST::CollExpr, :test1 => val[0], :oper => val[1], :test2 => val[2]
   result
  end
.,.,

 # reduce 47 omitted

module_eval <<'.,.,', 'grammar.ra', 246
  def _reduce_48( val, _values, result )
    result = val[1]
    result.parens = true
   result
  end
.,.,

 # reduce 49 omitted

 # reduce 50 omitted

module_eval <<'.,.,', 'grammar.ra', 254
  def _reduce_51( val, _values, result )
    result = ast AST::CollExpr, :test1 => val[0], :oper => val[1], :test2 => val[2]
    #result = ast AST::CollExpr
    #result.push *val
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 259
  def _reduce_52( val, _values, result )
    result = ast AST::CollExpr, :test1 => val[0], :oper => val[1], :test2 => val[2]
    #result = ast AST::CollExpr
    #result.push *val
   result
  end
.,.,

 # reduce 53 omitted

 # reduce 54 omitted

module_eval <<'.,.,', 'grammar.ra', 266
  def _reduce_55( val, _values, result )
    result = ast AST::ResourceInstance, :children => [val[0],val[2]]
   result
  end
.,.,

 # reduce 56 omitted

module_eval <<'.,.,', 'grammar.ra', 276
  def _reduce_57( val, _values, result )
    if val[0].instance_of?(AST::ResourceInstance)
        result = ast AST::ASTArray, :children => [val[0],val[2]]
    else
        val[0].push val[2]
        result = val[0]
    end
   result
  end
.,.,

 # reduce 58 omitted

 # reduce 59 omitted

module_eval <<'.,.,', 'grammar.ra', 283
  def _reduce_60( val, _values, result )
    result = ast AST::Undef, :value => :undef
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 287
  def _reduce_61( val, _values, result )
    result = ast AST::Name, :value => val[0]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 291
  def _reduce_62( val, _values, result )
    result = ast AST::Type, :value => val[0]
   result
  end
.,.,

 # reduce 63 omitted

 # reduce 64 omitted

 # reduce 65 omitted

 # reduce 66 omitted

 # reduce 67 omitted

 # reduce 68 omitted

module_eval <<'.,.,', 'grammar.ra', 307
  def _reduce_69( val, _values, result )
    if val[0] =~ /::/
        raise Puppet::ParseError, "Cannot assign to variables in other namespaces"
    end
    # this is distinct from referencing a variable
    variable = ast AST::Name, :value => val[0]
    result = ast AST::VarDef, :name => variable, :value => val[2]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 312
  def _reduce_70( val, _values, result )
    variable = ast AST::Name, :value => val[0]
    result = ast AST::VarDef, :name => variable, :value => val[2], :append => true
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 317
  def _reduce_71( val, _values, result )
    result = ast AST::ASTArray
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 317
  def _reduce_72( val, _values, result )
 result = val[0]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 326
  def _reduce_73( val, _values, result )
    if val[0].instance_of?(AST::ASTArray)
        val[0].push(val[2])
        result = val[0]
    else
        result = ast AST::ASTArray, :children => [val[0],val[2]]
    end
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 330
  def _reduce_74( val, _values, result )
    result = ast AST::ResourceParam, :param => val[0], :value => val[2]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 335
  def _reduce_75( val, _values, result )
    result = ast AST::ResourceParam, :param => val[0], :value => val[2],
                                     :add => true
   result
  end
.,.,

 # reduce 76 omitted

 # reduce 77 omitted

module_eval <<'.,.,', 'grammar.ra', 343
  def _reduce_78( val, _values, result )
    result = ast AST::ASTArray
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 343
  def _reduce_79( val, _values, result )
 result = val[0]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 352
  def _reduce_80( val, _values, result )
    if val[0].instance_of?(AST::ASTArray)
        val[0].push(val[2])
        result = val[0]
    else
        result = ast AST::ASTArray, :children => [val[0],val[2]]
    end
   result
  end
.,.,

 # reduce 81 omitted

module_eval <<'.,.,', 'grammar.ra', 361
  def _reduce_82( val, _values, result )
    if val[0].instance_of?(AST::ASTArray)
        result = val[0].push(val[2])
    else
        result = ast AST::ASTArray, :children => [val[0],val[2]]
    end
   result
  end
.,.,

 # reduce 83 omitted

 # reduce 84 omitted

 # reduce 85 omitted

 # reduce 86 omitted

 # reduce 87 omitted

 # reduce 88 omitted

 # reduce 89 omitted

 # reduce 90 omitted

 # reduce 91 omitted

 # reduce 92 omitted

 # reduce 93 omitted

 # reduce 94 omitted

 # reduce 95 omitted

 # reduce 96 omitted

 # reduce 97 omitted

 # reduce 98 omitted

module_eval <<'.,.,', 'grammar.ra', 388
  def _reduce_99( val, _values, result )
    args = aryfy(val[2])
    result = ast AST::Function,
        :name => val[0],
        :arguments => args,
        :ftype => :rvalue
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 393
  def _reduce_100( val, _values, result )
    result = ast AST::Function,
        :name => val[0],
        :arguments => AST::ASTArray.new({}),
        :ftype => :rvalue
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 397
  def _reduce_101( val, _values, result )
    result = ast AST::String, :value => val[0]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 399
  def _reduce_102( val, _values, result )
    result = ast AST::FlatString, :value => val[0]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 403
  def _reduce_103( val, _values, result )
    result = ast AST::Boolean, :value => val[0]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 408
  def _reduce_104( val, _values, result )
    Puppet.warning addcontext("Deprecation notice:  Resource references should now be capitalized")
    result = ast AST::ResourceReference, :type => val[0], :title => val[2]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 410
  def _reduce_105( val, _values, result )
    result = ast AST::ResourceReference, :type => val[0], :title => val[2]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 423
  def _reduce_106( val, _values, result )
    args = {
        :test => val[1],
        :statements => val[3]
    }

    if val[5]
        args[:else] = val[5]
    end

    result = ast AST::IfStatement, args
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 435
  def _reduce_107( val, _values, result )
    args = {
        :test => val[1],
        :statements => ast(AST::Nop)
    }

    if val[4]
        args[:else] = val[4]
    end

    result = ast AST::IfStatement, args
   result
  end
.,.,

 # reduce 108 omitted

module_eval <<'.,.,', 'grammar.ra', 440
  def _reduce_109( val, _values, result )
    result = ast AST::Else, :statements => val[2]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 443
  def _reduce_110( val, _values, result )
    result = ast AST::Else, :statements => ast(AST::Nop)
   result
  end
.,.,

 # reduce 111 omitted

module_eval <<'.,.,', 'grammar.ra', 460
  def _reduce_112( val, _values, result )
    result = ast AST::ArithmeticOperator, :operator => val[1], :lval => val[0], :rval => val[2]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 463
  def _reduce_113( val, _values, result )
    result = ast AST::ArithmeticOperator, :operator => val[1], :lval => val[0], :rval => val[2]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 466
  def _reduce_114( val, _values, result )
    result = ast AST::ArithmeticOperator, :operator => val[1], :lval => val[0], :rval => val[2]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 469
  def _reduce_115( val, _values, result )
    result = ast AST::ArithmeticOperator, :operator => val[1], :lval => val[0], :rval => val[2]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 472
  def _reduce_116( val, _values, result )
    result = ast AST::ArithmeticOperator, :operator => val[1], :lval => val[0], :rval => val[2]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 475
  def _reduce_117( val, _values, result )
    result = ast AST::ArithmeticOperator, :operator => val[1], :lval => val[0], :rval => val[2]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 478
  def _reduce_118( val, _values, result )
    result = ast AST::Minus, :value => val[1]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 481
  def _reduce_119( val, _values, result )
    result = ast AST::ComparisonOperator, :operator => val[1], :lval => val[0], :rval => val[2]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 484
  def _reduce_120( val, _values, result )
    result = ast AST::ComparisonOperator, :operator => val[1], :lval => val[0], :rval => val[2]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 487
  def _reduce_121( val, _values, result )
    result = ast AST::ComparisonOperator, :operator => val[1], :lval => val[0], :rval => val[2]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 490
  def _reduce_122( val, _values, result )
    result = ast AST::ComparisonOperator, :operator => val[1], :lval => val[0], :rval => val[2]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 493
  def _reduce_123( val, _values, result )
    result = ast AST::ComparisonOperator, :operator => val[1], :lval => val[0], :rval => val[2]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 496
  def _reduce_124( val, _values, result )
    result = ast AST::ComparisonOperator, :operator => val[1], :lval => val[0], :rval => val[2]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 499
  def _reduce_125( val, _values, result )
    result = ast AST::Not, :value => val[1]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 502
  def _reduce_126( val, _values, result )
    result = ast AST::BooleanOperator, :operator => val[1], :lval => val[0], :rval => val[2]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 505
  def _reduce_127( val, _values, result )
    result = ast AST::BooleanOperator, :operator => val[1], :lval => val[0], :rval => val[2]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 508
  def _reduce_128( val, _values, result )
    result = val[1]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 516
  def _reduce_129( val, _values, result )
    options = val[3]
    unless options.instance_of?(AST::ASTArray)
        options = ast AST::ASTArray, :children => [val[3]]
    end
    result = ast AST::CaseStatement, :test => val[1], :options => options
   result
  end
.,.,

 # reduce 130 omitted

module_eval <<'.,.,', 'grammar.ra', 526
  def _reduce_131( val, _values, result )
    if val[0].instance_of?(AST::ASTArray)
        val[0].push val[1]
        result = val[0]
    else
        result = ast AST::ASTArray, :children => [val[0], val[1]]
    end
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 530
  def _reduce_132( val, _values, result )
    result = ast AST::CaseOpt, :value => val[0], :statements => val[3]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 535
  def _reduce_133( val, _values, result )
    result = ast(AST::CaseOpt,
        :value => val[0],
        :statements => ast(AST::ASTArray)
    )
   result
  end
.,.,

 # reduce 134 omitted

module_eval <<'.,.,', 'grammar.ra', 545
  def _reduce_135( val, _values, result )
    if val[0].instance_of?(AST::ASTArray)
        val[0].push(val[2])
        result = val[0]
    else
        result = ast AST::ASTArray, :children => [val[0],val[2]]
    end
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 549
  def _reduce_136( val, _values, result )
    result = ast AST::Selector, :param => val[0], :values => val[2]
   result
  end
.,.,

 # reduce 137 omitted

module_eval <<'.,.,', 'grammar.ra', 551
  def _reduce_138( val, _values, result )
 result = val[1]
   result
  end
.,.,

 # reduce 139 omitted

module_eval <<'.,.,', 'grammar.ra', 562
  def _reduce_140( val, _values, result )
    if val[0].instance_of?(AST::ASTArray)
        val[0].push(val[2])
        result = val[0]
    else
        result = ast AST::ASTArray, :children => [val[0],val[2]]
    end
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 566
  def _reduce_141( val, _values, result )
    result = ast AST::ResourceParam, :param => val[0], :value => val[2]
   result
  end
.,.,

 # reduce 142 omitted

 # reduce 143 omitted

 # reduce 144 omitted

 # reduce 145 omitted

 # reduce 146 omitted

 # reduce 147 omitted

 # reduce 148 omitted

module_eval <<'.,.,', 'grammar.ra', 577
  def _reduce_149( val, _values, result )
    result = ast AST::Default, :value => val[0]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 579
  def _reduce_150( val, _values, result )
 result = [val[0].value]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 583
  def _reduce_151( val, _values, result )
    results = val[0] << val[2].value
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 591
  def _reduce_152( val, _values, result )
    val[1].each do |file|
        import(file)
    end

    result = AST::ASTArray.new(:children => [])
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 601
  def _reduce_153( val, _values, result )
    newdefine classname(val[1]), :arguments => val[2], :code => val[4]
    @lexer.indefine = false
    result = nil

#}           | DEFINE NAME argumentlist parent LBRACE RBRACE {
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 605
  def _reduce_154( val, _values, result )
    newdefine classname(val[1]), :arguments => val[2]
    @lexer.indefine = false
    result = nil
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 613
  def _reduce_155( val, _values, result )
    # Our class gets defined in the parent namespace, not our own.
    @lexer.namepop
    newclass classname(val[1]), :code => val[4], :parent => val[2]
    result = nil
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 618
  def _reduce_156( val, _values, result )
    # Our class gets defined in the parent namespace, not our own.
    @lexer.namepop
    newclass classname(val[1]), :parent => val[2]
    result = nil
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 623
  def _reduce_157( val, _values, result )
    newnode val[1], :parent => val[2], :code => val[4]
    result = nil
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 626
  def _reduce_158( val, _values, result )
    newnode val[1], :parent => val[2]
    result = nil
   result
  end
.,.,

 # reduce 159 omitted

 # reduce 160 omitted

 # reduce 161 omitted

 # reduce 162 omitted

module_eval <<'.,.,', 'grammar.ra', 640
  def _reduce_163( val, _values, result )
    result = val[0]
    result = [result] unless result.is_a?(Array)
    result << val[2]
   result
  end
.,.,

 # reduce 164 omitted

 # reduce 165 omitted

 # reduce 166 omitted

 # reduce 167 omitted

module_eval <<'.,.,', 'grammar.ra', 649
  def _reduce_168( val, _values, result )
    result = nil
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 653
  def _reduce_169( val, _values, result )
    result = ast AST::ASTArray, :children => []
   result
  end
.,.,

 # reduce 170 omitted

module_eval <<'.,.,', 'grammar.ra', 658
  def _reduce_171( val, _values, result )
    result = nil
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 662
  def _reduce_172( val, _values, result )
    result = val[1]
    result = [result] unless result[0].is_a?(Array)
   result
  end
.,.,

 # reduce 173 omitted

module_eval <<'.,.,', 'grammar.ra', 669
  def _reduce_174( val, _values, result )
    result = val[0]
    result = [result] unless result[0].is_a?(Array)
    result << val[2]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 674
  def _reduce_175( val, _values, result )
    Puppet.warning addcontext("Deprecation notice: must now include '$' in prototype")
    result = [val[0], val[2]]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 678
  def _reduce_176( val, _values, result )
    Puppet.warning addcontext("Deprecation notice: must now include '$' in prototype")
    result = [val[0]]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 680
  def _reduce_177( val, _values, result )
    result = [val[0], val[2]]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 682
  def _reduce_178( val, _values, result )
    result = [val[0]]
   result
  end
.,.,

 # reduce 179 omitted

module_eval <<'.,.,', 'grammar.ra', 687
  def _reduce_180( val, _values, result )
    result = val[1]
   result
  end
.,.,

 # reduce 181 omitted

module_eval <<'.,.,', 'grammar.ra', 692
  def _reduce_182( val, _values, result )
    result = val[1]
   result
  end
.,.,

 # reduce 183 omitted

 # reduce 184 omitted

module_eval <<'.,.,', 'grammar.ra', 698
  def _reduce_185( val, _values, result )
    result = ast AST::Variable, :value => val[0]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 706
  def _reduce_186( val, _values, result )
    if val[1].instance_of?(AST::ASTArray)
        result = val[1]
    else
        result = ast AST::ASTArray, :children => [val[1]]
    end
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 708
  def _reduce_187( val, _values, result )
    result = ast AST::ASTArray
   result
  end
.,.,

 # reduce 188 omitted

 # reduce 189 omitted

 # reduce 190 omitted

module_eval <<'.,.,', 'grammar.ra', 713
  def _reduce_191( val, _values, result )
 result = nil
   result
  end
.,.,

 def _reduce_none( val, _values, result )
  result
 end

    end   # class Parser

  end   # module Parser

end   # module Puppet
